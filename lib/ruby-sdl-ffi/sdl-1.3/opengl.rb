#--
#
# This file is one part of:
#
# Ruby-SDL-FFI - Ruby-FFI bindings to SDL
#
# Copyright (c) 2009 John Croisant
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#++


module SDL

  GL_GLEXT_VERSION = 54
  GL_UNSIGNED_BYTE_3_3_2 = 0x8032
  GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033
  GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034
  GL_UNSIGNED_INT_8_8_8_8 = 0x8035
  GL_UNSIGNED_INT_10_10_10_2 = 0x8036
  GL_TEXTURE_BINDING_3D = 0x806A
  GL_PACK_SKIP_IMAGES = 0x806B
  GL_PACK_IMAGE_HEIGHT = 0x806C
  GL_UNPACK_SKIP_IMAGES = 0x806D
  GL_UNPACK_IMAGE_HEIGHT = 0x806E
  GL_TEXTURE_3D = 0x806F
  GL_PROXY_TEXTURE_3D = 0x8070
  GL_TEXTURE_DEPTH = 0x8071
  GL_TEXTURE_WRAP_R = 0x8072
  GL_MAX_3D_TEXTURE_SIZE = 0x8073
  GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362
  GL_UNSIGNED_SHORT_5_6_5 = 0x8363
  GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364
  GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365
  GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366
  GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367
  GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368
  GL_BGR = 0x80E0
  GL_BGRA = 0x80E1
  GL_MAX_ELEMENTS_VERTICES = 0x80E8
  GL_MAX_ELEMENTS_INDICES = 0x80E9
  GL_CLAMP_TO_EDGE = 0x812F
  GL_TEXTURE_MIN_LOD = 0x813A
  GL_TEXTURE_MAX_LOD = 0x813B
  GL_TEXTURE_BASE_LEVEL = 0x813C
  GL_TEXTURE_MAX_LEVEL = 0x813D
  GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12
  GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13
  GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22
  GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23
  GL_ALIASED_LINE_WIDTH_RANGE = 0x846E
  GL_RESCALE_NORMAL = 0x803A
  GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8
  GL_SINGLE_COLOR = 0x81F9
  GL_SEPARATE_SPECULAR_COLOR = 0x81FA
  GL_ALIASED_POINT_SIZE_RANGE = 0x846D
  GL_CONSTANT_COLOR = 0x8001
  GL_ONE_MINUS_CONSTANT_COLOR = 0x8002
  GL_CONSTANT_ALPHA = 0x8003
  GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004
  GL_BLEND_COLOR = 0x8005
  GL_FUNC_ADD = 0x8006
  GL_MIN = 0x8007
  GL_MAX = 0x8008
  GL_BLEND_EQUATION = 0x8009
  GL_FUNC_SUBTRACT = 0x800A
  GL_FUNC_REVERSE_SUBTRACT = 0x800B
  GL_CONVOLUTION_1D = 0x8010
  GL_CONVOLUTION_2D = 0x8011
  GL_SEPARABLE_2D = 0x8012
  GL_CONVOLUTION_BORDER_MODE = 0x8013
  GL_CONVOLUTION_FILTER_SCALE = 0x8014
  GL_CONVOLUTION_FILTER_BIAS = 0x8015
  GL_REDUCE = 0x8016
  GL_CONVOLUTION_FORMAT = 0x8017
  GL_CONVOLUTION_WIDTH = 0x8018
  GL_CONVOLUTION_HEIGHT = 0x8019
  GL_MAX_CONVOLUTION_WIDTH = 0x801A
  GL_MAX_CONVOLUTION_HEIGHT = 0x801B
  GL_POST_CONVOLUTION_RED_SCALE = 0x801C
  GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D
  GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E
  GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F
  GL_POST_CONVOLUTION_RED_BIAS = 0x8020
  GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021
  GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022
  GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023
  GL_HISTOGRAM = 0x8024
  GL_PROXY_HISTOGRAM = 0x8025
  GL_HISTOGRAM_WIDTH = 0x8026
  GL_HISTOGRAM_FORMAT = 0x8027
  GL_HISTOGRAM_RED_SIZE = 0x8028
  GL_HISTOGRAM_GREEN_SIZE = 0x8029
  GL_HISTOGRAM_BLUE_SIZE = 0x802A
  GL_HISTOGRAM_ALPHA_SIZE = 0x802B
  GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C
  GL_HISTOGRAM_SINK = 0x802D
  GL_MINMAX = 0x802E
  GL_MINMAX_FORMAT = 0x802F
  GL_MINMAX_SINK = 0x8030
  GL_TABLE_TOO_LARGE = 0x8031
  GL_COLOR_MATRIX = 0x80B1
  GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2
  GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3
  GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4
  GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5
  GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6
  GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7
  GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8
  GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9
  GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA
  GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB
  GL_COLOR_TABLE = 0x80D0
  GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1
  GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2
  GL_PROXY_COLOR_TABLE = 0x80D3
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5
  GL_COLOR_TABLE_SCALE = 0x80D6
  GL_COLOR_TABLE_BIAS = 0x80D7
  GL_COLOR_TABLE_FORMAT = 0x80D8
  GL_COLOR_TABLE_WIDTH = 0x80D9
  GL_COLOR_TABLE_RED_SIZE = 0x80DA
  GL_COLOR_TABLE_GREEN_SIZE = 0x80DB
  GL_COLOR_TABLE_BLUE_SIZE = 0x80DC
  GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD
  GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE
  GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF
  GL_CONSTANT_BORDER = 0x8151
  GL_REPLICATE_BORDER = 0x8153
  GL_CONVOLUTION_BORDER_COLOR = 0x8154
  GL_TEXTURE0 = 0x84C0
  GL_TEXTURE1 = 0x84C1
  GL_TEXTURE2 = 0x84C2
  GL_TEXTURE3 = 0x84C3
  GL_TEXTURE4 = 0x84C4
  GL_TEXTURE5 = 0x84C5
  GL_TEXTURE6 = 0x84C6
  GL_TEXTURE7 = 0x84C7
  GL_TEXTURE8 = 0x84C8
  GL_TEXTURE9 = 0x84C9
  GL_TEXTURE10 = 0x84CA
  GL_TEXTURE11 = 0x84CB
  GL_TEXTURE12 = 0x84CC
  GL_TEXTURE13 = 0x84CD
  GL_TEXTURE14 = 0x84CE
  GL_TEXTURE15 = 0x84CF
  GL_TEXTURE16 = 0x84D0
  GL_TEXTURE17 = 0x84D1
  GL_TEXTURE18 = 0x84D2
  GL_TEXTURE19 = 0x84D3
  GL_TEXTURE20 = 0x84D4
  GL_TEXTURE21 = 0x84D5
  GL_TEXTURE22 = 0x84D6
  GL_TEXTURE23 = 0x84D7
  GL_TEXTURE24 = 0x84D8
  GL_TEXTURE25 = 0x84D9
  GL_TEXTURE26 = 0x84DA
  GL_TEXTURE27 = 0x84DB
  GL_TEXTURE28 = 0x84DC
  GL_TEXTURE29 = 0x84DD
  GL_TEXTURE30 = 0x84DE
  GL_TEXTURE31 = 0x84DF
  GL_ACTIVE_TEXTURE = 0x84E0
  GL_MULTISAMPLE = 0x809D
  GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E
  GL_SAMPLE_ALPHA_TO_ONE = 0x809F
  GL_SAMPLE_COVERAGE = 0x80A0
  GL_SAMPLE_BUFFERS = 0x80A8
  GL_SAMPLES = 0x80A9
  GL_SAMPLE_COVERAGE_VALUE = 0x80AA
  GL_SAMPLE_COVERAGE_INVERT = 0x80AB
  GL_TEXTURE_CUBE_MAP = 0x8513
  GL_TEXTURE_BINDING_CUBE_MAP = 0x8514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A
  GL_PROXY_TEXTURE_CUBE_MAP = 0x851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C
  GL_COMPRESSED_RGB = 0x84ED
  GL_COMPRESSED_RGBA = 0x84EE
  GL_TEXTURE_COMPRESSION_HINT = 0x84EF
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0
  GL_TEXTURE_COMPRESSED = 0x86A1
  GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2
  GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3
  GL_CLAMP_TO_BORDER = 0x812D
  GL_CLIENT_ACTIVE_TEXTURE = 0x84E1
  GL_MAX_TEXTURE_UNITS = 0x84E2
  GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3
  GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4
  GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5
  GL_TRANSPOSE_COLOR_MATRIX = 0x84E6
  GL_MULTISAMPLE_BIT = 0x20000000
  GL_NORMAL_MAP = 0x8511
  GL_REFLECTION_MAP = 0x8512
  GL_COMPRESSED_ALPHA = 0x84E9
  GL_COMPRESSED_LUMINANCE = 0x84EA
  GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB
  GL_COMPRESSED_INTENSITY = 0x84EC
  GL_COMBINE = 0x8570
  GL_COMBINE_RGB = 0x8571
  GL_COMBINE_ALPHA = 0x8572
  GL_SOURCE0_RGB = 0x8580
  GL_SOURCE1_RGB = 0x8581
  GL_SOURCE2_RGB = 0x8582
  GL_SOURCE0_ALPHA = 0x8588
  GL_SOURCE1_ALPHA = 0x8589
  GL_SOURCE2_ALPHA = 0x858A
  GL_OPERAND0_RGB = 0x8590
  GL_OPERAND1_RGB = 0x8591
  GL_OPERAND2_RGB = 0x8592
  GL_OPERAND0_ALPHA = 0x8598
  GL_OPERAND1_ALPHA = 0x8599
  GL_OPERAND2_ALPHA = 0x859A
  GL_RGB_SCALE = 0x8573
  GL_ADD_SIGNED = 0x8574
  GL_INTERPOLATE = 0x8575
  GL_SUBTRACT = 0x84E7
  GL_CONSTANT = 0x8576
  GL_PRIMARY_COLOR = 0x8577
  GL_PREVIOUS = 0x8578
  GL_DOT3_RGB = 0x86AE
  GL_DOT3_RGBA = 0x86AF
  GL_BLEND_DST_RGB = 0x80C8
  GL_BLEND_SRC_RGB = 0x80C9
  GL_BLEND_DST_ALPHA = 0x80CA
  GL_BLEND_SRC_ALPHA = 0x80CB
  GL_POINT_FADE_THRESHOLD_SIZE = 0x8128
  GL_DEPTH_COMPONENT16 = 0x81A5
  GL_DEPTH_COMPONENT24 = 0x81A6
  GL_DEPTH_COMPONENT32 = 0x81A7
  GL_MIRRORED_REPEAT = 0x8370
  GL_MAX_TEXTURE_LOD_BIAS = 0x84FD
  GL_TEXTURE_LOD_BIAS = 0x8501
  GL_INCR_WRAP = 0x8507
  GL_DECR_WRAP = 0x8508
  GL_TEXTURE_DEPTH_SIZE = 0x884A
  GL_TEXTURE_COMPARE_MODE = 0x884C
  GL_TEXTURE_COMPARE_FUNC = 0x884D
  GL_POINT_SIZE_MIN = 0x8126
  GL_POINT_SIZE_MAX = 0x8127
  GL_POINT_DISTANCE_ATTENUATION = 0x8129
  GL_GENERATE_MIPMAP = 0x8191
  GL_GENERATE_MIPMAP_HINT = 0x8192
  GL_FOG_COORDINATE_SOURCE = 0x8450
  GL_FOG_COORDINATE = 0x8451
  GL_FRAGMENT_DEPTH = 0x8452
  GL_CURRENT_FOG_COORDINATE = 0x8453
  GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454
  GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455
  GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456
  GL_FOG_COORDINATE_ARRAY = 0x8457
  GL_COLOR_SUM = 0x8458
  GL_CURRENT_SECONDARY_COLOR = 0x8459
  GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A
  GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B
  GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C
  GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D
  GL_SECONDARY_COLOR_ARRAY = 0x845E
  GL_TEXTURE_FILTER_CONTROL = 0x8500
  GL_DEPTH_TEXTURE_MODE = 0x884B
  GL_COMPARE_R_TO_TEXTURE = 0x884E
  GL_BUFFER_SIZE = 0x8764
  GL_BUFFER_USAGE = 0x8765
  GL_QUERY_COUNTER_BITS = 0x8864
  GL_CURRENT_QUERY = 0x8865
  GL_QUERY_RESULT = 0x8866
  GL_QUERY_RESULT_AVAILABLE = 0x8867
  GL_ARRAY_BUFFER = 0x8892
  GL_ELEMENT_ARRAY_BUFFER = 0x8893
  GL_ARRAY_BUFFER_BINDING = 0x8894
  GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F
  GL_READ_ONLY = 0x88B8
  GL_WRITE_ONLY = 0x88B9
  GL_READ_WRITE = 0x88BA
  GL_BUFFER_ACCESS = 0x88BB
  GL_BUFFER_MAPPED = 0x88BC
  GL_BUFFER_MAP_POINTER = 0x88BD
  GL_STREAM_DRAW = 0x88E0
  GL_STREAM_READ = 0x88E1
  GL_STREAM_COPY = 0x88E2
  GL_STATIC_DRAW = 0x88E4
  GL_STATIC_READ = 0x88E5
  GL_STATIC_COPY = 0x88E6
  GL_DYNAMIC_DRAW = 0x88E8
  GL_DYNAMIC_READ = 0x88E9
  GL_DYNAMIC_COPY = 0x88EA
  GL_SAMPLES_PASSED = 0x8914
  GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896
  GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897
  GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898
  GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D
  GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E
  GL_FOG_COORD_SRC = 0x8450
  GL_FOG_COORD = 0x8451
  GL_CURRENT_FOG_COORD = 0x8453
  GL_FOG_COORD_ARRAY_TYPE = 0x8454
  GL_FOG_COORD_ARRAY_STRIDE = 0x8455
  GL_FOG_COORD_ARRAY_POINTER = 0x8456
  GL_FOG_COORD_ARRAY = 0x8457
  GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D
  GL_SRC0_RGB = 0x8580
  GL_SRC1_RGB = 0x8581
  GL_SRC2_RGB = 0x8582
  GL_SRC0_ALPHA = 0x8588
  GL_SRC1_ALPHA = 0x8589
  GL_SRC2_ALPHA = 0x858A
  GL_BLEND_EQUATION_RGB = 0x8009
  GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622
  GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623
  GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624
  GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625
  GL_CURRENT_VERTEX_ATTRIB = 0x8626
  GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642
  GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645
  GL_STENCIL_BACK_FUNC = 0x8800
  GL_STENCIL_BACK_FAIL = 0x8801
  GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802
  GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803
  GL_MAX_DRAW_BUFFERS = 0x8824
  GL_DRAW_BUFFER0 = 0x8825
  GL_DRAW_BUFFER1 = 0x8826
  GL_DRAW_BUFFER2 = 0x8827
  GL_DRAW_BUFFER3 = 0x8828
  GL_DRAW_BUFFER4 = 0x8829
  GL_DRAW_BUFFER5 = 0x882A
  GL_DRAW_BUFFER6 = 0x882B
  GL_DRAW_BUFFER7 = 0x882C
  GL_DRAW_BUFFER8 = 0x882D
  GL_DRAW_BUFFER9 = 0x882E
  GL_DRAW_BUFFER10 = 0x882F
  GL_DRAW_BUFFER11 = 0x8830
  GL_DRAW_BUFFER12 = 0x8831
  GL_DRAW_BUFFER13 = 0x8832
  GL_DRAW_BUFFER14 = 0x8833
  GL_DRAW_BUFFER15 = 0x8834
  GL_BLEND_EQUATION_ALPHA = 0x883D
  GL_MAX_VERTEX_ATTRIBS = 0x8869
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A
  GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872
  GL_FRAGMENT_SHADER = 0x8B30
  GL_VERTEX_SHADER = 0x8B31
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49
  GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A
  GL_MAX_VARYING_FLOATS = 0x8B4B
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D
  GL_SHADER_TYPE = 0x8B4F
  GL_FLOAT_VEC2 = 0x8B50
  GL_FLOAT_VEC3 = 0x8B51
  GL_FLOAT_VEC4 = 0x8B52
  GL_INT_VEC2 = 0x8B53
  GL_INT_VEC3 = 0x8B54
  GL_INT_VEC4 = 0x8B55
  GL_BOOL = 0x8B56
  GL_BOOL_VEC2 = 0x8B57
  GL_BOOL_VEC3 = 0x8B58
  GL_BOOL_VEC4 = 0x8B59
  GL_FLOAT_MAT2 = 0x8B5A
  GL_FLOAT_MAT3 = 0x8B5B
  GL_FLOAT_MAT4 = 0x8B5C
  GL_SAMPLER_1D = 0x8B5D
  GL_SAMPLER_2D = 0x8B5E
  GL_SAMPLER_3D = 0x8B5F
  GL_SAMPLER_CUBE = 0x8B60
  GL_SAMPLER_1D_SHADOW = 0x8B61
  GL_SAMPLER_2D_SHADOW = 0x8B62
  GL_DELETE_STATUS = 0x8B80
  GL_COMPILE_STATUS = 0x8B81
  GL_LINK_STATUS = 0x8B82
  GL_VALIDATE_STATUS = 0x8B83
  GL_INFO_LOG_LENGTH = 0x8B84
  GL_ATTACHED_SHADERS = 0x8B85
  GL_ACTIVE_UNIFORMS = 0x8B86
  GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87
  GL_SHADER_SOURCE_LENGTH = 0x8B88
  GL_ACTIVE_ATTRIBUTES = 0x8B89
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
  GL_SHADING_LANGUAGE_VERSION = 0x8B8C
  GL_CURRENT_PROGRAM = 0x8B8D
  GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0
  GL_LOWER_LEFT = 0x8CA1
  GL_UPPER_LEFT = 0x8CA2
  GL_STENCIL_BACK_REF = 0x8CA3
  GL_STENCIL_BACK_VALUE_MASK = 0x8CA4
  GL_STENCIL_BACK_WRITEMASK = 0x8CA5
  GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643
  GL_POINT_SPRITE = 0x8861
  GL_COORD_REPLACE = 0x8862
  GL_MAX_TEXTURE_COORDS = 0x8871
  GL_PIXEL_PACK_BUFFER = 0x88EB
  GL_PIXEL_UNPACK_BUFFER = 0x88EC
  GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED
  GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF
  GL_FLOAT_MAT2x3 = 0x8B65
  GL_FLOAT_MAT2x4 = 0x8B66
  GL_FLOAT_MAT3x2 = 0x8B67
  GL_FLOAT_MAT3x4 = 0x8B68
  GL_FLOAT_MAT4x2 = 0x8B69
  GL_FLOAT_MAT4x3 = 0x8B6A
  GL_SRGB = 0x8C40
  GL_SRGB8 = 0x8C41
  GL_SRGB_ALPHA = 0x8C42
  GL_SRGB8_ALPHA8 = 0x8C43
  GL_COMPRESSED_SRGB = 0x8C48
  GL_COMPRESSED_SRGB_ALPHA = 0x8C49
  GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F
  GL_SLUMINANCE_ALPHA = 0x8C44
  GL_SLUMINANCE8_ALPHA8 = 0x8C45
  GL_SLUMINANCE = 0x8C46
  GL_SLUMINANCE8 = 0x8C47
  GL_COMPRESSED_SLUMINANCE = 0x8C4A
  GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B
  GL_COMPARE_REF_TO_TEXTURE = 0x884E
  GL_CLIP_DISTANCE0 = 0x3000
  GL_CLIP_DISTANCE1 = 0x3001
  GL_CLIP_DISTANCE2 = 0x3002
  GL_CLIP_DISTANCE3 = 0x3003
  GL_CLIP_DISTANCE4 = 0x3004
  GL_CLIP_DISTANCE5 = 0x3005
  GL_CLIP_DISTANCE6 = 0x3006
  GL_CLIP_DISTANCE7 = 0x3007
  GL_MAX_CLIP_DISTANCES = 0x0D32
  GL_MAJOR_VERSION = 0x821B
  GL_MINOR_VERSION = 0x821C
  GL_NUM_EXTENSIONS = 0x821D
  GL_CONTEXT_FLAGS = 0x821E
  GL_DEPTH_BUFFER = 0x8223
  GL_STENCIL_BUFFER = 0x8224
  GL_COMPRESSED_RED = 0x8225
  GL_COMPRESSED_RG = 0x8226
  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001
  GL_RGBA32F = 0x8814
  GL_RGB32F = 0x8815
  GL_RGBA16F = 0x881A
  GL_RGB16F = 0x881B
  GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD
  GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF
  GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904
  GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905
  GL_CLAMP_READ_COLOR = 0x891C
  GL_FIXED_ONLY = 0x891D
  GL_MAX_VARYING_COMPONENTS = 0x8B4B
  GL_TEXTURE_1D_ARRAY = 0x8C18
  GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19
  GL_TEXTURE_2D_ARRAY = 0x8C1A
  GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B
  GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C
  GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D
  GL_R11F_G11F_B10F = 0x8C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B
  GL_RGB9_E5 = 0x8C3D
  GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E
  GL_TEXTURE_SHARED_SIZE = 0x8C3F
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80
  GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83
  GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85
  GL_PRIMITIVES_GENERATED = 0x8C87
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88
  GL_RASTERIZER_DISCARD = 0x8C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B
  GL_INTERLEAVED_ATTRIBS = 0x8C8C
  GL_SEPARATE_ATTRIBS = 0x8C8D
  GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F
  GL_RGBA32UI = 0x8D70
  GL_RGB32UI = 0x8D71
  GL_RGBA16UI = 0x8D76
  GL_RGB16UI = 0x8D77
  GL_RGBA8UI = 0x8D7C
  GL_RGB8UI = 0x8D7D
  GL_RGBA32I = 0x8D82
  GL_RGB32I = 0x8D83
  GL_RGBA16I = 0x8D88
  GL_RGB16I = 0x8D89
  GL_RGBA8I = 0x8D8E
  GL_RGB8I = 0x8D8F
  GL_RED_INTEGER = 0x8D94
  GL_GREEN_INTEGER = 0x8D95
  GL_BLUE_INTEGER = 0x8D96
  GL_RGB_INTEGER = 0x8D98
  GL_RGBA_INTEGER = 0x8D99
  GL_BGR_INTEGER = 0x8D9A
  GL_BGRA_INTEGER = 0x8D9B
  GL_SAMPLER_1D_ARRAY = 0x8DC0
  GL_SAMPLER_2D_ARRAY = 0x8DC1
  GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3
  GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4
  GL_SAMPLER_CUBE_SHADOW = 0x8DC5
  GL_UNSIGNED_INT_VEC2 = 0x8DC6
  GL_UNSIGNED_INT_VEC3 = 0x8DC7
  GL_UNSIGNED_INT_VEC4 = 0x8DC8
  GL_INT_SAMPLER_1D = 0x8DC9
  GL_INT_SAMPLER_2D = 0x8DCA
  GL_INT_SAMPLER_3D = 0x8DCB
  GL_INT_SAMPLER_CUBE = 0x8DCC
  GL_INT_SAMPLER_1D_ARRAY = 0x8DCE
  GL_INT_SAMPLER_2D_ARRAY = 0x8DCF
  GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1
  GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2
  GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3
  GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7
  GL_QUERY_WAIT = 0x8E13
  GL_QUERY_NO_WAIT = 0x8E14
  GL_QUERY_BY_REGION_WAIT = 0x8E15
  GL_QUERY_BY_REGION_NO_WAIT = 0x8E16
  GL_BUFFER_ACCESS_FLAGS = 0x911F
  GL_BUFFER_MAP_LENGTH = 0x9120
  GL_BUFFER_MAP_OFFSET = 0x9121
  GL_CLAMP_VERTEX_COLOR = 0x891A
  GL_CLAMP_FRAGMENT_COLOR = 0x891B
  GL_ALPHA_INTEGER = 0x8D97
  GL_SAMPLER_2D_RECT = 0x8B63
  GL_SAMPLER_2D_RECT_SHADOW = 0x8B64
  GL_SAMPLER_BUFFER = 0x8DC2
  GL_INT_SAMPLER_2D_RECT = 0x8DCD
  GL_INT_SAMPLER_BUFFER = 0x8DD0
  GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5
  GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8
  GL_TEXTURE_BUFFER = 0x8C2A
  GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B
  GL_TEXTURE_BINDING_BUFFER = 0x8C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D
  GL_TEXTURE_BUFFER_FORMAT = 0x8C2E
  GL_TEXTURE_RECTANGLE = 0x84F5
  GL_TEXTURE_BINDING_RECTANGLE = 0x84F6
  GL_PROXY_TEXTURE_RECTANGLE = 0x84F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8
  GL_RED_SNORM = 0x8F90
  GL_RG_SNORM = 0x8F91
  GL_RGB_SNORM = 0x8F92
  GL_RGBA_SNORM = 0x8F93
  GL_R8_SNORM = 0x8F94
  GL_RG8_SNORM = 0x8F95
  GL_RGB8_SNORM = 0x8F96
  GL_RGBA8_SNORM = 0x8F97
  GL_R16_SNORM = 0x8F98
  GL_RG16_SNORM = 0x8F99
  GL_RGB16_SNORM = 0x8F9A
  GL_RGBA16_SNORM = 0x8F9B
  GL_SIGNED_NORMALIZED = 0x8F9C
  GL_PRIMITIVE_RESTART = 0x8F9D
  GL_PRIMITIVE_RESTART_INDEX = 0x8F9E
  GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001
  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002
  GL_LINES_ADJACENCY = 0x000A
  GL_LINE_STRIP_ADJACENCY = 0x000B
  GL_TRIANGLES_ADJACENCY = 0x000C
  GL_TRIANGLE_STRIP_ADJACENCY = 0x000D
  GL_PROGRAM_POINT_SIZE = 0x8642
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8
  GL_GEOMETRY_SHADER = 0x8DD9
  GL_GEOMETRY_VERTICES_OUT = 0x8916
  GL_GEOMETRY_INPUT_TYPE = 0x8917
  GL_GEOMETRY_OUTPUT_TYPE = 0x8918
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1
  GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122
  GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124
  GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125
  GL_CONTEXT_PROFILE_MASK = 0x9126
  GL_TEXTURE0_ARB = 0x84C0
  GL_TEXTURE1_ARB = 0x84C1
  GL_TEXTURE2_ARB = 0x84C2
  GL_TEXTURE3_ARB = 0x84C3
  GL_TEXTURE4_ARB = 0x84C4
  GL_TEXTURE5_ARB = 0x84C5
  GL_TEXTURE6_ARB = 0x84C6
  GL_TEXTURE7_ARB = 0x84C7
  GL_TEXTURE8_ARB = 0x84C8
  GL_TEXTURE9_ARB = 0x84C9
  GL_TEXTURE10_ARB = 0x84CA
  GL_TEXTURE11_ARB = 0x84CB
  GL_TEXTURE12_ARB = 0x84CC
  GL_TEXTURE13_ARB = 0x84CD
  GL_TEXTURE14_ARB = 0x84CE
  GL_TEXTURE15_ARB = 0x84CF
  GL_TEXTURE16_ARB = 0x84D0
  GL_TEXTURE17_ARB = 0x84D1
  GL_TEXTURE18_ARB = 0x84D2
  GL_TEXTURE19_ARB = 0x84D3
  GL_TEXTURE20_ARB = 0x84D4
  GL_TEXTURE21_ARB = 0x84D5
  GL_TEXTURE22_ARB = 0x84D6
  GL_TEXTURE23_ARB = 0x84D7
  GL_TEXTURE24_ARB = 0x84D8
  GL_TEXTURE25_ARB = 0x84D9
  GL_TEXTURE26_ARB = 0x84DA
  GL_TEXTURE27_ARB = 0x84DB
  GL_TEXTURE28_ARB = 0x84DC
  GL_TEXTURE29_ARB = 0x84DD
  GL_TEXTURE30_ARB = 0x84DE
  GL_TEXTURE31_ARB = 0x84DF
  GL_ACTIVE_TEXTURE_ARB = 0x84E0
  GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1
  GL_MAX_TEXTURE_UNITS_ARB = 0x84E2
  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3
  GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4
  GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5
  GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6
  GL_MULTISAMPLE_ARB = 0x809D
  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E
  GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F
  GL_SAMPLE_COVERAGE_ARB = 0x80A0
  GL_SAMPLE_BUFFERS_ARB = 0x80A8
  GL_SAMPLES_ARB = 0x80A9
  GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA
  GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB
  GL_MULTISAMPLE_BIT_ARB = 0x20000000
  GL_NORMAL_MAP_ARB = 0x8511
  GL_REFLECTION_MAP_ARB = 0x8512
  GL_TEXTURE_CUBE_MAP_ARB = 0x8513
  GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A
  GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C
  GL_COMPRESSED_ALPHA_ARB = 0x84E9
  GL_COMPRESSED_LUMINANCE_ARB = 0x84EA
  GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB
  GL_COMPRESSED_INTENSITY_ARB = 0x84EC
  GL_COMPRESSED_RGB_ARB = 0x84ED
  GL_COMPRESSED_RGBA_ARB = 0x84EE
  GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0
  GL_TEXTURE_COMPRESSED_ARB = 0x86A1
  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2
  GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3
  GL_CLAMP_TO_BORDER_ARB = 0x812D
  GL_POINT_SIZE_MIN_ARB = 0x8126
  GL_POINT_SIZE_MAX_ARB = 0x8127
  GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128
  GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129
  GL_MAX_VERTEX_UNITS_ARB = 0x86A4
  GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5
  GL_WEIGHT_SUM_UNITY_ARB = 0x86A6
  GL_VERTEX_BLEND_ARB = 0x86A7
  GL_CURRENT_WEIGHT_ARB = 0x86A8
  GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9
  GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA
  GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB
  GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC
  GL_WEIGHT_ARRAY_ARB = 0x86AD
  GL_MODELVIEW0_ARB = 0x1700
  GL_MODELVIEW1_ARB = 0x850A
  GL_MODELVIEW2_ARB = 0x8722
  GL_MODELVIEW3_ARB = 0x8723
  GL_MODELVIEW4_ARB = 0x8724
  GL_MODELVIEW5_ARB = 0x8725
  GL_MODELVIEW6_ARB = 0x8726
  GL_MODELVIEW7_ARB = 0x8727
  GL_MODELVIEW8_ARB = 0x8728
  GL_MODELVIEW9_ARB = 0x8729
  GL_MODELVIEW10_ARB = 0x872A
  GL_MODELVIEW11_ARB = 0x872B
  GL_MODELVIEW12_ARB = 0x872C
  GL_MODELVIEW13_ARB = 0x872D
  GL_MODELVIEW14_ARB = 0x872E
  GL_MODELVIEW15_ARB = 0x872F
  GL_MODELVIEW16_ARB = 0x8730
  GL_MODELVIEW17_ARB = 0x8731
  GL_MODELVIEW18_ARB = 0x8732
  GL_MODELVIEW19_ARB = 0x8733
  GL_MODELVIEW20_ARB = 0x8734
  GL_MODELVIEW21_ARB = 0x8735
  GL_MODELVIEW22_ARB = 0x8736
  GL_MODELVIEW23_ARB = 0x8737
  GL_MODELVIEW24_ARB = 0x8738
  GL_MODELVIEW25_ARB = 0x8739
  GL_MODELVIEW26_ARB = 0x873A
  GL_MODELVIEW27_ARB = 0x873B
  GL_MODELVIEW28_ARB = 0x873C
  GL_MODELVIEW29_ARB = 0x873D
  GL_MODELVIEW30_ARB = 0x873E
  GL_MODELVIEW31_ARB = 0x873F
  GL_MATRIX_PALETTE_ARB = 0x8840
  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841
  GL_MAX_PALETTE_MATRICES_ARB = 0x8842
  GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843
  GL_MATRIX_INDEX_ARRAY_ARB = 0x8844
  GL_CURRENT_MATRIX_INDEX_ARB = 0x8845
  GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846
  GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847
  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848
  GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849
  GL_COMBINE_ARB = 0x8570
  GL_COMBINE_RGB_ARB = 0x8571
  GL_COMBINE_ALPHA_ARB = 0x8572
  GL_SOURCE0_RGB_ARB = 0x8580
  GL_SOURCE1_RGB_ARB = 0x8581
  GL_SOURCE2_RGB_ARB = 0x8582
  GL_SOURCE0_ALPHA_ARB = 0x8588
  GL_SOURCE1_ALPHA_ARB = 0x8589
  GL_SOURCE2_ALPHA_ARB = 0x858A
  GL_OPERAND0_RGB_ARB = 0x8590
  GL_OPERAND1_RGB_ARB = 0x8591
  GL_OPERAND2_RGB_ARB = 0x8592
  GL_OPERAND0_ALPHA_ARB = 0x8598
  GL_OPERAND1_ALPHA_ARB = 0x8599
  GL_OPERAND2_ALPHA_ARB = 0x859A
  GL_RGB_SCALE_ARB = 0x8573
  GL_ADD_SIGNED_ARB = 0x8574
  GL_INTERPOLATE_ARB = 0x8575
  GL_SUBTRACT_ARB = 0x84E7
  GL_CONSTANT_ARB = 0x8576
  GL_PRIMARY_COLOR_ARB = 0x8577
  GL_PREVIOUS_ARB = 0x8578
  GL_DOT3_RGB_ARB = 0x86AE
  GL_DOT3_RGBA_ARB = 0x86AF
  GL_MIRRORED_REPEAT_ARB = 0x8370
  GL_DEPTH_COMPONENT16_ARB = 0x81A5
  GL_DEPTH_COMPONENT24_ARB = 0x81A6
  GL_DEPTH_COMPONENT32_ARB = 0x81A7
  GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A
  GL_DEPTH_TEXTURE_MODE_ARB = 0x884B
  GL_TEXTURE_COMPARE_MODE_ARB = 0x884C
  GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D
  GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E
  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF
  GL_COLOR_SUM_ARB = 0x8458
  GL_VERTEX_PROGRAM_ARB = 0x8620
  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622
  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623
  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624
  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625
  GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626
  GL_PROGRAM_LENGTH_ARB = 0x8627
  GL_PROGRAM_STRING_ARB = 0x8628
  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E
  GL_MAX_PROGRAM_MATRICES_ARB = 0x862F
  GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640
  GL_CURRENT_MATRIX_ARB = 0x8641
  GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642
  GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643
  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645
  GL_PROGRAM_ERROR_POSITION_ARB = 0x864B
  GL_PROGRAM_BINDING_ARB = 0x8677
  GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A
  GL_PROGRAM_ERROR_STRING_ARB = 0x8874
  GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875
  GL_PROGRAM_FORMAT_ARB = 0x8876
  GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0
  GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1
  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2
  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3
  GL_PROGRAM_TEMPORARIES_ARB = 0x88A4
  GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5
  GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6
  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7
  GL_PROGRAM_PARAMETERS_ARB = 0x88A8
  GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9
  GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA
  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB
  GL_PROGRAM_ATTRIBS_ARB = 0x88AC
  GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD
  GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE
  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF
  GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0
  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1
  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2
  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3
  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4
  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5
  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6
  GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7
  GL_MATRIX0_ARB = 0x88C0
  GL_MATRIX1_ARB = 0x88C1
  GL_MATRIX2_ARB = 0x88C2
  GL_MATRIX3_ARB = 0x88C3
  GL_MATRIX4_ARB = 0x88C4
  GL_MATRIX5_ARB = 0x88C5
  GL_MATRIX6_ARB = 0x88C6
  GL_MATRIX7_ARB = 0x88C7
  GL_MATRIX8_ARB = 0x88C8
  GL_MATRIX9_ARB = 0x88C9
  GL_MATRIX10_ARB = 0x88CA
  GL_MATRIX11_ARB = 0x88CB
  GL_MATRIX12_ARB = 0x88CC
  GL_MATRIX13_ARB = 0x88CD
  GL_MATRIX14_ARB = 0x88CE
  GL_MATRIX15_ARB = 0x88CF
  GL_MATRIX16_ARB = 0x88D0
  GL_MATRIX17_ARB = 0x88D1
  GL_MATRIX18_ARB = 0x88D2
  GL_MATRIX19_ARB = 0x88D3
  GL_MATRIX20_ARB = 0x88D4
  GL_MATRIX21_ARB = 0x88D5
  GL_MATRIX22_ARB = 0x88D6
  GL_MATRIX23_ARB = 0x88D7
  GL_MATRIX24_ARB = 0x88D8
  GL_MATRIX25_ARB = 0x88D9
  GL_MATRIX26_ARB = 0x88DA
  GL_MATRIX27_ARB = 0x88DB
  GL_MATRIX28_ARB = 0x88DC
  GL_MATRIX29_ARB = 0x88DD
  GL_MATRIX30_ARB = 0x88DE
  GL_MATRIX31_ARB = 0x88DF
  GL_FRAGMENT_PROGRAM_ARB = 0x8804
  GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805
  GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806
  GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807
  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808
  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809
  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A
  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B
  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C
  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D
  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E
  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F
  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810
  GL_MAX_TEXTURE_COORDS_ARB = 0x8871
  GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872
  GL_BUFFER_SIZE_ARB = 0x8764
  GL_BUFFER_USAGE_ARB = 0x8765
  GL_ARRAY_BUFFER_ARB = 0x8892
  GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893
  GL_ARRAY_BUFFER_BINDING_ARB = 0x8894
  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895
  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896
  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897
  GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898
  GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D
  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F
  GL_READ_ONLY_ARB = 0x88B8
  GL_WRITE_ONLY_ARB = 0x88B9
  GL_READ_WRITE_ARB = 0x88BA
  GL_BUFFER_ACCESS_ARB = 0x88BB
  GL_BUFFER_MAPPED_ARB = 0x88BC
  GL_BUFFER_MAP_POINTER_ARB = 0x88BD
  GL_STREAM_DRAW_ARB = 0x88E0
  GL_STREAM_READ_ARB = 0x88E1
  GL_STREAM_COPY_ARB = 0x88E2
  GL_STATIC_DRAW_ARB = 0x88E4
  GL_STATIC_READ_ARB = 0x88E5
  GL_STATIC_COPY_ARB = 0x88E6
  GL_DYNAMIC_DRAW_ARB = 0x88E8
  GL_DYNAMIC_READ_ARB = 0x88E9
  GL_DYNAMIC_COPY_ARB = 0x88EA
  GL_QUERY_COUNTER_BITS_ARB = 0x8864
  GL_CURRENT_QUERY_ARB = 0x8865
  GL_QUERY_RESULT_ARB = 0x8866
  GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867
  GL_SAMPLES_PASSED_ARB = 0x8914
  GL_PROGRAM_OBJECT_ARB = 0x8B40
  GL_SHADER_OBJECT_ARB = 0x8B48
  GL_OBJECT_TYPE_ARB = 0x8B4E
  GL_OBJECT_SUBTYPE_ARB = 0x8B4F
  GL_FLOAT_VEC2_ARB = 0x8B50
  GL_FLOAT_VEC3_ARB = 0x8B51
  GL_FLOAT_VEC4_ARB = 0x8B52
  GL_INT_VEC2_ARB = 0x8B53
  GL_INT_VEC3_ARB = 0x8B54
  GL_INT_VEC4_ARB = 0x8B55
  GL_BOOL_ARB = 0x8B56
  GL_BOOL_VEC2_ARB = 0x8B57
  GL_BOOL_VEC3_ARB = 0x8B58
  GL_BOOL_VEC4_ARB = 0x8B59
  GL_FLOAT_MAT2_ARB = 0x8B5A
  GL_FLOAT_MAT3_ARB = 0x8B5B
  GL_FLOAT_MAT4_ARB = 0x8B5C
  GL_SAMPLER_1D_ARB = 0x8B5D
  GL_SAMPLER_2D_ARB = 0x8B5E
  GL_SAMPLER_3D_ARB = 0x8B5F
  GL_SAMPLER_CUBE_ARB = 0x8B60
  GL_SAMPLER_1D_SHADOW_ARB = 0x8B61
  GL_SAMPLER_2D_SHADOW_ARB = 0x8B62
  GL_SAMPLER_2D_RECT_ARB = 0x8B63
  GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64
  GL_OBJECT_DELETE_STATUS_ARB = 0x8B80
  GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81
  GL_OBJECT_LINK_STATUS_ARB = 0x8B82
  GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83
  GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84
  GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85
  GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86
  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87
  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88
  GL_VERTEX_SHADER_ARB = 0x8B31
  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A
  GL_MAX_VARYING_FLOATS_ARB = 0x8B4B
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D
  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89
  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A
  GL_FRAGMENT_SHADER_ARB = 0x8B30
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B
  GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C
  GL_POINT_SPRITE_ARB = 0x8861
  GL_COORD_REPLACE_ARB = 0x8862
  GL_MAX_DRAW_BUFFERS_ARB = 0x8824
  GL_DRAW_BUFFER0_ARB = 0x8825
  GL_DRAW_BUFFER1_ARB = 0x8826
  GL_DRAW_BUFFER2_ARB = 0x8827
  GL_DRAW_BUFFER3_ARB = 0x8828
  GL_DRAW_BUFFER4_ARB = 0x8829
  GL_DRAW_BUFFER5_ARB = 0x882A
  GL_DRAW_BUFFER6_ARB = 0x882B
  GL_DRAW_BUFFER7_ARB = 0x882C
  GL_DRAW_BUFFER8_ARB = 0x882D
  GL_DRAW_BUFFER9_ARB = 0x882E
  GL_DRAW_BUFFER10_ARB = 0x882F
  GL_DRAW_BUFFER11_ARB = 0x8830
  GL_DRAW_BUFFER12_ARB = 0x8831
  GL_DRAW_BUFFER13_ARB = 0x8832
  GL_DRAW_BUFFER14_ARB = 0x8833
  GL_DRAW_BUFFER15_ARB = 0x8834
  GL_TEXTURE_RECTANGLE_ARB = 0x84F5
  GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6
  GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8
  GL_RGBA_FLOAT_MODE_ARB = 0x8820
  GL_CLAMP_VERTEX_COLOR_ARB = 0x891A
  GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B
  GL_CLAMP_READ_COLOR_ARB = 0x891C
  GL_FIXED_ONLY_ARB = 0x891D
  GL_HALF_FLOAT_ARB = 0x140B
  GL_TEXTURE_RED_TYPE_ARB = 0x8C10
  GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11
  GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12
  GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13
  GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14
  GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15
  GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16
  GL_UNSIGNED_NORMALIZED_ARB = 0x8C17
  GL_RGBA32F_ARB = 0x8814
  GL_RGB32F_ARB = 0x8815
  GL_ALPHA32F_ARB = 0x8816
  GL_INTENSITY32F_ARB = 0x8817
  GL_LUMINANCE32F_ARB = 0x8818
  GL_LUMINANCE_ALPHA32F_ARB = 0x8819
  GL_RGBA16F_ARB = 0x881A
  GL_RGB16F_ARB = 0x881B
  GL_ALPHA16F_ARB = 0x881C
  GL_INTENSITY16F_ARB = 0x881D
  GL_LUMINANCE16F_ARB = 0x881E
  GL_LUMINANCE_ALPHA16F_ARB = 0x881F
  GL_PIXEL_PACK_BUFFER_ARB = 0x88EB
  GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC
  GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED
  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF
  GL_DEPTH_COMPONENT32F = 0x8CAC
  GL_DEPTH32F_STENCIL8 = 0x8CAD
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD
  GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217
  GL_FRAMEBUFFER_DEFAULT = 0x8218
  GL_FRAMEBUFFER_UNDEFINED = 0x8219
  GL_DEPTH_STENCIL_ATTACHMENT = 0x821A
  GL_MAX_RENDERBUFFER_SIZE = 0x84E8
  GL_DEPTH_STENCIL = 0x84F9
  GL_UNSIGNED_INT_24_8 = 0x84FA
  GL_DEPTH24_STENCIL8 = 0x88F0
  GL_TEXTURE_STENCIL_SIZE = 0x88F1
  GL_TEXTURE_RED_TYPE = 0x8C10
  GL_TEXTURE_GREEN_TYPE = 0x8C11
  GL_TEXTURE_BLUE_TYPE = 0x8C12
  GL_TEXTURE_ALPHA_TYPE = 0x8C13
  GL_TEXTURE_DEPTH_TYPE = 0x8C16
  GL_UNSIGNED_NORMALIZED = 0x8C17
  GL_FRAMEBUFFER_BINDING = 0x8CA6
  GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6
  GL_RENDERBUFFER_BINDING = 0x8CA7
  GL_READ_FRAMEBUFFER = 0x8CA8
  GL_DRAW_FRAMEBUFFER = 0x8CA9
  GL_READ_FRAMEBUFFER_BINDING = 0x8CAA
  GL_RENDERBUFFER_SAMPLES = 0x8CAB
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4
  GL_FRAMEBUFFER_COMPLETE = 0x8CD5
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC
  GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD
  GL_MAX_COLOR_ATTACHMENTS = 0x8CDF
  GL_COLOR_ATTACHMENT0 = 0x8CE0
  GL_COLOR_ATTACHMENT1 = 0x8CE1
  GL_COLOR_ATTACHMENT2 = 0x8CE2
  GL_COLOR_ATTACHMENT3 = 0x8CE3
  GL_COLOR_ATTACHMENT4 = 0x8CE4
  GL_COLOR_ATTACHMENT5 = 0x8CE5
  GL_COLOR_ATTACHMENT6 = 0x8CE6
  GL_COLOR_ATTACHMENT7 = 0x8CE7
  GL_COLOR_ATTACHMENT8 = 0x8CE8
  GL_COLOR_ATTACHMENT9 = 0x8CE9
  GL_COLOR_ATTACHMENT10 = 0x8CEA
  GL_COLOR_ATTACHMENT11 = 0x8CEB
  GL_COLOR_ATTACHMENT12 = 0x8CEC
  GL_COLOR_ATTACHMENT13 = 0x8CED
  GL_COLOR_ATTACHMENT14 = 0x8CEE
  GL_COLOR_ATTACHMENT15 = 0x8CEF
  GL_DEPTH_ATTACHMENT = 0x8D00
  GL_STENCIL_ATTACHMENT = 0x8D20
  GL_FRAMEBUFFER = 0x8D40
  GL_RENDERBUFFER = 0x8D41
  GL_RENDERBUFFER_WIDTH = 0x8D42
  GL_RENDERBUFFER_HEIGHT = 0x8D43
  GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44
  GL_STENCIL_INDEX1 = 0x8D46
  GL_STENCIL_INDEX4 = 0x8D47
  GL_STENCIL_INDEX8 = 0x8D48
  GL_STENCIL_INDEX16 = 0x8D49
  GL_RENDERBUFFER_RED_SIZE = 0x8D50
  GL_RENDERBUFFER_GREEN_SIZE = 0x8D51
  GL_RENDERBUFFER_BLUE_SIZE = 0x8D52
  GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53
  GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54
  GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56
  GL_MAX_SAMPLES = 0x8D57
  GL_INDEX = 0x8222
  GL_TEXTURE_LUMINANCE_TYPE = 0x8C14
  GL_TEXTURE_INTENSITY_TYPE = 0x8C15
  GL_FRAMEBUFFER_SRGB = 0x8DB9
  GL_LINES_ADJACENCY_ARB = 0x000A
  GL_LINE_STRIP_ADJACENCY_ARB = 0x000B
  GL_TRIANGLES_ADJACENCY_ARB = 0x000C
  GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D
  GL_PROGRAM_POINT_SIZE_ARB = 0x8642
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9
  GL_GEOMETRY_SHADER_ARB = 0x8DD9
  GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA
  GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB
  GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD
  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1
  GL_HALF_FLOAT = 0x140B
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE
  GL_MAP_READ_BIT = 0x0001
  GL_MAP_WRITE_BIT = 0x0002
  GL_MAP_INVALIDATE_RANGE_BIT = 0x0004
  GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008
  GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010
  GL_MAP_UNSYNCHRONIZED_BIT = 0x0020
  GL_TEXTURE_BUFFER_ARB = 0x8C2A
  GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B
  GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D
  GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E
  GL_COMPRESSED_RED_RGTC1 = 0x8DBB
  GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC
  GL_COMPRESSED_RG_RGTC2 = 0x8DBD
  GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE
  GL_RG = 0x8227
  GL_RG_INTEGER = 0x8228
  GL_R8 = 0x8229
  GL_R16 = 0x822A
  GL_RG8 = 0x822B
  GL_RG16 = 0x822C
  GL_R16F = 0x822D
  GL_R32F = 0x822E
  GL_RG16F = 0x822F
  GL_RG32F = 0x8230
  GL_R8I = 0x8231
  GL_R8UI = 0x8232
  GL_R16I = 0x8233
  GL_R16UI = 0x8234
  GL_R32I = 0x8235
  GL_R32UI = 0x8236
  GL_RG8I = 0x8237
  GL_RG8UI = 0x8238
  GL_RG16I = 0x8239
  GL_RG16UI = 0x823A
  GL_RG32I = 0x823B
  GL_RG32UI = 0x823C
  GL_VERTEX_ARRAY_BINDING = 0x85B5
  GL_UNIFORM_BUFFER = 0x8A11
  GL_UNIFORM_BUFFER_BINDING = 0x8A28
  GL_UNIFORM_BUFFER_START = 0x8A29
  GL_UNIFORM_BUFFER_SIZE = 0x8A2A
  GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D
  GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E
  GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F
  GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35
  GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36
  GL_UNIFORM_TYPE = 0x8A37
  GL_UNIFORM_SIZE = 0x8A38
  GL_UNIFORM_NAME_LENGTH = 0x8A39
  GL_UNIFORM_BLOCK_INDEX = 0x8A3A
  GL_UNIFORM_OFFSET = 0x8A3B
  GL_UNIFORM_ARRAY_STRIDE = 0x8A3C
  GL_UNIFORM_MATRIX_STRIDE = 0x8A3D
  GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E
  GL_UNIFORM_BLOCK_BINDING = 0x8A3F
  GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40
  GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44
  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46
  GL_INVALID_INDEX = 0xFFFFFFFFu
  GL_COPY_READ_BUFFER = 0x8F36
  GL_COPY_WRITE_BUFFER = 0x8F37
  GL_DEPTH_CLAMP = 0x864F
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C
  GL_FIRST_VERTEX_CONVENTION = 0x8E4D
  GL_LAST_VERTEX_CONVENTION = 0x8E4E
  GL_PROVOKING_VERTEX = 0x8E4F
  GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F
  GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111
  GL_OBJECT_TYPE = 0x9112
  GL_SYNC_CONDITION = 0x9113
  GL_SYNC_STATUS = 0x9114
  GL_SYNC_FLAGS = 0x9115
  GL_SYNC_FENCE = 0x9116
  GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117
  GL_UNSIGNALED = 0x9118
  GL_SIGNALED = 0x9119
  GL_ALREADY_SIGNALED = 0x911A
  GL_TIMEOUT_EXPIRED = 0x911B
  GL_CONDITION_SATISFIED = 0x911C
  GL_WAIT_FAILED = 0x911D
  GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001
  GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFFull
  GL_SAMPLE_POSITION = 0x8E50
  GL_SAMPLE_MASK = 0x8E51
  GL_SAMPLE_MASK_VALUE = 0x8E52
  GL_MAX_SAMPLE_MASK_WORDS = 0x8E59
  GL_TEXTURE_2D_MULTISAMPLE = 0x9100
  GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102
  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103
  GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105
  GL_TEXTURE_SAMPLES = 0x9106
  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107
  GL_SAMPLER_2D_MULTISAMPLE = 0x9108
  GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D
  GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E
  GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F
  GL_MAX_INTEGER_SAMPLES = 0x9110
  GL_SAMPLE_SHADING = 0x8C36
  GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37
  GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B
  GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D
  GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS = 0x8F9F
  GL_ABGR_EXT = 0x8000
  GL_CONSTANT_COLOR_EXT = 0x8001
  GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002
  GL_CONSTANT_ALPHA_EXT = 0x8003
  GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004
  GL_BLEND_COLOR_EXT = 0x8005
  GL_POLYGON_OFFSET_EXT = 0x8037
  GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038
  GL_POLYGON_OFFSET_BIAS_EXT = 0x8039
  GL_ALPHA4_EXT = 0x803B
  GL_ALPHA8_EXT = 0x803C
  GL_ALPHA12_EXT = 0x803D
  GL_ALPHA16_EXT = 0x803E
  GL_LUMINANCE4_EXT = 0x803F
  GL_LUMINANCE8_EXT = 0x8040
  GL_LUMINANCE12_EXT = 0x8041
  GL_LUMINANCE16_EXT = 0x8042
  GL_LUMINANCE4_ALPHA4_EXT = 0x8043
  GL_LUMINANCE6_ALPHA2_EXT = 0x8044
  GL_LUMINANCE8_ALPHA8_EXT = 0x8045
  GL_LUMINANCE12_ALPHA4_EXT = 0x8046
  GL_LUMINANCE12_ALPHA12_EXT = 0x8047
  GL_LUMINANCE16_ALPHA16_EXT = 0x8048
  GL_INTENSITY_EXT = 0x8049
  GL_INTENSITY4_EXT = 0x804A
  GL_INTENSITY8_EXT = 0x804B
  GL_INTENSITY12_EXT = 0x804C
  GL_INTENSITY16_EXT = 0x804D
  GL_RGB2_EXT = 0x804E
  GL_RGB4_EXT = 0x804F
  GL_RGB5_EXT = 0x8050
  GL_RGB8_EXT = 0x8051
  GL_RGB10_EXT = 0x8052
  GL_RGB12_EXT = 0x8053
  GL_RGB16_EXT = 0x8054
  GL_RGBA2_EXT = 0x8055
  GL_RGBA4_EXT = 0x8056
  GL_RGB5_A1_EXT = 0x8057
  GL_RGBA8_EXT = 0x8058
  GL_RGB10_A2_EXT = 0x8059
  GL_RGBA12_EXT = 0x805A
  GL_RGBA16_EXT = 0x805B
  GL_TEXTURE_RED_SIZE_EXT = 0x805C
  GL_TEXTURE_GREEN_SIZE_EXT = 0x805D
  GL_TEXTURE_BLUE_SIZE_EXT = 0x805E
  GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F
  GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060
  GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061
  GL_REPLACE_EXT = 0x8062
  GL_PROXY_TEXTURE_1D_EXT = 0x8063
  GL_PROXY_TEXTURE_2D_EXT = 0x8064
  GL_TEXTURE_TOO_LARGE_EXT = 0x8065
  GL_PACK_SKIP_IMAGES_EXT = 0x806B
  GL_PACK_IMAGE_HEIGHT_EXT = 0x806C
  GL_UNPACK_SKIP_IMAGES_EXT = 0x806D
  GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E
  GL_TEXTURE_3D_EXT = 0x806F
  GL_PROXY_TEXTURE_3D_EXT = 0x8070
  GL_TEXTURE_DEPTH_EXT = 0x8071
  GL_TEXTURE_WRAP_R_EXT = 0x8072
  GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073
  GL_FILTER4_SGIS = 0x8146
  GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147
  GL_HISTOGRAM_EXT = 0x8024
  GL_PROXY_HISTOGRAM_EXT = 0x8025
  GL_HISTOGRAM_WIDTH_EXT = 0x8026
  GL_HISTOGRAM_FORMAT_EXT = 0x8027
  GL_HISTOGRAM_RED_SIZE_EXT = 0x8028
  GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029
  GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A
  GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B
  GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C
  GL_HISTOGRAM_SINK_EXT = 0x802D
  GL_MINMAX_EXT = 0x802E
  GL_MINMAX_FORMAT_EXT = 0x802F
  GL_MINMAX_SINK_EXT = 0x8030
  GL_TABLE_TOO_LARGE_EXT = 0x8031
  GL_CONVOLUTION_1D_EXT = 0x8010
  GL_CONVOLUTION_2D_EXT = 0x8011
  GL_SEPARABLE_2D_EXT = 0x8012
  GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013
  GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014
  GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015
  GL_REDUCE_EXT = 0x8016
  GL_CONVOLUTION_FORMAT_EXT = 0x8017
  GL_CONVOLUTION_WIDTH_EXT = 0x8018
  GL_CONVOLUTION_HEIGHT_EXT = 0x8019
  GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A
  GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B
  GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C
  GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D
  GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E
  GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F
  GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020
  GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021
  GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022
  GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023
  GL_COLOR_MATRIX_SGI = 0x80B1
  GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2
  GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3
  GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4
  GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5
  GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6
  GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7
  GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8
  GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9
  GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA
  GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB
  GL_COLOR_TABLE_SGI = 0x80D0
  GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1
  GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2
  GL_PROXY_COLOR_TABLE_SGI = 0x80D3
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5
  GL_COLOR_TABLE_SCALE_SGI = 0x80D6
  GL_COLOR_TABLE_BIAS_SGI = 0x80D7
  GL_COLOR_TABLE_FORMAT_SGI = 0x80D8
  GL_COLOR_TABLE_WIDTH_SGI = 0x80D9
  GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA
  GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB
  GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC
  GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD
  GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE
  GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF
  GL_PIXEL_TEXTURE_SGIS = 0x8353
  GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354
  GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355
  GL_PIXEL_GROUP_COLOR_SGIS = 0x8356
  GL_PIXEL_TEX_GEN_SGIX = 0x8139
  GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B
  GL_PACK_SKIP_VOLUMES_SGIS = 0x8130
  GL_PACK_IMAGE_DEPTH_SGIS = 0x8131
  GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132
  GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133
  GL_TEXTURE_4D_SGIS = 0x8134
  GL_PROXY_TEXTURE_4D_SGIS = 0x8135
  GL_TEXTURE_4DSIZE_SGIS = 0x8136
  GL_TEXTURE_WRAP_Q_SGIS = 0x8137
  GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138
  GL_TEXTURE_4D_BINDING_SGIS = 0x814F
  GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC
  GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD
  GL_CMYK_EXT = 0x800C
  GL_CMYKA_EXT = 0x800D
  GL_PACK_CMYK_HINT_EXT = 0x800E
  GL_UNPACK_CMYK_HINT_EXT = 0x800F
  GL_TEXTURE_PRIORITY_EXT = 0x8066
  GL_TEXTURE_RESIDENT_EXT = 0x8067
  GL_TEXTURE_1D_BINDING_EXT = 0x8068
  GL_TEXTURE_2D_BINDING_EXT = 0x8069
  GL_TEXTURE_3D_BINDING_EXT = 0x806A
  GL_DETAIL_TEXTURE_2D_SGIS = 0x8095
  GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096
  GL_LINEAR_DETAIL_SGIS = 0x8097
  GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098
  GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099
  GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A
  GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B
  GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C
  GL_LINEAR_SHARPEN_SGIS = 0x80AD
  GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE
  GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF
  GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0
  GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032
  GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033
  GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034
  GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035
  GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036
  GL_TEXTURE_MIN_LOD_SGIS = 0x813A
  GL_TEXTURE_MAX_LOD_SGIS = 0x813B
  GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C
  GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D
  GL_MULTISAMPLE_SGIS = 0x809D
  GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E
  GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F
  GL_SAMPLE_MASK_SGIS = 0x80A0
  GL_1PASS_SGIS = 0x80A1
  GL_2PASS_0_SGIS = 0x80A2
  GL_2PASS_1_SGIS = 0x80A3
  GL_4PASS_0_SGIS = 0x80A4
  GL_4PASS_1_SGIS = 0x80A5
  GL_4PASS_2_SGIS = 0x80A6
  GL_4PASS_3_SGIS = 0x80A7
  GL_SAMPLE_BUFFERS_SGIS = 0x80A8
  GL_SAMPLES_SGIS = 0x80A9
  GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA
  GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB
  GL_SAMPLE_PATTERN_SGIS = 0x80AC
  GL_RESCALE_NORMAL_EXT = 0x803A
  GL_VERTEX_ARRAY_EXT = 0x8074
  GL_NORMAL_ARRAY_EXT = 0x8075
  GL_COLOR_ARRAY_EXT = 0x8076
  GL_INDEX_ARRAY_EXT = 0x8077
  GL_TEXTURE_COORD_ARRAY_EXT = 0x8078
  GL_EDGE_FLAG_ARRAY_EXT = 0x8079
  GL_VERTEX_ARRAY_SIZE_EXT = 0x807A
  GL_VERTEX_ARRAY_TYPE_EXT = 0x807B
  GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C
  GL_VERTEX_ARRAY_COUNT_EXT = 0x807D
  GL_NORMAL_ARRAY_TYPE_EXT = 0x807E
  GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F
  GL_NORMAL_ARRAY_COUNT_EXT = 0x8080
  GL_COLOR_ARRAY_SIZE_EXT = 0x8081
  GL_COLOR_ARRAY_TYPE_EXT = 0x8082
  GL_COLOR_ARRAY_STRIDE_EXT = 0x8083
  GL_COLOR_ARRAY_COUNT_EXT = 0x8084
  GL_INDEX_ARRAY_TYPE_EXT = 0x8085
  GL_INDEX_ARRAY_STRIDE_EXT = 0x8086
  GL_INDEX_ARRAY_COUNT_EXT = 0x8087
  GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088
  GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089
  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A
  GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B
  GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C
  GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D
  GL_VERTEX_ARRAY_POINTER_EXT = 0x808E
  GL_NORMAL_ARRAY_POINTER_EXT = 0x808F
  GL_COLOR_ARRAY_POINTER_EXT = 0x8090
  GL_INDEX_ARRAY_POINTER_EXT = 0x8091
  GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092
  GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093
  GL_GENERATE_MIPMAP_SGIS = 0x8191
  GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192
  GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170
  GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171
  GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172
  GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173
  GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174
  GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175
  GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176
  GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177
  GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178
  GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D
  GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E
  GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F
  GL_TEXTURE_COMPARE_SGIX = 0x819A
  GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B
  GL_TEXTURE_LEQUAL_R_SGIX = 0x819C
  GL_TEXTURE_GEQUAL_R_SGIX = 0x819D
  GL_CLAMP_TO_EDGE_SGIS = 0x812F
  GL_CLAMP_TO_BORDER_SGIS = 0x812D
  GL_FUNC_ADD_EXT = 0x8006
  GL_MIN_EXT = 0x8007
  GL_MAX_EXT = 0x8008
  GL_BLEND_EQUATION_EXT = 0x8009
  GL_FUNC_SUBTRACT_EXT = 0x800A
  GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B
  GL_INTERLACE_SGIX = 0x8094
  GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E
  GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F
  GL_PIXEL_TILE_WIDTH_SGIX = 0x8140
  GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141
  GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142
  GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143
  GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144
  GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145
  GL_DUAL_ALPHA4_SGIS = 0x8110
  GL_DUAL_ALPHA8_SGIS = 0x8111
  GL_DUAL_ALPHA12_SGIS = 0x8112
  GL_DUAL_ALPHA16_SGIS = 0x8113
  GL_DUAL_LUMINANCE4_SGIS = 0x8114
  GL_DUAL_LUMINANCE8_SGIS = 0x8115
  GL_DUAL_LUMINANCE12_SGIS = 0x8116
  GL_DUAL_LUMINANCE16_SGIS = 0x8117
  GL_DUAL_INTENSITY4_SGIS = 0x8118
  GL_DUAL_INTENSITY8_SGIS = 0x8119
  GL_DUAL_INTENSITY12_SGIS = 0x811A
  GL_DUAL_INTENSITY16_SGIS = 0x811B
  GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C
  GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D
  GL_QUAD_ALPHA4_SGIS = 0x811E
  GL_QUAD_ALPHA8_SGIS = 0x811F
  GL_QUAD_LUMINANCE4_SGIS = 0x8120
  GL_QUAD_LUMINANCE8_SGIS = 0x8121
  GL_QUAD_INTENSITY4_SGIS = 0x8122
  GL_QUAD_INTENSITY8_SGIS = 0x8123
  GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124
  GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125
  GL_SPRITE_SGIX = 0x8148
  GL_SPRITE_MODE_SGIX = 0x8149
  GL_SPRITE_AXIS_SGIX = 0x814A
  GL_SPRITE_TRANSLATION_SGIX = 0x814B
  GL_SPRITE_AXIAL_SGIX = 0x814C
  GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D
  GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E
  GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E
  GL_POINT_SIZE_MIN_EXT = 0x8126
  GL_POINT_SIZE_MAX_EXT = 0x8127
  GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128
  GL_DISTANCE_ATTENUATION_EXT = 0x8129
  GL_POINT_SIZE_MIN_SGIS = 0x8126
  GL_POINT_SIZE_MAX_SGIS = 0x8127
  GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128
  GL_DISTANCE_ATTENUATION_SGIS = 0x8129
  GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180
  GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181
  GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179
  GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A
  GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B
  GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C
  GL_FRAMEZOOM_SGIX = 0x818B
  GL_FRAMEZOOM_FACTOR_SGIX = 0x818C
  GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D
  GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001
  GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002
  GL_GEOMETRY_DEFORMATION_SGIX = 0x8194
  GL_TEXTURE_DEFORMATION_SGIX = 0x8195
  GL_DEFORMATIONS_MASK_SGIX = 0x8196
  GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197
  GL_REFERENCE_PLANE_SGIX = 0x817D
  GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E
  GL_DEPTH_COMPONENT16_SGIX = 0x81A5
  GL_DEPTH_COMPONENT24_SGIX = 0x81A6
  GL_DEPTH_COMPONENT32_SGIX = 0x81A7
  GL_FOG_FUNC_SGIS = 0x812A
  GL_FOG_FUNC_POINTS_SGIS = 0x812B
  GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C
  GL_FOG_OFFSET_SGIX = 0x8198
  GL_FOG_OFFSET_VALUE_SGIX = 0x8199
  GL_IMAGE_SCALE_X_HP = 0x8155
  GL_IMAGE_SCALE_Y_HP = 0x8156
  GL_IMAGE_TRANSLATE_X_HP = 0x8157
  GL_IMAGE_TRANSLATE_Y_HP = 0x8158
  GL_IMAGE_ROTATE_ANGLE_HP = 0x8159
  GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A
  GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B
  GL_IMAGE_MAG_FILTER_HP = 0x815C
  GL_IMAGE_MIN_FILTER_HP = 0x815D
  GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E
  GL_CUBIC_HP = 0x815F
  GL_AVERAGE_HP = 0x8160
  GL_IMAGE_TRANSFORM_2D_HP = 0x8161
  GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162
  GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163
  GL_IGNORE_BORDER_HP = 0x8150
  GL_CONSTANT_BORDER_HP = 0x8151
  GL_REPLICATE_BORDER_HP = 0x8153
  GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154
  GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE
  GL_VERTEX_DATA_HINT_PGI = 0x1A22A
  GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B
  GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C
  GL_MAX_VERTEX_HINT_PGI = 0x1A22D
  GL_COLOR3_BIT_PGI = 0x00010000
  GL_COLOR4_BIT_PGI = 0x00020000
  GL_EDGEFLAG_BIT_PGI = 0x00040000
  GL_INDEX_BIT_PGI = 0x00080000
  GL_MAT_AMBIENT_BIT_PGI = 0x00100000
  GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000
  GL_MAT_DIFFUSE_BIT_PGI = 0x00400000
  GL_MAT_EMISSION_BIT_PGI = 0x00800000
  GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000
  GL_MAT_SHININESS_BIT_PGI = 0x02000000
  GL_MAT_SPECULAR_BIT_PGI = 0x04000000
  GL_NORMAL_BIT_PGI = 0x08000000
  GL_TEXCOORD1_BIT_PGI = 0x10000000
  GL_TEXCOORD2_BIT_PGI = 0x20000000
  GL_TEXCOORD3_BIT_PGI = 0x40000000
  GL_TEXCOORD4_BIT_PGI = 0x80000000
  GL_VERTEX23_BIT_PGI = 0x00000004
  GL_VERTEX4_BIT_PGI = 0x00000008
  GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8
  GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD
  GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE
  GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202
  GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203
  GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204
  GL_ALWAYS_FAST_HINT_PGI = 0x1A20C
  GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D
  GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E
  GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F
  GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210
  GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211
  GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216
  GL_STRICT_LIGHTING_HINT_PGI = 0x1A217
  GL_STRICT_SCISSOR_HINT_PGI = 0x1A218
  GL_FULL_STIPPLE_HINT_PGI = 0x1A219
  GL_CLIP_NEAR_HINT_PGI = 0x1A220
  GL_CLIP_FAR_HINT_PGI = 0x1A221
  GL_WIDE_LINE_HINT_PGI = 0x1A222
  GL_BACK_NORMALS_HINT_PGI = 0x1A223
  GL_COLOR_INDEX1_EXT = 0x80E2
  GL_COLOR_INDEX2_EXT = 0x80E3
  GL_COLOR_INDEX4_EXT = 0x80E4
  GL_COLOR_INDEX8_EXT = 0x80E5
  GL_COLOR_INDEX12_EXT = 0x80E6
  GL_COLOR_INDEX16_EXT = 0x80E7
  GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED
  GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0
  GL_LIST_PRIORITY_SGIX = 0x8182
  GL_IR_INSTRUMENT1_SGIX = 0x817F
  GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183
  GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E
  GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F
  GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190
  GL_SHADOW_AMBIENT_SGIX = 0x80BF
  GL_INDEX_MATERIAL_EXT = 0x81B8
  GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9
  GL_INDEX_MATERIAL_FACE_EXT = 0x81BA
  GL_INDEX_TEST_EXT = 0x81B5
  GL_INDEX_TEST_FUNC_EXT = 0x81B6
  GL_INDEX_TEST_REF_EXT = 0x81B7
  GL_IUI_V2F_EXT = 0x81AD
  GL_IUI_V3F_EXT = 0x81AE
  GL_IUI_N3F_V2F_EXT = 0x81AF
  GL_IUI_N3F_V3F_EXT = 0x81B0
  GL_T2F_IUI_V2F_EXT = 0x81B1
  GL_T2F_IUI_V3F_EXT = 0x81B2
  GL_T2F_IUI_N3F_V2F_EXT = 0x81B3
  GL_T2F_IUI_N3F_V3F_EXT = 0x81B4
  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8
  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9
  GL_CULL_VERTEX_EXT = 0x81AA
  GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB
  GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC
  GL_YCRCB_422_SGIX = 0x81BB
  GL_YCRCB_444_SGIX = 0x81BC
  GL_FRAGMENT_LIGHTING_SGIX = 0x8400
  GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401
  GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402
  GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403
  GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404
  GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405
  GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406
  GL_LIGHT_ENV_MODE_SGIX = 0x8407
  GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408
  GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409
  GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A
  GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B
  GL_FRAGMENT_LIGHT0_SGIX = 0x840C
  GL_FRAGMENT_LIGHT1_SGIX = 0x840D
  GL_FRAGMENT_LIGHT2_SGIX = 0x840E
  GL_FRAGMENT_LIGHT3_SGIX = 0x840F
  GL_FRAGMENT_LIGHT4_SGIX = 0x8410
  GL_FRAGMENT_LIGHT5_SGIX = 0x8411
  GL_FRAGMENT_LIGHT6_SGIX = 0x8412
  GL_FRAGMENT_LIGHT7_SGIX = 0x8413
  GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262
  GL_TEXTURE_LIGHTING_MODE_HP = 0x8167
  GL_TEXTURE_POST_SPECULAR_HP = 0x8168
  GL_TEXTURE_PRE_SPECULAR_HP = 0x8169
  GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8
  GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9
  GL_PHONG_WIN = 0x80EA
  GL_PHONG_HINT_WIN = 0x80EB
  GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC
  GL_FRAGMENT_MATERIAL_EXT = 0x8349
  GL_FRAGMENT_NORMAL_EXT = 0x834A
  GL_FRAGMENT_COLOR_EXT = 0x834C
  GL_ATTENUATION_EXT = 0x834D
  GL_SHADOW_ATTENUATION_EXT = 0x834E
  GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F
  GL_TEXTURE_LIGHT_EXT = 0x8350
  GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351
  GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352
  GL_ALPHA_MIN_SGIX = 0x8320
  GL_ALPHA_MAX_SGIX = 0x8321
  GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184
  GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185
  GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186
  GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = 0x8187
  GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = 0x8188
  GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189
  GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A
  GL_BGR_EXT = 0x80E0
  GL_BGRA_EXT = 0x80E1
  GL_ASYNC_MARKER_SGIX = 0x8329
  GL_ASYNC_TEX_IMAGE_SGIX = 0x835C
  GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D
  GL_ASYNC_READ_PIXELS_SGIX = 0x835E
  GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F
  GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360
  GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361
  GL_ASYNC_HISTOGRAM_SGIX = 0x832C
  GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D
  GL_PARALLEL_ARRAYS_INTEL = 0x83F4
  GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5
  GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6
  GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7
  GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8
  GL_OCCLUSION_TEST_HP = 0x8165
  GL_OCCLUSION_TEST_RESULT_HP = 0x8166
  GL_PIXEL_TRANSFORM_2D_EXT = 0x8330
  GL_PIXEL_MAG_FILTER_EXT = 0x8331
  GL_PIXEL_MIN_FILTER_EXT = 0x8332
  GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333
  GL_CUBIC_EXT = 0x8334
  GL_AVERAGE_EXT = 0x8335
  GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336
  GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337
  GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338
  GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB
  GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8
  GL_SINGLE_COLOR_EXT = 0x81F9
  GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA
  GL_COLOR_SUM_EXT = 0x8458
  GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459
  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A
  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B
  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C
  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D
  GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E
  GL_PERTURB_EXT = 0x85AE
  GL_TEXTURE_NORMAL_EXT = 0x85AF
  GL_FOG_COORDINATE_SOURCE_EXT = 0x8450
  GL_FOG_COORDINATE_EXT = 0x8451
  GL_FRAGMENT_DEPTH_EXT = 0x8452
  GL_CURRENT_FOG_COORDINATE_EXT = 0x8453
  GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454
  GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455
  GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456
  GL_FOG_COORDINATE_ARRAY_EXT = 0x8457
  GL_SCREEN_COORDINATES_REND = 0x8490
  GL_INVERTED_SCREEN_W_REND = 0x8491
  GL_TANGENT_ARRAY_EXT = 0x8439
  GL_BINORMAL_ARRAY_EXT = 0x843A
  GL_CURRENT_TANGENT_EXT = 0x843B
  GL_CURRENT_BINORMAL_EXT = 0x843C
  GL_TANGENT_ARRAY_TYPE_EXT = 0x843E
  GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F
  GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440
  GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441
  GL_TANGENT_ARRAY_POINTER_EXT = 0x8442
  GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443
  GL_MAP1_TANGENT_EXT = 0x8444
  GL_MAP2_TANGENT_EXT = 0x8445
  GL_MAP1_BINORMAL_EXT = 0x8446
  GL_MAP2_BINORMAL_EXT = 0x8447
  GL_COMBINE_EXT = 0x8570
  GL_COMBINE_RGB_EXT = 0x8571
  GL_COMBINE_ALPHA_EXT = 0x8572
  GL_RGB_SCALE_EXT = 0x8573
  GL_ADD_SIGNED_EXT = 0x8574
  GL_INTERPOLATE_EXT = 0x8575
  GL_CONSTANT_EXT = 0x8576
  GL_PRIMARY_COLOR_EXT = 0x8577
  GL_PREVIOUS_EXT = 0x8578
  GL_SOURCE0_RGB_EXT = 0x8580
  GL_SOURCE1_RGB_EXT = 0x8581
  GL_SOURCE2_RGB_EXT = 0x8582
  GL_SOURCE0_ALPHA_EXT = 0x8588
  GL_SOURCE1_ALPHA_EXT = 0x8589
  GL_SOURCE2_ALPHA_EXT = 0x858A
  GL_OPERAND0_RGB_EXT = 0x8590
  GL_OPERAND1_RGB_EXT = 0x8591
  GL_OPERAND2_RGB_EXT = 0x8592
  GL_OPERAND0_ALPHA_EXT = 0x8598
  GL_OPERAND1_ALPHA_EXT = 0x8599
  GL_OPERAND2_ALPHA_EXT = 0x859A
  GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0
  GL_TRANSFORM_HINT_APPLE = 0x85B1
  GL_FOG_SCALE_SGIX = 0x81FC
  GL_FOG_SCALE_VALUE_SGIX = 0x81FD
  GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5
  GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6
  GL_GLOBAL_ALPHA_SUN = 0x81D9
  GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA
  GL_RESTART_SUN = 0x0001
  GL_REPLACE_MIDDLE_SUN = 0x0002
  GL_REPLACE_OLDEST_SUN = 0x0003
  GL_TRIANGLE_LIST_SUN = 0x81D7
  GL_REPLACEMENT_CODE_SUN = 0x81D8
  GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0
  GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1
  GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2
  GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3
  GL_R1UI_V3F_SUN = 0x85C4
  GL_R1UI_C4UB_V3F_SUN = 0x85C5
  GL_R1UI_C3F_V3F_SUN = 0x85C6
  GL_R1UI_N3F_V3F_SUN = 0x85C7
  GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8
  GL_R1UI_T2F_V3F_SUN = 0x85C9
  GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA
  GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB
  GL_BLEND_DST_RGB_EXT = 0x80C8
  GL_BLEND_SRC_RGB_EXT = 0x80C9
  GL_BLEND_DST_ALPHA_EXT = 0x80CA
  GL_BLEND_SRC_ALPHA_EXT = 0x80CB
  GL_RED_MIN_CLAMP_INGR = 0x8560
  GL_GREEN_MIN_CLAMP_INGR = 0x8561
  GL_BLUE_MIN_CLAMP_INGR = 0x8562
  GL_ALPHA_MIN_CLAMP_INGR = 0x8563
  GL_RED_MAX_CLAMP_INGR = 0x8564
  GL_GREEN_MAX_CLAMP_INGR = 0x8565
  GL_BLUE_MAX_CLAMP_INGR = 0x8566
  GL_ALPHA_MAX_CLAMP_INGR = 0x8567
  GL_INTERLACE_READ_INGR = 0x8568
  GL_INCR_WRAP_EXT = 0x8507
  GL_DECR_WRAP_EXT = 0x8508
  GL_422_EXT = 0x80CC
  GL_422_REV_EXT = 0x80CD
  GL_422_AVERAGE_EXT = 0x80CE
  GL_422_REV_AVERAGE_EXT = 0x80CF
  GL_NORMAL_MAP_NV = 0x8511
  GL_REFLECTION_MAP_NV = 0x8512
  GL_NORMAL_MAP_EXT = 0x8511
  GL_REFLECTION_MAP_EXT = 0x8512
  GL_TEXTURE_CUBE_MAP_EXT = 0x8513
  GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A
  GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C
  GL_WRAP_BORDER_SUN = 0x81D4
  GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD
  GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500
  GL_TEXTURE_LOD_BIAS_EXT = 0x8501
  GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF
  GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502
  GL_MODELVIEW1_MATRIX_EXT = 0x8506
  GL_VERTEX_WEIGHTING_EXT = 0x8509
  GL_MODELVIEW1_EXT = 0x850A
  GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B
  GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C
  GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D
  GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E
  GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F
  GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510
  GL_MAX_SHININESS_NV = 0x8504
  GL_MAX_SPOT_EXPONENT_NV = 0x8505
  GL_VERTEX_ARRAY_RANGE_NV = 0x851D
  GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E
  GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520
  GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521
  GL_REGISTER_COMBINERS_NV = 0x8522
  GL_VARIABLE_A_NV = 0x8523
  GL_VARIABLE_B_NV = 0x8524
  GL_VARIABLE_C_NV = 0x8525
  GL_VARIABLE_D_NV = 0x8526
  GL_VARIABLE_E_NV = 0x8527
  GL_VARIABLE_F_NV = 0x8528
  GL_VARIABLE_G_NV = 0x8529
  GL_CONSTANT_COLOR0_NV = 0x852A
  GL_CONSTANT_COLOR1_NV = 0x852B
  GL_PRIMARY_COLOR_NV = 0x852C
  GL_SECONDARY_COLOR_NV = 0x852D
  GL_SPARE0_NV = 0x852E
  GL_SPARE1_NV = 0x852F
  GL_DISCARD_NV = 0x8530
  GL_E_TIMES_F_NV = 0x8531
  GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532
  GL_UNSIGNED_IDENTITY_NV = 0x8536
  GL_UNSIGNED_INVERT_NV = 0x8537
  GL_EXPAND_NORMAL_NV = 0x8538
  GL_EXPAND_NEGATE_NV = 0x8539
  GL_HALF_BIAS_NORMAL_NV = 0x853A
  GL_HALF_BIAS_NEGATE_NV = 0x853B
  GL_SIGNED_IDENTITY_NV = 0x853C
  GL_SIGNED_NEGATE_NV = 0x853D
  GL_SCALE_BY_TWO_NV = 0x853E
  GL_SCALE_BY_FOUR_NV = 0x853F
  GL_SCALE_BY_ONE_HALF_NV = 0x8540
  GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541
  GL_COMBINER_INPUT_NV = 0x8542
  GL_COMBINER_MAPPING_NV = 0x8543
  GL_COMBINER_COMPONENT_USAGE_NV = 0x8544
  GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545
  GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546
  GL_COMBINER_MUX_SUM_NV = 0x8547
  GL_COMBINER_SCALE_NV = 0x8548
  GL_COMBINER_BIAS_NV = 0x8549
  GL_COMBINER_AB_OUTPUT_NV = 0x854A
  GL_COMBINER_CD_OUTPUT_NV = 0x854B
  GL_COMBINER_SUM_OUTPUT_NV = 0x854C
  GL_MAX_GENERAL_COMBINERS_NV = 0x854D
  GL_NUM_GENERAL_COMBINERS_NV = 0x854E
  GL_COLOR_SUM_CLAMP_NV = 0x854F
  GL_COMBINER0_NV = 0x8550
  GL_COMBINER1_NV = 0x8551
  GL_COMBINER2_NV = 0x8552
  GL_COMBINER3_NV = 0x8553
  GL_COMBINER4_NV = 0x8554
  GL_COMBINER5_NV = 0x8555
  GL_COMBINER6_NV = 0x8556
  GL_COMBINER7_NV = 0x8557
  GL_FOG_DISTANCE_MODE_NV = 0x855A
  GL_EYE_RADIAL_NV = 0x855B
  GL_EYE_PLANE_ABSOLUTE_NV = 0x855C
  GL_EMBOSS_LIGHT_NV = 0x855D
  GL_EMBOSS_CONSTANT_NV = 0x855E
  GL_EMBOSS_MAP_NV = 0x855F
  GL_COMBINE4_NV = 0x8503
  GL_SOURCE3_RGB_NV = 0x8583
  GL_SOURCE3_ALPHA_NV = 0x858B
  GL_OPERAND3_RGB_NV = 0x8593
  GL_OPERAND3_ALPHA_NV = 0x859B
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3
  GL_CULL_VERTEX_IBM = 103050
  GL_VERTEX_ARRAY_LIST_IBM = 103070
  GL_NORMAL_ARRAY_LIST_IBM = 103071
  GL_COLOR_ARRAY_LIST_IBM = 103072
  GL_INDEX_ARRAY_LIST_IBM = 103073
  GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074
  GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075
  GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076
  GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077
  GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080
  GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081
  GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082
  GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083
  GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084
  GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085
  GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086
  GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087
  GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0
  GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1
  GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2
  GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3
  GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4
  GL_YCRCB_SGIX = 0x8318
  GL_YCRCBA_SGIX = 0x8319
  GL_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310
  GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311
  GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312
  GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0
  GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1
  GL_MULTISAMPLE_3DFX = 0x86B2
  GL_SAMPLE_BUFFERS_3DFX = 0x86B3
  GL_SAMPLES_3DFX = 0x86B4
  GL_MULTISAMPLE_BIT_3DFX = 0x20000000
  GL_MULTISAMPLE_EXT = 0x809D
  GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E
  GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F
  GL_SAMPLE_MASK_EXT = 0x80A0
  GL_1PASS_EXT = 0x80A1
  GL_2PASS_0_EXT = 0x80A2
  GL_2PASS_1_EXT = 0x80A3
  GL_4PASS_0_EXT = 0x80A4
  GL_4PASS_1_EXT = 0x80A5
  GL_4PASS_2_EXT = 0x80A6
  GL_4PASS_3_EXT = 0x80A7
  GL_SAMPLE_BUFFERS_EXT = 0x80A8
  GL_SAMPLES_EXT = 0x80A9
  GL_SAMPLE_MASK_VALUE_EXT = 0x80AA
  GL_SAMPLE_MASK_INVERT_EXT = 0x80AB
  GL_SAMPLE_PATTERN_EXT = 0x80AC
  GL_MULTISAMPLE_BIT_EXT = 0x20000000
  GL_VERTEX_PRECLIP_SGIX = 0x83EE
  GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF
  GL_CONVOLUTION_HINT_SGIX = 0x8316
  GL_PACK_RESAMPLE_SGIX = 0x842C
  GL_UNPACK_RESAMPLE_SGIX = 0x842D
  GL_RESAMPLE_REPLICATE_SGIX = 0x842E
  GL_RESAMPLE_ZERO_FILL_SGIX = 0x842F
  GL_RESAMPLE_DECIMATE_SGIX = 0x8430
  GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0
  GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1
  GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2
  GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3
  GL_EYE_POINT_SGIS = 0x81F4
  GL_OBJECT_POINT_SGIS = 0x81F5
  GL_EYE_LINE_SGIS = 0x81F6
  GL_OBJECT_LINE_SGIS = 0x81F7
  GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF
  GL_DOT3_RGB_EXT = 0x8740
  GL_DOT3_RGBA_EXT = 0x8741
  GL_MIRROR_CLAMP_ATI = 0x8742
  GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743
  GL_ALL_COMPLETED_NV = 0x84F2
  GL_FENCE_STATUS_NV = 0x84F3
  GL_FENCE_CONDITION_NV = 0x84F4
  GL_MIRRORED_REPEAT_IBM = 0x8370
  GL_EVAL_2D_NV = 0x86C0
  GL_EVAL_TRIANGULAR_2D_NV = 0x86C1
  GL_MAP_TESSELLATION_NV = 0x86C2
  GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3
  GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4
  GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5
  GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6
  GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7
  GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8
  GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9
  GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA
  GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB
  GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC
  GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD
  GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE
  GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF
  GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0
  GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1
  GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2
  GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3
  GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4
  GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5
  GL_MAX_MAP_TESSELLATION_NV = 0x86D6
  GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7
  GL_DEPTH_STENCIL_NV = 0x84F9
  GL_UNSIGNED_INT_24_8_NV = 0x84FA
  GL_PER_STAGE_CONSTANTS_NV = 0x8535
  GL_TEXTURE_RECTANGLE_NV = 0x84F5
  GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6
  GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7
  GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8
  GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C
  GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D
  GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E
  GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9
  GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA
  GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB
  GL_DSDT_MAG_INTENSITY_NV = 0x86DC
  GL_SHADER_CONSISTENT_NV = 0x86DD
  GL_TEXTURE_SHADER_NV = 0x86DE
  GL_SHADER_OPERATION_NV = 0x86DF
  GL_CULL_MODES_NV = 0x86E0
  GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1
  GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2
  GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3
  GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1
  GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2
  GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3
  GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4
  GL_CONST_EYE_NV = 0x86E5
  GL_PASS_THROUGH_NV = 0x86E6
  GL_CULL_FRAGMENT_NV = 0x86E7
  GL_OFFSET_TEXTURE_2D_NV = 0x86E8
  GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9
  GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA
  GL_DOT_PRODUCT_NV = 0x86EC
  GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED
  GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE
  GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0
  GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1
  GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2
  GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3
  GL_HILO_NV = 0x86F4
  GL_DSDT_NV = 0x86F5
  GL_DSDT_MAG_NV = 0x86F6
  GL_DSDT_MAG_VIB_NV = 0x86F7
  GL_HILO16_NV = 0x86F8
  GL_SIGNED_HILO_NV = 0x86F9
  GL_SIGNED_HILO16_NV = 0x86FA
  GL_SIGNED_RGBA_NV = 0x86FB
  GL_SIGNED_RGBA8_NV = 0x86FC
  GL_SIGNED_RGB_NV = 0x86FE
  GL_SIGNED_RGB8_NV = 0x86FF
  GL_SIGNED_LUMINANCE_NV = 0x8701
  GL_SIGNED_LUMINANCE8_NV = 0x8702
  GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703
  GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704
  GL_SIGNED_ALPHA_NV = 0x8705
  GL_SIGNED_ALPHA8_NV = 0x8706
  GL_SIGNED_INTENSITY_NV = 0x8707
  GL_SIGNED_INTENSITY8_NV = 0x8708
  GL_DSDT8_NV = 0x8709
  GL_DSDT8_MAG8_NV = 0x870A
  GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B
  GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C
  GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D
  GL_HI_SCALE_NV = 0x870E
  GL_LO_SCALE_NV = 0x870F
  GL_DS_SCALE_NV = 0x8710
  GL_DT_SCALE_NV = 0x8711
  GL_MAGNITUDE_SCALE_NV = 0x8712
  GL_VIBRANCE_SCALE_NV = 0x8713
  GL_HI_BIAS_NV = 0x8714
  GL_LO_BIAS_NV = 0x8715
  GL_DS_BIAS_NV = 0x8716
  GL_DT_BIAS_NV = 0x8717
  GL_MAGNITUDE_BIAS_NV = 0x8718
  GL_VIBRANCE_BIAS_NV = 0x8719
  GL_TEXTURE_BORDER_VALUES_NV = 0x871A
  GL_TEXTURE_HI_SIZE_NV = 0x871B
  GL_TEXTURE_LO_SIZE_NV = 0x871C
  GL_TEXTURE_DS_SIZE_NV = 0x871D
  GL_TEXTURE_DT_SIZE_NV = 0x871E
  GL_TEXTURE_MAG_SIZE_NV = 0x871F
  GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF
  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533
  GL_VERTEX_PROGRAM_NV = 0x8620
  GL_VERTEX_STATE_PROGRAM_NV = 0x8621
  GL_ATTRIB_ARRAY_SIZE_NV = 0x8623
  GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624
  GL_ATTRIB_ARRAY_TYPE_NV = 0x8625
  GL_CURRENT_ATTRIB_NV = 0x8626
  GL_PROGRAM_LENGTH_NV = 0x8627
  GL_PROGRAM_STRING_NV = 0x8628
  GL_MODELVIEW_PROJECTION_NV = 0x8629
  GL_IDENTITY_NV = 0x862A
  GL_INVERSE_NV = 0x862B
  GL_TRANSPOSE_NV = 0x862C
  GL_INVERSE_TRANSPOSE_NV = 0x862D
  GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E
  GL_MAX_TRACK_MATRICES_NV = 0x862F
  GL_MATRIX0_NV = 0x8630
  GL_MATRIX1_NV = 0x8631
  GL_MATRIX2_NV = 0x8632
  GL_MATRIX3_NV = 0x8633
  GL_MATRIX4_NV = 0x8634
  GL_MATRIX5_NV = 0x8635
  GL_MATRIX6_NV = 0x8636
  GL_MATRIX7_NV = 0x8637
  GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640
  GL_CURRENT_MATRIX_NV = 0x8641
  GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642
  GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643
  GL_PROGRAM_PARAMETER_NV = 0x8644
  GL_ATTRIB_ARRAY_POINTER_NV = 0x8645
  GL_PROGRAM_TARGET_NV = 0x8646
  GL_PROGRAM_RESIDENT_NV = 0x8647
  GL_TRACK_MATRIX_NV = 0x8648
  GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649
  GL_VERTEX_PROGRAM_BINDING_NV = 0x864A
  GL_PROGRAM_ERROR_POSITION_NV = 0x864B
  GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650
  GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651
  GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652
  GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653
  GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654
  GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655
  GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656
  GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657
  GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658
  GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659
  GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A
  GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B
  GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C
  GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D
  GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E
  GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F
  GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660
  GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661
  GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662
  GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663
  GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664
  GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665
  GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666
  GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667
  GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668
  GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669
  GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A
  GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B
  GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C
  GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D
  GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E
  GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F
  GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670
  GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671
  GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672
  GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673
  GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674
  GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675
  GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676
  GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677
  GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678
  GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679
  GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A
  GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B
  GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C
  GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D
  GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E
  GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F
  GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369
  GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A
  GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B
  GL_SCALEBIAS_HINT_SGIX = 0x8322
  GL_INTERLACE_OML = 0x8980
  GL_INTERLACE_READ_OML = 0x8981
  GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982
  GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983
  GL_PACK_RESAMPLE_OML = 0x8984
  GL_UNPACK_RESAMPLE_OML = 0x8985
  GL_RESAMPLE_REPLICATE_OML = 0x8986
  GL_RESAMPLE_ZERO_FILL_OML = 0x8987
  GL_RESAMPLE_AVERAGE_OML = 0x8988
  GL_RESAMPLE_DECIMATE_OML = 0x8989
  GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E
  GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F
  GL_BUMP_ROT_MATRIX_ATI = 0x8775
  GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776
  GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777
  GL_BUMP_TEX_UNITS_ATI = 0x8778
  GL_DUDV_ATI = 0x8779
  GL_DU8DV8_ATI = 0x877A
  GL_BUMP_ENVMAP_ATI = 0x877B
  GL_BUMP_TARGET_ATI = 0x877C
  GL_FRAGMENT_SHADER_ATI = 0x8920
  GL_REG_0_ATI = 0x8921
  GL_REG_1_ATI = 0x8922
  GL_REG_2_ATI = 0x8923
  GL_REG_3_ATI = 0x8924
  GL_REG_4_ATI = 0x8925
  GL_REG_5_ATI = 0x8926
  GL_REG_6_ATI = 0x8927
  GL_REG_7_ATI = 0x8928
  GL_REG_8_ATI = 0x8929
  GL_REG_9_ATI = 0x892A
  GL_REG_10_ATI = 0x892B
  GL_REG_11_ATI = 0x892C
  GL_REG_12_ATI = 0x892D
  GL_REG_13_ATI = 0x892E
  GL_REG_14_ATI = 0x892F
  GL_REG_15_ATI = 0x8930
  GL_REG_16_ATI = 0x8931
  GL_REG_17_ATI = 0x8932
  GL_REG_18_ATI = 0x8933
  GL_REG_19_ATI = 0x8934
  GL_REG_20_ATI = 0x8935
  GL_REG_21_ATI = 0x8936
  GL_REG_22_ATI = 0x8937
  GL_REG_23_ATI = 0x8938
  GL_REG_24_ATI = 0x8939
  GL_REG_25_ATI = 0x893A
  GL_REG_26_ATI = 0x893B
  GL_REG_27_ATI = 0x893C
  GL_REG_28_ATI = 0x893D
  GL_REG_29_ATI = 0x893E
  GL_REG_30_ATI = 0x893F
  GL_REG_31_ATI = 0x8940
  GL_CON_0_ATI = 0x8941
  GL_CON_1_ATI = 0x8942
  GL_CON_2_ATI = 0x8943
  GL_CON_3_ATI = 0x8944
  GL_CON_4_ATI = 0x8945
  GL_CON_5_ATI = 0x8946
  GL_CON_6_ATI = 0x8947
  GL_CON_7_ATI = 0x8948
  GL_CON_8_ATI = 0x8949
  GL_CON_9_ATI = 0x894A
  GL_CON_10_ATI = 0x894B
  GL_CON_11_ATI = 0x894C
  GL_CON_12_ATI = 0x894D
  GL_CON_13_ATI = 0x894E
  GL_CON_14_ATI = 0x894F
  GL_CON_15_ATI = 0x8950
  GL_CON_16_ATI = 0x8951
  GL_CON_17_ATI = 0x8952
  GL_CON_18_ATI = 0x8953
  GL_CON_19_ATI = 0x8954
  GL_CON_20_ATI = 0x8955
  GL_CON_21_ATI = 0x8956
  GL_CON_22_ATI = 0x8957
  GL_CON_23_ATI = 0x8958
  GL_CON_24_ATI = 0x8959
  GL_CON_25_ATI = 0x895A
  GL_CON_26_ATI = 0x895B
  GL_CON_27_ATI = 0x895C
  GL_CON_28_ATI = 0x895D
  GL_CON_29_ATI = 0x895E
  GL_CON_30_ATI = 0x895F
  GL_CON_31_ATI = 0x8960
  GL_MOV_ATI = 0x8961
  GL_ADD_ATI = 0x8963
  GL_MUL_ATI = 0x8964
  GL_SUB_ATI = 0x8965
  GL_DOT3_ATI = 0x8966
  GL_DOT4_ATI = 0x8967
  GL_MAD_ATI = 0x8968
  GL_LERP_ATI = 0x8969
  GL_CND_ATI = 0x896A
  GL_CND0_ATI = 0x896B
  GL_DOT2_ADD_ATI = 0x896C
  GL_SECONDARY_INTERPOLATOR_ATI = 0x896D
  GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E
  GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F
  GL_NUM_PASSES_ATI = 0x8970
  GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971
  GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972
  GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973
  GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974
  GL_COLOR_ALPHA_PAIRING_ATI = 0x8975
  GL_SWIZZLE_STR_ATI = 0x8976
  GL_SWIZZLE_STQ_ATI = 0x8977
  GL_SWIZZLE_STR_DR_ATI = 0x8978
  GL_SWIZZLE_STQ_DQ_ATI = 0x8979
  GL_SWIZZLE_STRQ_ATI = 0x897A
  GL_SWIZZLE_STRQ_DQ_ATI = 0x897B
  GL_RED_BIT_ATI = 0x00000001
  GL_GREEN_BIT_ATI = 0x00000002
  GL_BLUE_BIT_ATI = 0x00000004
  GL_2X_BIT_ATI = 0x00000001
  GL_4X_BIT_ATI = 0x00000002
  GL_8X_BIT_ATI = 0x00000004
  GL_HALF_BIT_ATI = 0x00000008
  GL_QUARTER_BIT_ATI = 0x00000010
  GL_EIGHTH_BIT_ATI = 0x00000020
  GL_SATURATE_BIT_ATI = 0x00000040
  GL_COMP_BIT_ATI = 0x00000002
  GL_NEGATE_BIT_ATI = 0x00000004
  GL_BIAS_BIT_ATI = 0x00000008
  GL_PN_TRIANGLES_ATI = 0x87F0
  GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1
  GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2
  GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3
  GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4
  GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5
  GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6
  GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7
  GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8
  GL_STATIC_ATI = 0x8760
  GL_DYNAMIC_ATI = 0x8761
  GL_PRESERVE_ATI = 0x8762
  GL_DISCARD_ATI = 0x8763
  GL_OBJECT_BUFFER_SIZE_ATI = 0x8764
  GL_OBJECT_BUFFER_USAGE_ATI = 0x8765
  GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766
  GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767
  GL_VERTEX_SHADER_EXT = 0x8780
  GL_VERTEX_SHADER_BINDING_EXT = 0x8781
  GL_OP_INDEX_EXT = 0x8782
  GL_OP_NEGATE_EXT = 0x8783
  GL_OP_DOT3_EXT = 0x8784
  GL_OP_DOT4_EXT = 0x8785
  GL_OP_MUL_EXT = 0x8786
  GL_OP_ADD_EXT = 0x8787
  GL_OP_MADD_EXT = 0x8788
  GL_OP_FRAC_EXT = 0x8789
  GL_OP_MAX_EXT = 0x878A
  GL_OP_MIN_EXT = 0x878B
  GL_OP_SET_GE_EXT = 0x878C
  GL_OP_SET_LT_EXT = 0x878D
  GL_OP_CLAMP_EXT = 0x878E
  GL_OP_FLOOR_EXT = 0x878F
  GL_OP_ROUND_EXT = 0x8790
  GL_OP_EXP_BASE_2_EXT = 0x8791
  GL_OP_LOG_BASE_2_EXT = 0x8792
  GL_OP_POWER_EXT = 0x8793
  GL_OP_RECIP_EXT = 0x8794
  GL_OP_RECIP_SQRT_EXT = 0x8795
  GL_OP_SUB_EXT = 0x8796
  GL_OP_CROSS_PRODUCT_EXT = 0x8797
  GL_OP_MULTIPLY_MATRIX_EXT = 0x8798
  GL_OP_MOV_EXT = 0x8799
  GL_OUTPUT_VERTEX_EXT = 0x879A
  GL_OUTPUT_COLOR0_EXT = 0x879B
  GL_OUTPUT_COLOR1_EXT = 0x879C
  GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D
  GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E
  GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F
  GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0
  GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1
  GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2
  GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3
  GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4
  GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5
  GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6
  GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7
  GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8
  GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9
  GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA
  GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB
  GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC
  GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD
  GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE
  GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF
  GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0
  GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1
  GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2
  GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3
  GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4
  GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5
  GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6
  GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7
  GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8
  GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9
  GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA
  GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB
  GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC
  GL_OUTPUT_FOG_EXT = 0x87BD
  GL_SCALAR_EXT = 0x87BE
  GL_VECTOR_EXT = 0x87BF
  GL_MATRIX_EXT = 0x87C0
  GL_VARIANT_EXT = 0x87C1
  GL_INVARIANT_EXT = 0x87C2
  GL_LOCAL_CONSTANT_EXT = 0x87C3
  GL_LOCAL_EXT = 0x87C4
  GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5
  GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6
  GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7
  GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8
  GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA
  GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE
  GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF
  GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0
  GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1
  GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2
  GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3
  GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4
  GL_X_EXT = 0x87D5
  GL_Y_EXT = 0x87D6
  GL_Z_EXT = 0x87D7
  GL_W_EXT = 0x87D8
  GL_NEGATIVE_X_EXT = 0x87D9
  GL_NEGATIVE_Y_EXT = 0x87DA
  GL_NEGATIVE_Z_EXT = 0x87DB
  GL_NEGATIVE_W_EXT = 0x87DC
  GL_ZERO_EXT = 0x87DD
  GL_ONE_EXT = 0x87DE
  GL_NEGATIVE_ONE_EXT = 0x87DF
  GL_NORMALIZED_RANGE_EXT = 0x87E0
  GL_FULL_RANGE_EXT = 0x87E1
  GL_CURRENT_VERTEX_EXT = 0x87E2
  GL_MVP_MATRIX_EXT = 0x87E3
  GL_VARIANT_VALUE_EXT = 0x87E4
  GL_VARIANT_DATATYPE_EXT = 0x87E5
  GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6
  GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7
  GL_VARIANT_ARRAY_EXT = 0x87E8
  GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9
  GL_INVARIANT_VALUE_EXT = 0x87EA
  GL_INVARIANT_DATATYPE_EXT = 0x87EB
  GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC
  GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED
  GL_MAX_VERTEX_STREAMS_ATI = 0x876B
  GL_VERTEX_STREAM0_ATI = 0x876C
  GL_VERTEX_STREAM1_ATI = 0x876D
  GL_VERTEX_STREAM2_ATI = 0x876E
  GL_VERTEX_STREAM3_ATI = 0x876F
  GL_VERTEX_STREAM4_ATI = 0x8770
  GL_VERTEX_STREAM5_ATI = 0x8771
  GL_VERTEX_STREAM6_ATI = 0x8772
  GL_VERTEX_STREAM7_ATI = 0x8773
  GL_VERTEX_SOURCE_ATI = 0x8774
  GL_ELEMENT_ARRAY_ATI = 0x8768
  GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769
  GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A
  GL_QUAD_MESH_SUN = 0x8614
  GL_TRIANGLE_MESH_SUN = 0x8615
  GL_SLICE_ACCUM_SUN = 0x85CC
  GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534
  GL_DEPTH_CLAMP_NV = 0x864F
  GL_PIXEL_COUNTER_BITS_NV = 0x8864
  GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865
  GL_PIXEL_COUNT_NV = 0x8866
  GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867
  GL_POINT_SPRITE_NV = 0x8861
  GL_COORD_REPLACE_NV = 0x8862
  GL_POINT_SPRITE_R_MODE_NV = 0x8863
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853
  GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854
  GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857
  GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858
  GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859
  GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A
  GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B
  GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C
  GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D
  GL_HILO8_NV = 0x885E
  GL_SIGNED_HILO8_NV = 0x885F
  GL_FORCE_BLUE_TO_ONE_NV = 0x8860
  GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910
  GL_ACTIVE_STENCIL_FACE_EXT = 0x8911
  GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200
  GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2
  GL_ELEMENT_ARRAY_APPLE = 0x8768
  GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8769
  GL_ELEMENT_ARRAY_POINTER_APPLE = 0x876A
  GL_DRAW_PIXELS_APPLE = 0x8A0A
  GL_FENCE_APPLE = 0x8A0B
  GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5
  GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D
  GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E
  GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F
  GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521
  GL_STORAGE_CACHED_APPLE = 0x85BE
  GL_STORAGE_SHARED_APPLE = 0x85BF
  GL_YCBCR_422_APPLE = 0x85B9
  GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA
  GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB
  GL_RGB_S3TC = 0x83A0
  GL_RGB4_S3TC = 0x83A1
  GL_RGBA_S3TC = 0x83A2
  GL_RGBA4_S3TC = 0x83A3
  GL_MAX_DRAW_BUFFERS_ATI = 0x8824
  GL_DRAW_BUFFER0_ATI = 0x8825
  GL_DRAW_BUFFER1_ATI = 0x8826
  GL_DRAW_BUFFER2_ATI = 0x8827
  GL_DRAW_BUFFER3_ATI = 0x8828
  GL_DRAW_BUFFER4_ATI = 0x8829
  GL_DRAW_BUFFER5_ATI = 0x882A
  GL_DRAW_BUFFER6_ATI = 0x882B
  GL_DRAW_BUFFER7_ATI = 0x882C
  GL_DRAW_BUFFER8_ATI = 0x882D
  GL_DRAW_BUFFER9_ATI = 0x882E
  GL_DRAW_BUFFER10_ATI = 0x882F
  GL_DRAW_BUFFER11_ATI = 0x8830
  GL_DRAW_BUFFER12_ATI = 0x8831
  GL_DRAW_BUFFER13_ATI = 0x8832
  GL_DRAW_BUFFER14_ATI = 0x8833
  GL_DRAW_BUFFER15_ATI = 0x8834
  GL_TYPE_RGBA_FLOAT_ATI = 0x8820
  GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835
  GL_MODULATE_ADD_ATI = 0x8744
  GL_MODULATE_SIGNED_ADD_ATI = 0x8745
  GL_MODULATE_SUBTRACT_ATI = 0x8746
  GL_RGBA_FLOAT32_ATI = 0x8814
  GL_RGB_FLOAT32_ATI = 0x8815
  GL_ALPHA_FLOAT32_ATI = 0x8816
  GL_INTENSITY_FLOAT32_ATI = 0x8817
  GL_LUMINANCE_FLOAT32_ATI = 0x8818
  GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819
  GL_RGBA_FLOAT16_ATI = 0x881A
  GL_RGB_FLOAT16_ATI = 0x881B
  GL_ALPHA_FLOAT16_ATI = 0x881C
  GL_INTENSITY_FLOAT16_ATI = 0x881D
  GL_LUMINANCE_FLOAT16_ATI = 0x881E
  GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F
  GL_FLOAT_R_NV = 0x8880
  GL_FLOAT_RG_NV = 0x8881
  GL_FLOAT_RGB_NV = 0x8882
  GL_FLOAT_RGBA_NV = 0x8883
  GL_FLOAT_R16_NV = 0x8884
  GL_FLOAT_R32_NV = 0x8885
  GL_FLOAT_RG16_NV = 0x8886
  GL_FLOAT_RG32_NV = 0x8887
  GL_FLOAT_RGB16_NV = 0x8888
  GL_FLOAT_RGB32_NV = 0x8889
  GL_FLOAT_RGBA16_NV = 0x888A
  GL_FLOAT_RGBA32_NV = 0x888B
  GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C
  GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D
  GL_FLOAT_RGBA_MODE_NV = 0x888E
  GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868
  GL_FRAGMENT_PROGRAM_NV = 0x8870
  GL_MAX_TEXTURE_COORDS_NV = 0x8871
  GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872
  GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873
  GL_PROGRAM_ERROR_STRING_NV = 0x8874
  GL_HALF_FLOAT_NV = 0x140B
  GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878
  GL_READ_PIXEL_DATA_RANGE_NV = 0x8879
  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A
  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B
  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C
  GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D
  GL_PRIMITIVE_RESTART_NV = 0x8558
  GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559
  GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F
  GL_STENCIL_BACK_FUNC_ATI = 0x8800
  GL_STENCIL_BACK_FAIL_ATI = 0x8801
  GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802
  GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803
  GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A
  GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B
  GL_DEPTH_BOUNDS_TEST_EXT = 0x8890
  GL_DEPTH_BOUNDS_EXT = 0x8891
  GL_MIRROR_CLAMP_EXT = 0x8742
  GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743
  GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912
  GL_BLEND_EQUATION_RGB_EXT = 0x8009
  GL_BLEND_EQUATION_ALPHA_EXT = 0x883D
  GL_PACK_INVERT_MESA = 0x8758
  GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA
  GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB
  GL_YCBCR_MESA = 0x8757
  GL_PIXEL_PACK_BUFFER_EXT = 0x88EB
  GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC
  GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED
  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF
  GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4
  GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5
  GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6
  GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7
  GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506
  GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8
  GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6
  GL_RENDERBUFFER_BINDING_EXT = 0x8CA7
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4
  GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC
  GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD
  GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF
  GL_COLOR_ATTACHMENT0_EXT = 0x8CE0
  GL_COLOR_ATTACHMENT1_EXT = 0x8CE1
  GL_COLOR_ATTACHMENT2_EXT = 0x8CE2
  GL_COLOR_ATTACHMENT3_EXT = 0x8CE3
  GL_COLOR_ATTACHMENT4_EXT = 0x8CE4
  GL_COLOR_ATTACHMENT5_EXT = 0x8CE5
  GL_COLOR_ATTACHMENT6_EXT = 0x8CE6
  GL_COLOR_ATTACHMENT7_EXT = 0x8CE7
  GL_COLOR_ATTACHMENT8_EXT = 0x8CE8
  GL_COLOR_ATTACHMENT9_EXT = 0x8CE9
  GL_COLOR_ATTACHMENT10_EXT = 0x8CEA
  GL_COLOR_ATTACHMENT11_EXT = 0x8CEB
  GL_COLOR_ATTACHMENT12_EXT = 0x8CEC
  GL_COLOR_ATTACHMENT13_EXT = 0x8CED
  GL_COLOR_ATTACHMENT14_EXT = 0x8CEE
  GL_COLOR_ATTACHMENT15_EXT = 0x8CEF
  GL_DEPTH_ATTACHMENT_EXT = 0x8D00
  GL_STENCIL_ATTACHMENT_EXT = 0x8D20
  GL_FRAMEBUFFER_EXT = 0x8D40
  GL_RENDERBUFFER_EXT = 0x8D41
  GL_RENDERBUFFER_WIDTH_EXT = 0x8D42
  GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44
  GL_STENCIL_INDEX1_EXT = 0x8D46
  GL_STENCIL_INDEX4_EXT = 0x8D47
  GL_STENCIL_INDEX8_EXT = 0x8D48
  GL_STENCIL_INDEX16_EXT = 0x8D49
  GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50
  GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51
  GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52
  GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53
  GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54
  GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55
  GL_DEPTH_STENCIL_EXT = 0x84F9
  GL_UNSIGNED_INT_24_8_EXT = 0x84FA
  GL_DEPTH24_STENCIL8_EXT = 0x88F0
  GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1
  GL_STENCIL_TAG_BITS_EXT = 0x88F2
  GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3
  GL_SRGB_EXT = 0x8C40
  GL_SRGB8_EXT = 0x8C41
  GL_SRGB_ALPHA_EXT = 0x8C42
  GL_SRGB8_ALPHA8_EXT = 0x8C43
  GL_SLUMINANCE_ALPHA_EXT = 0x8C44
  GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45
  GL_SLUMINANCE_EXT = 0x8C46
  GL_SLUMINANCE8_EXT = 0x8C47
  GL_COMPRESSED_SRGB_EXT = 0x8C48
  GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49
  GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A
  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B
  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F
  GL_READ_FRAMEBUFFER_EXT = 0x8CA8
  GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9
  GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6
  GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA
  GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56
  GL_MAX_SAMPLES_EXT = 0x8D57
  GL_TEXTURE_1D_STACK_MESAX = 0x8759
  GL_TEXTURE_2D_STACK_MESAX = 0x875A
  GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B
  GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C
  GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D
  GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E
  GL_TIME_ELAPSED_EXT = 0x88BF
  GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12
  GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13
  GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904
  GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905
  GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906
  GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6
  GL_LINES_ADJACENCY_EXT = 0x000A
  GL_LINE_STRIP_ADJACENCY_EXT = 0x000B
  GL_TRIANGLES_ADJACENCY_EXT = 0x000C
  GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D
  GL_GEOMETRY_PROGRAM_NV = 0x8C26
  GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27
  GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28
  GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA
  GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB
  GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4
  GL_PROGRAM_POINT_SIZE_EXT = 0x8642
  GL_GEOMETRY_SHADER_EXT = 0x8DD9
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE
  GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD
  GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0
  GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1
  GL_SAMPLER_BUFFER_EXT = 0x8DC2
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4
  GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5
  GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6
  GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7
  GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8
  GL_INT_SAMPLER_1D_EXT = 0x8DC9
  GL_INT_SAMPLER_2D_EXT = 0x8DCA
  GL_INT_SAMPLER_3D_EXT = 0x8DCB
  GL_INT_SAMPLER_CUBE_EXT = 0x8DCC
  GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD
  GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE
  GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF
  GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0
  GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1
  GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2
  GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8
  GL_R11F_G11F_B10F_EXT = 0x8C3A
  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B
  GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C
  GL_TEXTURE_1D_ARRAY_EXT = 0x8C18
  GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19
  GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A
  GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B
  GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C
  GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D
  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF
  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E
  GL_TEXTURE_BUFFER_EXT = 0x8C2A
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B
  GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D
  GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E
  GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73
  GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE
  GL_RGB9_E5_EXT = 0x8C3D
  GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E
  GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F
  GL_DEPTH_COMPONENT32F_NV = 0x8DAB
  GL_DEPTH32F_STENCIL8_NV = 0x8DAC
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD
  GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB
  GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11
  GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12
  GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9
  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA
  GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0
  GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1
  GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2
  GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3
  GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4
  GL_BACK_PRIMARY_COLOR_NV = 0x8C77
  GL_BACK_SECONDARY_COLOR_NV = 0x8C78
  GL_TEXTURE_COORD_NV = 0x8C79
  GL_CLIP_DISTANCE_NV = 0x8C7A
  GL_VERTEX_ID_NV = 0x8C7B
  GL_PRIMITIVE_ID_NV = 0x8C7C
  GL_GENERIC_ATTRIB_NV = 0x8C7D
  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80
  GL_ACTIVE_VARYINGS_NV = 0x8C81
  GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82
  GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83
  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85
  GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86
  GL_PRIMITIVES_GENERATED_NV = 0x8C87
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88
  GL_RASTERIZER_DISCARD_NV = 0x8C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV = 0x8C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B
  GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C
  GL_SEPARATE_ATTRIBS_NV = 0x8C8D
  GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F
  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2
  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3
  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4
  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED
  GL_UNIFORM_BUFFER_EXT = 0x8DEE
  GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF
  GL_RGBA32UI_EXT = 0x8D70
  GL_RGB32UI_EXT = 0x8D71
  GL_ALPHA32UI_EXT = 0x8D72
  GL_INTENSITY32UI_EXT = 0x8D73
  GL_LUMINANCE32UI_EXT = 0x8D74
  GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75
  GL_RGBA16UI_EXT = 0x8D76
  GL_RGB16UI_EXT = 0x8D77
  GL_ALPHA16UI_EXT = 0x8D78
  GL_INTENSITY16UI_EXT = 0x8D79
  GL_LUMINANCE16UI_EXT = 0x8D7A
  GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B
  GL_RGBA8UI_EXT = 0x8D7C
  GL_RGB8UI_EXT = 0x8D7D
  GL_ALPHA8UI_EXT = 0x8D7E
  GL_INTENSITY8UI_EXT = 0x8D7F
  GL_LUMINANCE8UI_EXT = 0x8D80
  GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81
  GL_RGBA32I_EXT = 0x8D82
  GL_RGB32I_EXT = 0x8D83
  GL_ALPHA32I_EXT = 0x8D84
  GL_INTENSITY32I_EXT = 0x8D85
  GL_LUMINANCE32I_EXT = 0x8D86
  GL_LUMINANCE_ALPHA32I_EXT = 0x8D87
  GL_RGBA16I_EXT = 0x8D88
  GL_RGB16I_EXT = 0x8D89
  GL_ALPHA16I_EXT = 0x8D8A
  GL_INTENSITY16I_EXT = 0x8D8B
  GL_LUMINANCE16I_EXT = 0x8D8C
  GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D
  GL_RGBA8I_EXT = 0x8D8E
  GL_RGB8I_EXT = 0x8D8F
  GL_ALPHA8I_EXT = 0x8D90
  GL_INTENSITY8I_EXT = 0x8D91
  GL_LUMINANCE8I_EXT = 0x8D92
  GL_LUMINANCE_ALPHA8I_EXT = 0x8D93
  GL_RED_INTEGER_EXT = 0x8D94
  GL_GREEN_INTEGER_EXT = 0x8D95
  GL_BLUE_INTEGER_EXT = 0x8D96
  GL_ALPHA_INTEGER_EXT = 0x8D97
  GL_RGB_INTEGER_EXT = 0x8D98
  GL_RGBA_INTEGER_EXT = 0x8D99
  GL_BGR_INTEGER_EXT = 0x8D9A
  GL_BGRA_INTEGER_EXT = 0x8D9B
  GL_LUMINANCE_INTEGER_EXT = 0x8D9C
  GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D
  GL_RGBA_INTEGER_MODE_EXT = 0x8D9E
  GL_QUERY_WAIT_NV = 0x8E13
  GL_QUERY_NO_WAIT_NV = 0x8E14
  GL_QUERY_BY_REGION_WAIT_NV = 0x8E15
  GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16
  GL_FRAME_NV = 0x8E26
  GL_FIELDS_NV = 0x8E27
  GL_CURRENT_TIME_NV = 0x8E28
  GL_NUM_FILL_STREAMS_NV = 0x8E29
  GL_PRESENT_TIME_NV = 0x8E2A
  GL_PRESENT_DURATION_NV = 0x8E2B
  GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E
  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F
  GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C
  GL_SEPARATE_ATTRIBS_EXT = 0x8C8D
  GL_PRIMITIVES_GENERATED_EXT = 0x8C87
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88
  GL_RASTERIZER_DISCARD_EXT = 0x8C89
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80
  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76
  GL_PROGRAM_MATRIX_EXT = 0x8E2D
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F
  GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42
  GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43
  GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44
  GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45
  GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46
  GL_SAMPLE_POSITION_NV = 0x8E50
  GL_SAMPLE_MASK_NV = 0x8E51
  GL_SAMPLE_MASK_VALUE_NV = 0x8E52
  GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54
  GL_TEXTURE_RENDERBUFFER_NV = 0x8E55
  GL_SAMPLER_RENDERBUFFER_NV = 0x8E56
  GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58
  GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59
  GL_TRANSFORM_FEEDBACK_NV = 0x8E22
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24
  GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25
  GL_VBO_FREE_MEMORY_ATI = 0x87FB
  GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC
  GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD
  GL_COUNTER_TYPE_AMD = 0x8BC0
  GL_COUNTER_RANGE_AMD = 0x8BC1
  GL_UNSIGNED_INT64_AMD = 0x8BC2
  GL_PERCENTAGE_AMD = 0x8BC3
  GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4
  GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5
  GL_PERFMON_RESULT_AMD = 0x8BC6
  GL_SAMPLER_BUFFER_AMD = 0x9001
  GL_INT_SAMPLER_BUFFER_AMD = 0x9002
  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003
  GL_TESSELLATION_MODE_AMD = 0x9004
  GL_TESSELLATION_FACTOR_AMD = 0x9005
  GL_DISCRETE_AMD = 0x9006
  GL_CONTINUOUS_AMD = 0x9007
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C
  GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D
  GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E
  GL_PROVOKING_VERTEX_EXT = 0x8E4F
  GL_ALPHA_SNORM = 0x9010
  GL_LUMINANCE_SNORM = 0x9011
  GL_LUMINANCE_ALPHA_SNORM = 0x9012
  GL_INTENSITY_SNORM = 0x9013
  GL_ALPHA8_SNORM = 0x9014
  GL_LUMINANCE8_SNORM = 0x9015
  GL_LUMINANCE8_ALPHA8_SNORM = 0x9016
  GL_INTENSITY8_SNORM = 0x9017
  GL_ALPHA16_SNORM = 0x9018
  GL_LUMINANCE16_SNORM = 0x9019
  GL_LUMINANCE16_ALPHA16_SNORM = 0x901A
  GL_INTENSITY16_SNORM = 0x901B
  GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7
  GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8
  GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC
  GL_STORAGE_PRIVATE_APPLE = 0x85BD
  GL_HALF_APPLE = 0x140B
  GL_RGBA_FLOAT32_APPLE = 0x8814
  GL_RGB_FLOAT32_APPLE = 0x8815
  GL_ALPHA_FLOAT32_APPLE = 0x8816
  GL_INTENSITY_FLOAT32_APPLE = 0x8817
  GL_LUMINANCE_FLOAT32_APPLE = 0x8818
  GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819
  GL_RGBA_FLOAT16_APPLE = 0x881A
  GL_RGB_FLOAT16_APPLE = 0x881B
  GL_ALPHA_FLOAT16_APPLE = 0x881C
  GL_INTENSITY_FLOAT16_APPLE = 0x881D
  GL_LUMINANCE_FLOAT16_APPLE = 0x881E
  GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F
  GL_COLOR_FLOAT_APPLE = 0x8A0F
  GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00
  GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01
  GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02
  GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03
  GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04
  GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05
  GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06
  GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07
  GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08
  GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09
  GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14
  GL_BUFFER_OBJECT_APPLE = 0x85B3
  GL_RELEASED_APPLE = 0x8A19
  GL_VOLATILE_APPLE = 0x8A1A
  GL_RETAINED_APPLE = 0x8A1B
  GL_UNDEFINED_APPLE = 0x8A1C
  GL_PURGEABLE_APPLE = 0x8A1D
  GL_PACK_ROW_BYTES_APPLE = 0x8A15
  GL_UNPACK_ROW_BYTES_APPLE = 0x8A16
  GL_VERSION_1_2 = 1
  callback(:PFNGLBLENDCOLORPROC, [ GLclampf, GLclampf, GLclampf, GLclampf ], :void)
  callback(:PFNGLBLENDEQUATIONPROC, [ GLenum ], :void)
  callback(:PFNGLDRAWRANGEELEMENTSPROC, [ GLenum, GLuint, GLuint, GLsizei, GLenum, :pointer ], :void)
  callback(:PFNGLTEXIMAGE3DPROC, [ GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXSUBIMAGE3DPROC, [ GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYTEXSUBIMAGE3DPROC, [ GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  GL_VERSION_1_2_DEPRECATED = 1
  callback(:PFNGLCOLORTABLEPROC, [ GLenum, GLenum, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOLORTABLEPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOLORTABLEPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCOLORTABLEPROC, [ GLenum, GLenum, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLGETCOLORTABLEPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOLORSUBTABLEPROC, [ GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCOLORSUBTABLEPROC, [ GLenum, GLsizei, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCONVOLUTIONFILTER1DPROC, [ GLenum, GLenum, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONFILTER2DPROC, [ GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERFPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERIPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCONVOLUTIONFILTER1DPROC, [ GLenum, GLenum, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCOPYCONVOLUTIONFILTER2DPROC, [ GLenum, GLenum, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETCONVOLUTIONFILTERPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCONVOLUTIONPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCONVOLUTIONPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETSEPARABLEFILTERPROC, [ GLenum, GLenum, GLenum, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLSEPARABLEFILTER2DPROC, [ GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer, :pointer ], :void)
  callback(:PFNGLGETHISTOGRAMPROC, [ GLenum, GLboolean, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETHISTOGRAMPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETHISTOGRAMPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXPROC, [ GLenum, GLboolean, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXPARAMETERFVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLHISTOGRAMPROC, [ GLenum, GLsizei, GLenum, GLboolean ], :void)
  callback(:PFNGLMINMAXPROC, [ GLenum, GLenum, GLboolean ], :void)
  callback(:PFNGLRESETHISTOGRAMPROC, [ GLenum ], :void)
  callback(:PFNGLRESETMINMAXPROC, [ GLenum ], :void)
  GL_VERSION_1_3 = 1
  callback(:PFNGLACTIVETEXTUREPROC, [ GLenum ], :void)
  callback(:PFNGLSAMPLECOVERAGEPROC, [ GLclampf, GLboolean ], :void)
  callback(:PFNGLCOMPRESSEDTEXIMAGE3DPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXIMAGE2DPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXIMAGE1DPROC, [ GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC, [ GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC, [ GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC, [ GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETCOMPRESSEDTEXIMAGEPROC, [ GLenum, GLint, :pointer ], :void)
  GL_VERSION_1_3_DEPRECATED = 1
  callback(:PFNGLCLIENTACTIVETEXTUREPROC, [ GLenum ], :void)
  callback(:PFNGLMULTITEXCOORD1DPROC, [ GLenum, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD1DVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1FPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD1FVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1IPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD1IVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1SPROC, [ GLenum, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD1SVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2DPROC, [ GLenum, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD2DVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2FPROC, [ GLenum, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD2FVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2IPROC, [ GLenum, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD2IVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2SPROC, [ GLenum, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD2SVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3DPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD3DVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3FPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD3FVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3IPROC, [ GLenum, GLint, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD3IVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3SPROC, [ GLenum, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD3SVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4DPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD4DVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4FPROC, [ GLenum, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD4FVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4IPROC, [ GLenum, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD4IVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4SPROC, [ GLenum, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD4SVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLLOADTRANSPOSEMATRIXFPROC, [ :pointer ], :void)
  callback(:PFNGLLOADTRANSPOSEMATRIXDPROC, [ :pointer ], :void)
  callback(:PFNGLMULTTRANSPOSEMATRIXFPROC, [ :pointer ], :void)
  callback(:PFNGLMULTTRANSPOSEMATRIXDPROC, [ :pointer ], :void)
  GL_VERSION_1_4 = 1
  callback(:PFNGLBLENDFUNCSEPARATEPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLMULTIDRAWARRAYSPROC, [ GLenum, :pointer, :pointer, GLsizei ], :void)
  callback(:PFNGLMULTIDRAWELEMENTSPROC, [ GLenum, :pointer, GLenum, :pointer, GLsizei ], :void)
  callback(:PFNGLPOINTPARAMETERFPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLPOINTPARAMETERFVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLPOINTPARAMETERIPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLPOINTPARAMETERIVPROC, [ GLenum, :pointer ], :void)
  GL_VERSION_1_4_DEPRECATED = 1
  callback(:PFNGLFOGCOORDFPROC, [ GLfloat ], :void)
  callback(:PFNGLFOGCOORDFVPROC, [ :pointer ], :void)
  callback(:PFNGLFOGCOORDDPROC, [ GLdouble ], :void)
  callback(:PFNGLFOGCOORDDVPROC, [ :pointer ], :void)
  callback(:PFNGLFOGCOORDPOINTERPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3BPROC, [ GLbyte, GLbyte, GLbyte ], :void)
  callback(:PFNGLSECONDARYCOLOR3BVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3DPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLSECONDARYCOLOR3DVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3FPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLSECONDARYCOLOR3FVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3IPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLSECONDARYCOLOR3IVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3SPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLSECONDARYCOLOR3SVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3UBPROC, [ GLubyte, GLubyte, GLubyte ], :void)
  callback(:PFNGLSECONDARYCOLOR3UBVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3UIPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLSECONDARYCOLOR3UIVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3USPROC, [ GLushort, GLushort, GLushort ], :void)
  callback(:PFNGLSECONDARYCOLOR3USVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLORPOINTERPROC, [ GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLWINDOWPOS2DPROC, [ GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS2DVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2FPROC, [ GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS2FVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2IPROC, [ GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS2IVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2SPROC, [ GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS2SVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3DPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS3DVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3FPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS3FVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3IPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS3IVPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3SPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS3SVPROC, [ :pointer ], :void)
  GL_VERSION_1_5 = 1
  callback(:PFNGLGENQUERIESPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLDELETEQUERIESPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISQUERYPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBEGINQUERYPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLENDQUERYPROC, [ GLenum ], :void)
  callback(:PFNGLGETQUERYIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETQUERYOBJECTIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETQUERYOBJECTUIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLBINDBUFFERPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISBUFFERPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBUFFERDATAPROC, [ GLenum, ptrdiff_t, :pointer, GLenum ], :void)
  callback(:PFNGLBUFFERSUBDATAPROC, [ GLenum, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLGETBUFFERSUBDATAPROC, [ GLenum, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLMAPBUFFERPROC, [ GLenum, GLenum ], :pointer)
  callback(:PFNGLUNMAPBUFFERPROC, [ GLenum ], GLboolean)
  callback(:PFNGLGETBUFFERPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETBUFFERPOINTERVPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_VERSION_2_0 = 1
  callback(:PFNGLBLENDEQUATIONSEPARATEPROC, [ GLenum, GLenum ], :void)
  callback(:PFNGLDRAWBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLSTENCILOPSEPARATEPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLSTENCILFUNCSEPARATEPROC, [ GLenum, GLenum, GLint, GLuint ], :void)
  callback(:PFNGLSTENCILMASKSEPARATEPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLATTACHSHADERPROC, [ GLuint, GLuint ], :void)
  callback(:PFNGLBINDATTRIBLOCATIONPROC, [ GLuint, GLuint, :string ], :void)
  callback(:PFNGLCOMPILESHADERPROC, [ GLuint ], :void)
  callback(:PFNGLCREATEPROGRAMPROC, [], GLuint)
  callback(:PFNGLCREATESHADERPROC, [ GLenum ], GLuint)
  callback(:PFNGLDELETEPROGRAMPROC, [ GLuint ], :void)
  callback(:PFNGLDELETESHADERPROC, [ GLuint ], :void)
  callback(:PFNGLDETACHSHADERPROC, [ GLuint, GLuint ], :void)
  callback(:PFNGLDISABLEVERTEXATTRIBARRAYPROC, [ GLuint ], :void)
  callback(:PFNGLENABLEVERTEXATTRIBARRAYPROC, [ GLuint ], :void)
  callback(:PFNGLGETACTIVEATTRIBPROC, [ GLuint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLGETACTIVEUNIFORMPROC, [ GLuint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLGETATTACHEDSHADERSPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLGETATTRIBLOCATIONPROC, [ GLuint, :string ], GLint)
  callback(:PFNGLGETPROGRAMIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETPROGRAMINFOLOGPROC, [ GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETSHADERIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETSHADERINFOLOGPROC, [ GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETSHADERSOURCEPROC, [ GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETUNIFORMLOCATIONPROC, [ GLuint, :string ], GLint)
  callback(:PFNGLGETUNIFORMFVPROC, [ GLuint, GLint, :pointer ], :void)
  callback(:PFNGLGETUNIFORMIVPROC, [ GLuint, GLint, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBDVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBFVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBPOINTERVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLISPROGRAMPROC, [ GLuint ], GLboolean)
  callback(:PFNGLISSHADERPROC, [ GLuint ], GLboolean)
  callback(:PFNGLLINKPROGRAMPROC, [ GLuint ], :void)
  callback(:PFNGLSHADERSOURCEPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLUSEPROGRAMPROC, [ GLuint ], :void)
  callback(:PFNGLUNIFORM1FPROC, [ GLint, GLfloat ], :void)
  callback(:PFNGLUNIFORM2FPROC, [ GLint, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM3FPROC, [ GLint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM4FPROC, [ GLint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM1IPROC, [ GLint, GLint ], :void)
  callback(:PFNGLUNIFORM2IPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM3IPROC, [ GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM4IPROC, [ GLint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM1FVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2FVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3FVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4FVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM1IVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2IVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3IVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4IVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX2FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX3FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX4FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLVALIDATEPROGRAMPROC, [ GLuint ], :void)
  callback(:PFNGLVERTEXATTRIB1DPROC, [ GLuint, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB1DVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1FPROC, [ GLuint, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB1FVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1SPROC, [ GLuint, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB1SVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2DPROC, [ GLuint, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB2DVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2FPROC, [ GLuint, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB2FVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2SPROC, [ GLuint, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB2SVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3DPROC, [ GLuint, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB3DVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3FPROC, [ GLuint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB3FVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3SPROC, [ GLuint, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB3SVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NBVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NSVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUBPROC, [ GLuint, GLubyte, GLubyte, GLubyte, GLubyte ], :void)
  callback(:PFNGLVERTEXATTRIB4NUBVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUSVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4BVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4DPROC, [ GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB4DVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4FPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB4FVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4IVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4SPROC, [ GLuint, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB4SVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4UBVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4UIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4USVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBPOINTERPROC, [ GLuint, GLint, GLenum, GLboolean, GLsizei, :pointer ], :void)
  GL_VERSION_2_1 = 1
  callback(:PFNGLUNIFORMMATRIX2X3FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX3X2FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX2X4FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX4X2FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX3X4FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX4X3FVPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  GL_VERSION_3_0 = 1
  callback(:PFNGLCOLORMASKIPROC, [ GLuint, GLboolean, GLboolean, GLboolean, GLboolean ], :void)
  callback(:PFNGLGETBOOLEANI_VPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETINTEGERI_VPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLENABLEIPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDISABLEIPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLISENABLEDIPROC, [ GLenum, GLuint ], GLboolean)
  callback(:PFNGLBEGINTRANSFORMFEEDBACKPROC, [ GLenum ], :void)
  callback(:PFNGLENDTRANSFORMFEEDBACKPROC, [], :void)
  callback(:PFNGLBINDBUFFERRANGEPROC, [ GLenum, GLuint, GLuint, ptrdiff_t, ptrdiff_t ], :void)
  callback(:PFNGLBINDBUFFERBASEPROC, [ GLenum, GLuint, GLuint ], :void)
  callback(:PFNGLTRANSFORMFEEDBACKVARYINGSPROC, [ GLuint, GLsizei, :pointer, GLenum ], :void)
  callback(:PFNGLGETTRANSFORMFEEDBACKVARYINGPROC, [ GLuint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLCLAMPCOLORPROC, [ GLenum, GLenum ], :void)
  callback(:PFNGLBEGINCONDITIONALRENDERPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLENDCONDITIONALRENDERPROC, [], :void)
  callback(:PFNGLVERTEXATTRIBIPOINTERPROC, [ GLuint, GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIUIVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI1IPROC, [ GLuint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI2IPROC, [ GLuint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI3IPROC, [ GLuint, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI4IPROC, [ GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI1UIPROC, [ GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI2UIPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI3UIPROC, [ GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI4UIPROC, [ GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI1IVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI2IVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI3IVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4IVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI1UIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI2UIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI3UIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4UIVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4BVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4SVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4UBVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4USVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLGETUNIFORMUIVPROC, [ GLuint, GLint, :pointer ], :void)
  callback(:PFNGLBINDFRAGDATALOCATIONPROC, [ GLuint, GLuint, :string ], :void)
  callback(:PFNGLGETFRAGDATALOCATIONPROC, [ GLuint, :string ], GLint)
  callback(:PFNGLUNIFORM1UIPROC, [ GLint, GLuint ], :void)
  callback(:PFNGLUNIFORM2UIPROC, [ GLint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM3UIPROC, [ GLint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM4UIPROC, [ GLint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM1UIVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2UIVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3UIVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4UIVPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLTEXPARAMETERIIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXPARAMETERIUIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXPARAMETERIIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXPARAMETERIUIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCLEARBUFFERIVPROC, [ GLenum, GLint, :pointer ], :void)
  callback(:PFNGLCLEARBUFFERUIVPROC, [ GLenum, GLint, :pointer ], :void)
  callback(:PFNGLCLEARBUFFERFVPROC, [ GLenum, GLint, :pointer ], :void)
  callback(:PFNGLCLEARBUFFERFIPROC, [ GLenum, GLint, GLfloat, GLint ], :void)
  callback(:PFNGLGETSTRINGIPROC, [ GLenum, GLuint ], GLubyte)
  GL_VERSION_3_1 = 1
  callback(:PFNGLDRAWARRAYSINSTANCEDPROC, [ GLenum, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLDRAWELEMENTSINSTANCEDPROC, [ GLenum, GLsizei, GLenum, :pointer, GLsizei ], :void)
  callback(:PFNGLTEXBUFFERPROC, [ GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLPRIMITIVERESTARTINDEXPROC, [ GLuint ], :void)
  GL_VERSION_3_2 = 1
  callback(:PFNGLGETINTEGER64I_VPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETBUFFERPARAMETERI64VPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLPROGRAMPARAMETERIPROC, [ GLuint, GLenum, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREPROC, [ GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREFACEPROC, [ GLenum, GLenum, GLuint, GLint, GLenum ], :void)
  GL_ARB_multitexture = 1
  callback(:PFNGLACTIVETEXTUREARBPROC, [ GLenum ], :void)
  callback(:PFNGLCLIENTACTIVETEXTUREARBPROC, [ GLenum ], :void)
  callback(:PFNGLMULTITEXCOORD1DARBPROC, [ GLenum, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD1DVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1FARBPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD1FVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1IARBPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD1IVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1SARBPROC, [ GLenum, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD1SVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2DARBPROC, [ GLenum, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD2DVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2FARBPROC, [ GLenum, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD2FVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2IARBPROC, [ GLenum, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD2IVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2SARBPROC, [ GLenum, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD2SVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3DARBPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD3DVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3FARBPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD3FVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3IARBPROC, [ GLenum, GLint, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD3IVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3SARBPROC, [ GLenum, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD3SVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4DARBPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMULTITEXCOORD4DVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4FARBPROC, [ GLenum, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMULTITEXCOORD4FVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4IARBPROC, [ GLenum, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLMULTITEXCOORD4IVARBPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4SARBPROC, [ GLenum, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLMULTITEXCOORD4SVARBPROC, [ GLenum, :pointer ], :void)
  GL_ARB_transpose_matrix = 1
  callback(:PFNGLLOADTRANSPOSEMATRIXFARBPROC, [ :pointer ], :void)
  callback(:PFNGLLOADTRANSPOSEMATRIXDARBPROC, [ :pointer ], :void)
  callback(:PFNGLMULTTRANSPOSEMATRIXFARBPROC, [ :pointer ], :void)
  callback(:PFNGLMULTTRANSPOSEMATRIXDARBPROC, [ :pointer ], :void)
  GL_ARB_multisample = 1
  callback(:PFNGLSAMPLECOVERAGEARBPROC, [ GLclampf, GLboolean ], :void)
  GL_ARB_texture_env_add = 1
  GL_ARB_texture_cube_map = 1
  GL_ARB_texture_compression = 1
  callback(:PFNGLCOMPRESSEDTEXIMAGE3DARBPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXIMAGE2DARBPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXIMAGE1DARBPROC, [ GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC, [ GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC, [ GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC, [ GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETCOMPRESSEDTEXIMAGEARBPROC, [ GLenum, GLint, :pointer ], :void)
  GL_ARB_texture_border_clamp = 1
  GL_ARB_point_parameters = 1
  callback(:PFNGLPOINTPARAMETERFARBPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLPOINTPARAMETERFVARBPROC, [ GLenum, :pointer ], :void)
  GL_ARB_vertex_blend = 1
  callback(:PFNGLWEIGHTBVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTSVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTIVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTFVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTDVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTUBVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTUSVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTUIVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLWEIGHTPOINTERARBPROC, [ GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXBLENDARBPROC, [ GLint ], :void)
  GL_ARB_matrix_palette = 1
  callback(:PFNGLCURRENTPALETTEMATRIXARBPROC, [ GLint ], :void)
  callback(:PFNGLMATRIXINDEXUBVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLMATRIXINDEXUSVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLMATRIXINDEXUIVARBPROC, [ GLint, :pointer ], :void)
  callback(:PFNGLMATRIXINDEXPOINTERARBPROC, [ GLint, GLenum, GLsizei, :pointer ], :void)
  GL_ARB_texture_env_combine = 1
  GL_ARB_texture_env_crossbar = 1
  GL_ARB_texture_env_dot3 = 1
  GL_ARB_texture_mirrored_repeat = 1
  GL_ARB_depth_texture = 1
  GL_ARB_shadow = 1
  GL_ARB_shadow_ambient = 1
  GL_ARB_window_pos = 1
  callback(:PFNGLWINDOWPOS2DARBPROC, [ GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS2DVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2FARBPROC, [ GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS2FVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2IARBPROC, [ GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS2IVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2SARBPROC, [ GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS2SVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3DARBPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS3DVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3FARBPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS3FVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3IARBPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS3IVARBPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3SARBPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS3SVARBPROC, [ :pointer ], :void)
  GL_ARB_vertex_program = 1
  callback(:PFNGLVERTEXATTRIB1DARBPROC, [ GLuint, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB1DVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1FARBPROC, [ GLuint, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB1FVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1SARBPROC, [ GLuint, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB1SVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2DARBPROC, [ GLuint, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB2DVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2FARBPROC, [ GLuint, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB2FVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2SARBPROC, [ GLuint, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB2SVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3DARBPROC, [ GLuint, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB3DVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3FARBPROC, [ GLuint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB3FVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3SARBPROC, [ GLuint, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB3SVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NBVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NIVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NSVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUBARBPROC, [ GLuint, GLubyte, GLubyte, GLubyte, GLubyte ], :void)
  callback(:PFNGLVERTEXATTRIB4NUBVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUIVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4NUSVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4BVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4DARBPROC, [ GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB4DVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4FARBPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB4FVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4IVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4SARBPROC, [ GLuint, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB4SVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4UBVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4UIVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4USVARBPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBPOINTERARBPROC, [ GLuint, GLint, GLenum, GLboolean, GLsizei, :pointer ], :void)
  callback(:PFNGLENABLEVERTEXATTRIBARRAYARBPROC, [ GLuint ], :void)
  callback(:PFNGLDISABLEVERTEXATTRIBARRAYARBPROC, [ GLuint ], :void)
  callback(:PFNGLPROGRAMSTRINGARBPROC, [ GLenum, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLBINDPROGRAMARBPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEPROGRAMSARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENPROGRAMSARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETER4DARBPROC, [ GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLPROGRAMENVPARAMETER4DVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETER4FARBPROC, [ GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMENVPARAMETER4FVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETER4DARBPROC, [ GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETER4DVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETER4FARBPROC, [ GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETER4FVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMENVPARAMETERDVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMENVPARAMETERFVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMIVARBPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETPROGRAMSTRINGARBPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBDVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBFVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBPOINTERVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLISPROGRAMARBPROC, [ GLuint ], GLboolean)
  GL_ARB_fragment_program = 1
  GL_ARB_vertex_buffer_object = 1
  callback(:PFNGLBINDBUFFERARBPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEBUFFERSARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENBUFFERSARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISBUFFERARBPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBUFFERDATAARBPROC, [ GLenum, ptrdiff_t, :pointer, GLenum ], :void)
  callback(:PFNGLBUFFERSUBDATAARBPROC, [ GLenum, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLGETBUFFERSUBDATAARBPROC, [ GLenum, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLMAPBUFFERARBPROC, [ GLenum, GLenum ], :pointer)
  callback(:PFNGLUNMAPBUFFERARBPROC, [ GLenum ], GLboolean)
  callback(:PFNGLGETBUFFERPARAMETERIVARBPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETBUFFERPOINTERVARBPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_ARB_occlusion_query = 1
  callback(:PFNGLGENQUERIESARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLDELETEQUERIESARBPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISQUERYARBPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBEGINQUERYARBPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLENDQUERYARBPROC, [ GLenum ], :void)
  callback(:PFNGLGETQUERYIVARBPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETQUERYOBJECTIVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETQUERYOBJECTUIVARBPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_ARB_shader_objects = 1
  callback(:PFNGLDELETEOBJECTARBPROC, [ :uint ], :void)
  callback(:PFNGLGETHANDLEARBPROC, [ GLenum ], :uint)
  callback(:PFNGLDETACHOBJECTARBPROC, [ :uint, :uint ], :void)
  callback(:PFNGLCREATESHADEROBJECTARBPROC, [ GLenum ], :uint)
  callback(:PFNGLSHADERSOURCEARBPROC, [ :uint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLCOMPILESHADERARBPROC, [ :uint ], :void)
  callback(:PFNGLCREATEPROGRAMOBJECTARBPROC, [], :uint)
  callback(:PFNGLATTACHOBJECTARBPROC, [ :uint, :uint ], :void)
  callback(:PFNGLLINKPROGRAMARBPROC, [ :uint ], :void)
  callback(:PFNGLUSEPROGRAMOBJECTARBPROC, [ :uint ], :void)
  callback(:PFNGLVALIDATEPROGRAMARBPROC, [ :uint ], :void)
  callback(:PFNGLUNIFORM1FARBPROC, [ GLint, GLfloat ], :void)
  callback(:PFNGLUNIFORM2FARBPROC, [ GLint, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM3FARBPROC, [ GLint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM4FARBPROC, [ GLint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLUNIFORM1IARBPROC, [ GLint, GLint ], :void)
  callback(:PFNGLUNIFORM2IARBPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM3IARBPROC, [ GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM4IARBPROC, [ GLint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLUNIFORM1FVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2FVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3FVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4FVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM1IVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2IVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3IVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4IVARBPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX2FVARBPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX3FVARBPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLUNIFORMMATRIX4FVARBPROC, [ GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLGETOBJECTPARAMETERFVARBPROC, [ :uint, GLenum, :pointer ], :void)
  callback(:PFNGLGETOBJECTPARAMETERIVARBPROC, [ :uint, GLenum, :pointer ], :void)
  callback(:PFNGLGETINFOLOGARBPROC, [ :uint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETATTACHEDOBJECTSARBPROC, [ :uint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLGETUNIFORMLOCATIONARBPROC, [ :uint, :string ], GLint)
  callback(:PFNGLGETACTIVEUNIFORMARBPROC, [ :uint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLGETUNIFORMFVARBPROC, [ :uint, GLint, :pointer ], :void)
  callback(:PFNGLGETUNIFORMIVARBPROC, [ :uint, GLint, :pointer ], :void)
  callback(:PFNGLGETSHADERSOURCEARBPROC, [ :uint, GLsizei, :pointer, :string ], :void)
  GL_ARB_vertex_shader = 1
  callback(:PFNGLBINDATTRIBLOCATIONARBPROC, [ :uint, GLuint, :string ], :void)
  callback(:PFNGLGETACTIVEATTRIBARBPROC, [ :uint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLGETATTRIBLOCATIONARBPROC, [ :uint, :string ], GLint)
  GL_ARB_fragment_shader = 1
  GL_ARB_shading_language_100 = 1
  GL_ARB_texture_non_power_of_two = 1
  GL_ARB_point_sprite = 1
  GL_ARB_fragment_program_shadow = 1
  GL_ARB_draw_buffers = 1
  callback(:PFNGLDRAWBUFFERSARBPROC, [ GLsizei, :pointer ], :void)
  GL_ARB_texture_rectangle = 1
  GL_ARB_color_buffer_float = 1
  callback(:PFNGLCLAMPCOLORARBPROC, [ GLenum, GLenum ], :void)
  GL_ARB_half_float_pixel = 1
  GL_ARB_texture_float = 1
  GL_ARB_pixel_buffer_object = 1
  GL_ARB_depth_buffer_float = 1
  GL_ARB_draw_instanced = 1
  callback(:PFNGLDRAWARRAYSINSTANCEDARBPROC, [ GLenum, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLDRAWELEMENTSINSTANCEDARBPROC, [ GLenum, GLsizei, GLenum, :pointer, GLsizei ], :void)
  GL_ARB_framebuffer_object = 1
  callback(:PFNGLISRENDERBUFFERPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBINDRENDERBUFFERPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETERENDERBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENRENDERBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLRENDERBUFFERSTORAGEPROC, [ GLenum, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETRENDERBUFFERPARAMETERIVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLISFRAMEBUFFERPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBINDFRAMEBUFFERPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEFRAMEBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENFRAMEBUFFERSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLCHECKFRAMEBUFFERSTATUSPROC, [ GLenum ], GLenum)
  callback(:PFNGLFRAMEBUFFERTEXTURE1DPROC, [ GLenum, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURE2DPROC, [ GLenum, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURE3DPROC, [ GLenum, GLenum, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERRENDERBUFFERPROC, [ GLenum, GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGENERATEMIPMAPPROC, [ GLenum ], :void)
  callback(:PFNGLBLITFRAMEBUFFERPROC, [ GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum ], :void)
  callback(:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC, [ GLenum, GLsizei, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURELAYERPROC, [ GLenum, GLenum, GLuint, GLint, GLint ], :void)
  GL_ARB_framebuffer_sRGB = 1
  GL_ARB_geometry_shader4 = 1
  callback(:PFNGLPROGRAMPARAMETERIARBPROC, [ GLuint, GLenum, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREARBPROC, [ GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURELAYERARBPROC, [ GLenum, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREFACEARBPROC, [ GLenum, GLenum, GLuint, GLint, GLenum ], :void)
  GL_ARB_half_float_vertex = 1
  GL_ARB_instanced_arrays = 1
  callback(:PFNGLVERTEXATTRIBDIVISORARBPROC, [ GLuint, GLuint ], :void)
  GL_ARB_map_buffer_range = 1
  callback(:PFNGLMAPBUFFERRANGEPROC, [ GLenum, ptrdiff_t, ptrdiff_t, GLbitfield ], :pointer)
  callback(:PFNGLFLUSHMAPPEDBUFFERRANGEPROC, [ GLenum, ptrdiff_t, ptrdiff_t ], :void)
  GL_ARB_texture_buffer_object = 1
  callback(:PFNGLTEXBUFFERARBPROC, [ GLenum, GLenum, GLuint ], :void)
  GL_ARB_texture_compression_rgtc = 1
  GL_ARB_texture_rg = 1
  GL_ARB_vertex_array_object = 1
  callback(:PFNGLBINDVERTEXARRAYPROC, [ GLuint ], :void)
  callback(:PFNGLDELETEVERTEXARRAYSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENVERTEXARRAYSPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISVERTEXARRAYPROC, [ GLuint ], GLboolean)
  GL_ARB_uniform_buffer_object = 1
  callback(:PFNGLGETUNIFORMINDICESPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLGETACTIVEUNIFORMSIVPROC, [ GLuint, GLsizei, :pointer, GLenum, :pointer ], :void)
  callback(:PFNGLGETACTIVEUNIFORMNAMEPROC, [ GLuint, GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETUNIFORMBLOCKINDEXPROC, [ GLuint, :string ], GLuint)
  callback(:PFNGLGETACTIVEUNIFORMBLOCKIVPROC, [ GLuint, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC, [ GLuint, GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLUNIFORMBLOCKBINDINGPROC, [ GLuint, GLuint, GLuint ], :void)
  GL_ARB_compatibility = 1
  GL_ARB_copy_buffer = 1
  callback(:PFNGLCOPYBUFFERSUBDATAPROC, [ GLenum, GLenum, ptrdiff_t, ptrdiff_t, ptrdiff_t ], :void)
  GL_ARB_shader_texture_lod = 1
  GL_ARB_depth_clamp = 1
  GL_ARB_draw_elements_base_vertex = 1
  callback(:PFNGLDRAWELEMENTSBASEVERTEXPROC, [ GLenum, GLsizei, GLenum, :pointer, GLint ], :void)
  callback(:PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC, [ GLenum, GLuint, GLuint, GLsizei, GLenum, :pointer, GLint ], :void)
  callback(:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC, [ GLenum, GLsizei, GLenum, :pointer, GLsizei, GLint ], :void)
  callback(:PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC, [ GLenum, :pointer, GLenum, :pointer, GLsizei, :pointer ], :void)
  GL_ARB_fragment_coord_conventions = 1
  GL_ARB_provoking_vertex = 1
  callback(:PFNGLPROVOKINGVERTEXPROC, [ GLenum ], :void)
  GL_ARB_seamless_cube_map = 1
  GL_ARB_sync = 1
  callback(:PFNGLFENCESYNCPROC, [ GLenum, GLbitfield ], :pointer)
  callback(:PFNGLISSYNCPROC, [ :pointer ], GLboolean)
  callback(:PFNGLDELETESYNCPROC, [ :pointer ], :void)
  callback(:PFNGLCLIENTWAITSYNCPROC, [ :pointer, GLbitfield, :uint64_t ], GLenum)
  callback(:PFNGLWAITSYNCPROC, [ :pointer, GLbitfield, :uint64_t ], :void)
  callback(:PFNGLGETINTEGER64VPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLGETSYNCIVPROC, [ :pointer, GLenum, GLsizei, :pointer, :pointer ], :void)
  GL_ARB_texture_multisample = 1
  callback(:PFNGLTEXIMAGE2DMULTISAMPLEPROC, [ GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean ], :void)
  callback(:PFNGLTEXIMAGE3DMULTISAMPLEPROC, [ GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean ], :void)
  callback(:PFNGLGETMULTISAMPLEFVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLSAMPLEMASKIPROC, [ GLuint, GLbitfield ], :void)
  GL_ARB_vertex_array_bgra = 1
  GL_ARB_draw_buffers_blend = 1
  callback(:PFNGLBLENDEQUATIONIPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLBLENDEQUATIONSEPARATEIPROC, [ GLuint, GLenum, GLenum ], :void)
  callback(:PFNGLBLENDFUNCIPROC, [ GLuint, GLenum, GLenum ], :void)
  callback(:PFNGLBLENDFUNCSEPARATEIPROC, [ GLuint, GLenum, GLenum, GLenum, GLenum ], :void)
  GL_ARB_sample_shading = 1
  callback(:PFNGLMINSAMPLESHADINGPROC, [ GLclampf ], :void)
  GL_ARB_texture_cube_map_array = 1
  GL_ARB_texture_gather = 1
  GL_ARB_texture_query_lod = 1
  GL_EXT_abgr = 1
  GL_EXT_blend_color = 1
  callback(:PFNGLBLENDCOLOREXTPROC, [ GLclampf, GLclampf, GLclampf, GLclampf ], :void)
  GL_EXT_polygon_offset = 1
  callback(:PFNGLPOLYGONOFFSETEXTPROC, [ GLfloat, GLfloat ], :void)
  GL_EXT_texture = 1
  GL_EXT_texture3D = 1
  callback(:PFNGLTEXIMAGE3DEXTPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXSUBIMAGE3DEXTPROC, [ GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  GL_SGIS_texture_filter4 = 1
  callback(:PFNGLGETTEXFILTERFUNCSGISPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXFILTERFUNCSGISPROC, [ GLenum, GLenum, GLsizei, :pointer ], :void)
  GL_EXT_subtexture = 1
  callback(:PFNGLTEXSUBIMAGE1DEXTPROC, [ GLenum, GLint, GLint, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXSUBIMAGE2DEXTPROC, [ GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  GL_EXT_copy_texture = 1
  callback(:PFNGLCOPYTEXIMAGE1DEXTPROC, [ GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYTEXIMAGE2DEXTPROC, [ GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYTEXSUBIMAGE1DEXTPROC, [ GLenum, GLint, GLint, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCOPYTEXSUBIMAGE2DEXTPROC, [ GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLCOPYTEXSUBIMAGE3DEXTPROC, [ GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  GL_EXT_histogram = 1
  callback(:PFNGLGETHISTOGRAMEXTPROC, [ GLenum, GLboolean, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETHISTOGRAMPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETHISTOGRAMPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXEXTPROC, [ GLenum, GLboolean, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMINMAXPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLHISTOGRAMEXTPROC, [ GLenum, GLsizei, GLenum, GLboolean ], :void)
  callback(:PFNGLMINMAXEXTPROC, [ GLenum, GLenum, GLboolean ], :void)
  callback(:PFNGLRESETHISTOGRAMEXTPROC, [ GLenum ], :void)
  callback(:PFNGLRESETMINMAXEXTPROC, [ GLenum ], :void)
  GL_EXT_convolution = 1
  callback(:PFNGLCONVOLUTIONFILTER1DEXTPROC, [ GLenum, GLenum, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONFILTER2DEXTPROC, [ GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERFEXTPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERIEXTPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLCONVOLUTIONPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETCONVOLUTIONFILTEREXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETSEPARABLEFILTEREXTPROC, [ GLenum, GLenum, GLenum, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLSEPARABLEFILTER2DEXTPROC, [ GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer, :pointer ], :void)
  GL_SGI_color_matrix = 1
  GL_SGI_color_table = 1
  callback(:PFNGLCOLORTABLESGIPROC, [ GLenum, GLenum, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOLORTABLEPARAMETERFVSGIPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOLORTABLEPARAMETERIVSGIPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCOLORTABLESGIPROC, [ GLenum, GLenum, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLGETCOLORTABLESGIPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERFVSGIPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERIVSGIPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_SGIX_pixel_texture = 1
  callback(:PFNGLPIXELTEXGENSGIXPROC, [ GLenum ], :void)
  GL_SGIS_pixel_texture = 1
  callback(:PFNGLPIXELTEXGENPARAMETERISGISPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLPIXELTEXGENPARAMETERIVSGISPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLPIXELTEXGENPARAMETERFSGISPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLPIXELTEXGENPARAMETERFVSGISPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC, [ GLenum, :pointer ], :void)
  GL_SGIS_texture4D = 1
  callback(:PFNGLTEXIMAGE4DSGISPROC, [ GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXSUBIMAGE4DSGISPROC, [ GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  GL_SGI_texture_color_table = 1
  GL_EXT_cmyka = 1
  GL_EXT_texture_object = 1
  callback(:PFNGLARETEXTURESRESIDENTEXTPROC, [ GLsizei, :pointer, :pointer ], GLboolean)
  callback(:PFNGLBINDTEXTUREEXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETETEXTURESEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENTEXTURESEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISTEXTUREEXTPROC, [ GLuint ], GLboolean)
  callback(:PFNGLPRIORITIZETEXTURESEXTPROC, [ GLsizei, :pointer, :pointer ], :void)
  GL_SGIS_detail_texture = 1
  callback(:PFNGLDETAILTEXFUNCSGISPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETDETAILTEXFUNCSGISPROC, [ GLenum, :pointer ], :void)
  GL_SGIS_sharpen_texture = 1
  callback(:PFNGLSHARPENTEXFUNCSGISPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETSHARPENTEXFUNCSGISPROC, [ GLenum, :pointer ], :void)
  GL_EXT_packed_pixels = 1
  GL_SGIS_texture_lod = 1
  GL_SGIS_multisample = 1
  callback(:PFNGLSAMPLEMASKSGISPROC, [ GLclampf, GLboolean ], :void)
  callback(:PFNGLSAMPLEPATTERNSGISPROC, [ GLenum ], :void)
  GL_EXT_rescale_normal = 1
  GL_EXT_vertex_array = 1
  callback(:PFNGLARRAYELEMENTEXTPROC, [ GLint ], :void)
  callback(:PFNGLCOLORPOINTEREXTPROC, [ GLint, GLenum, GLsizei, GLsizei, :pointer ], :void)
  callback(:PFNGLDRAWARRAYSEXTPROC, [ GLenum, GLint, GLsizei ], :void)
  callback(:PFNGLEDGEFLAGPOINTEREXTPROC, [ GLsizei, GLsizei, :pointer ], :void)
  callback(:PFNGLGETPOINTERVEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLINDEXPOINTEREXTPROC, [ GLenum, GLsizei, GLsizei, :pointer ], :void)
  callback(:PFNGLNORMALPOINTEREXTPROC, [ GLenum, GLsizei, GLsizei, :pointer ], :void)
  callback(:PFNGLTEXCOORDPOINTEREXTPROC, [ GLint, GLenum, GLsizei, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXPOINTEREXTPROC, [ GLint, GLenum, GLsizei, GLsizei, :pointer ], :void)
  GL_EXT_misc_attribute = 1
  GL_SGIS_generate_mipmap = 1
  GL_SGIX_clipmap = 1
  GL_SGIX_shadow = 1
  GL_SGIS_texture_edge_clamp = 1
  GL_SGIS_texture_border_clamp = 1
  GL_EXT_blend_minmax = 1
  callback(:PFNGLBLENDEQUATIONEXTPROC, [ GLenum ], :void)
  GL_EXT_blend_subtract = 1
  GL_EXT_blend_logic_op = 1
  GL_SGIX_interlace = 1
  GL_SGIX_pixel_tiles = 1
  GL_SGIX_texture_select = 1
  GL_SGIX_sprite = 1
  callback(:PFNGLSPRITEPARAMETERFSGIXPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLSPRITEPARAMETERFVSGIXPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLSPRITEPARAMETERISGIXPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLSPRITEPARAMETERIVSGIXPROC, [ GLenum, :pointer ], :void)
  GL_SGIX_texture_multi_buffer = 1
  GL_EXT_point_parameters = 1
  callback(:PFNGLPOINTPARAMETERFEXTPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLPOINTPARAMETERFVEXTPROC, [ GLenum, :pointer ], :void)
  GL_SGIS_point_parameters = 1
  callback(:PFNGLPOINTPARAMETERFSGISPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLPOINTPARAMETERFVSGISPROC, [ GLenum, :pointer ], :void)
  GL_SGIX_instruments = 1
  callback(:PFNGLGETINSTRUMENTSSGIXPROC, [], GLint)
  callback(:PFNGLINSTRUMENTSBUFFERSGIXPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLPOLLINSTRUMENTSSGIXPROC, [ :pointer ], GLint)
  callback(:PFNGLREADINSTRUMENTSSGIXPROC, [ GLint ], :void)
  callback(:PFNGLSTARTINSTRUMENTSSGIXPROC, [], :void)
  callback(:PFNGLSTOPINSTRUMENTSSGIXPROC, [ GLint ], :void)
  GL_SGIX_texture_scale_bias = 1
  GL_SGIX_framezoom = 1
  callback(:PFNGLFRAMEZOOMSGIXPROC, [ GLint ], :void)
  GL_SGIX_tag_sample_buffer = 1
  callback(:PFNGLTAGSAMPLEBUFFERSGIXPROC, [], :void)
  GL_SGIX_polynomial_ffd = 1
  callback(:PFNGLDEFORMATIONMAP3DSGIXPROC, [ GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, :pointer ], :void)
  callback(:PFNGLDEFORMATIONMAP3FSGIXPROC, [ GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, :pointer ], :void)
  callback(:PFNGLDEFORMSGIXPROC, [ GLbitfield ], :void)
  callback(:PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC, [ GLbitfield ], :void)
  GL_SGIX_reference_plane = 1
  callback(:PFNGLREFERENCEPLANESGIXPROC, [ :pointer ], :void)
  GL_SGIX_flush_raster = 1
  callback(:PFNGLFLUSHRASTERSGIXPROC, [], :void)
  GL_SGIX_depth_texture = 1
  GL_SGIS_fog_function = 1
  callback(:PFNGLFOGFUNCSGISPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGETFOGFUNCSGISPROC, [ :pointer ], :void)
  GL_SGIX_fog_offset = 1
  GL_HP_image_transform = 1
  callback(:PFNGLIMAGETRANSFORMPARAMETERIHPPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLIMAGETRANSFORMPARAMETERFHPPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLIMAGETRANSFORMPARAMETERIVHPPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLIMAGETRANSFORMPARAMETERFVHPPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_HP_convolution_border_modes = 1
  GL_SGIX_texture_add_env = 1
  GL_EXT_color_subtable = 1
  callback(:PFNGLCOLORSUBTABLEEXTPROC, [ GLenum, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYCOLORSUBTABLEEXTPROC, [ GLenum, GLsizei, GLint, GLint, GLsizei ], :void)
  GL_PGI_vertex_hints = 1
  GL_PGI_misc_hints = 1
  callback(:PFNGLHINTPGIPROC, [ GLenum, GLint ], :void)
  GL_EXT_paletted_texture = 1
  callback(:PFNGLCOLORTABLEEXTPROC, [ GLenum, GLenum, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOLORTABLEPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_EXT_clip_volume_hint = 1
  GL_SGIX_list_priority = 1
  callback(:PFNGLGETLISTPARAMETERFVSGIXPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETLISTPARAMETERIVSGIXPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLLISTPARAMETERFSGIXPROC, [ GLuint, GLenum, GLfloat ], :void)
  callback(:PFNGLLISTPARAMETERFVSGIXPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLLISTPARAMETERISGIXPROC, [ GLuint, GLenum, GLint ], :void)
  callback(:PFNGLLISTPARAMETERIVSGIXPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_SGIX_ir_instrument1 = 1
  GL_SGIX_calligraphic_fragment = 1
  GL_SGIX_texture_lod_bias = 1
  GL_SGIX_shadow_ambient = 1
  GL_EXT_index_texture = 1
  GL_EXT_index_material = 1
  callback(:PFNGLINDEXMATERIALEXTPROC, [ GLenum, GLenum ], :void)
  GL_EXT_index_func = 1
  callback(:PFNGLINDEXFUNCEXTPROC, [ GLenum, GLclampf ], :void)
  GL_EXT_index_array_formats = 1
  GL_EXT_compiled_vertex_array = 1
  callback(:PFNGLLOCKARRAYSEXTPROC, [ GLint, GLsizei ], :void)
  callback(:PFNGLUNLOCKARRAYSEXTPROC, [], :void)
  GL_EXT_cull_vertex = 1
  callback(:PFNGLCULLPARAMETERDVEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLCULLPARAMETERFVEXTPROC, [ GLenum, :pointer ], :void)
  GL_SGIX_ycrcb = 1
  GL_SGIX_fragment_lighting = 1
  callback(:PFNGLFRAGMENTCOLORMATERIALSGIXPROC, [ GLenum, GLenum ], :void)
  callback(:PFNGLFRAGMENTLIGHTFSGIXPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLFRAGMENTLIGHTFVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLFRAGMENTLIGHTISGIXPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLFRAGMENTLIGHTIVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLFRAGMENTLIGHTMODELFSGIXPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLFRAGMENTLIGHTMODELFVSGIXPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLFRAGMENTLIGHTMODELISGIXPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLFRAGMENTLIGHTMODELIVSGIXPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLFRAGMENTMATERIALFSGIXPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLFRAGMENTMATERIALFVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLFRAGMENTMATERIALISGIXPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLFRAGMENTMATERIALIVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFRAGMENTLIGHTFVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFRAGMENTLIGHTIVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFRAGMENTMATERIALFVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFRAGMENTMATERIALIVSGIXPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLLIGHTENVISGIXPROC, [ GLenum, GLint ], :void)
  GL_IBM_rasterpos_clip = 1
  GL_HP_texture_lighting = 1
  GL_EXT_draw_range_elements = 1
  callback(:PFNGLDRAWRANGEELEMENTSEXTPROC, [ GLenum, GLuint, GLuint, GLsizei, GLenum, :pointer ], :void)
  GL_WIN_phong_shading = 1
  GL_WIN_specular_fog = 1
  GL_EXT_light_texture = 1
  callback(:PFNGLAPPLYTEXTUREEXTPROC, [ GLenum ], :void)
  callback(:PFNGLTEXTURELIGHTEXTPROC, [ GLenum ], :void)
  callback(:PFNGLTEXTUREMATERIALEXTPROC, [ GLenum, GLenum ], :void)
  GL_SGIX_blend_alpha_minmax = 1
  GL_EXT_bgra = 1
  GL_SGIX_async = 1
  callback(:PFNGLASYNCMARKERSGIXPROC, [ GLuint ], :void)
  callback(:PFNGLFINISHASYNCSGIXPROC, [ :pointer ], GLint)
  callback(:PFNGLPOLLASYNCSGIXPROC, [ :pointer ], GLint)
  callback(:PFNGLGENASYNCMARKERSSGIXPROC, [ GLsizei ], GLuint)
  callback(:PFNGLDELETEASYNCMARKERSSGIXPROC, [ GLuint, GLsizei ], :void)
  callback(:PFNGLISASYNCMARKERSGIXPROC, [ GLuint ], GLboolean)
  GL_SGIX_async_pixel = 1
  GL_SGIX_async_histogram = 1
  GL_INTEL_parallel_arrays = 1
  callback(:PFNGLVERTEXPOINTERVINTELPROC, [ GLint, GLenum, :pointer ], :void)
  callback(:PFNGLNORMALPOINTERVINTELPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLCOLORPOINTERVINTELPROC, [ GLint, GLenum, :pointer ], :void)
  callback(:PFNGLTEXCOORDPOINTERVINTELPROC, [ GLint, GLenum, :pointer ], :void)
  GL_HP_occlusion_test = 1
  GL_EXT_pixel_transform = 1
  callback(:PFNGLPIXELTRANSFORMPARAMETERIEXTPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLPIXELTRANSFORMPARAMETERFEXTPROC, [ GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_EXT_pixel_transform_color_table = 1
  GL_EXT_shared_texture_palette = 1
  GL_EXT_separate_specular_color = 1
  GL_EXT_secondary_color = 1
  callback(:PFNGLSECONDARYCOLOR3BEXTPROC, [ GLbyte, GLbyte, GLbyte ], :void)
  callback(:PFNGLSECONDARYCOLOR3BVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3DEXTPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLSECONDARYCOLOR3DVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3FEXTPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLSECONDARYCOLOR3FVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3IEXTPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLSECONDARYCOLOR3IVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3SEXTPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLSECONDARYCOLOR3SVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3UBEXTPROC, [ GLubyte, GLubyte, GLubyte ], :void)
  callback(:PFNGLSECONDARYCOLOR3UBVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3UIEXTPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLSECONDARYCOLOR3UIVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3USEXTPROC, [ GLushort, GLushort, GLushort ], :void)
  callback(:PFNGLSECONDARYCOLOR3USVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLORPOINTEREXTPROC, [ GLint, GLenum, GLsizei, :pointer ], :void)
  GL_EXT_texture_perturb_normal = 1
  callback(:PFNGLTEXTURENORMALEXTPROC, [ GLenum ], :void)
  GL_EXT_multi_draw_arrays = 1
  callback(:PFNGLMULTIDRAWARRAYSEXTPROC, [ GLenum, :pointer, :pointer, GLsizei ], :void)
  callback(:PFNGLMULTIDRAWELEMENTSEXTPROC, [ GLenum, :pointer, GLenum, :pointer, GLsizei ], :void)
  GL_EXT_fog_coord = 1
  callback(:PFNGLFOGCOORDFEXTPROC, [ GLfloat ], :void)
  callback(:PFNGLFOGCOORDFVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLFOGCOORDDEXTPROC, [ GLdouble ], :void)
  callback(:PFNGLFOGCOORDDVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLFOGCOORDPOINTEREXTPROC, [ GLenum, GLsizei, :pointer ], :void)
  GL_REND_screen_coordinates = 1
  GL_EXT_coordinate_frame = 1
  callback(:PFNGLTANGENT3BEXTPROC, [ GLbyte, GLbyte, GLbyte ], :void)
  callback(:PFNGLTANGENT3BVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLTANGENT3DEXTPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLTANGENT3DVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLTANGENT3FEXTPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTANGENT3FVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLTANGENT3IEXTPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLTANGENT3IVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLTANGENT3SEXTPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLTANGENT3SVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLBINORMAL3BEXTPROC, [ GLbyte, GLbyte, GLbyte ], :void)
  callback(:PFNGLBINORMAL3BVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLBINORMAL3DEXTPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLBINORMAL3DVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLBINORMAL3FEXTPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLBINORMAL3FVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLBINORMAL3IEXTPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLBINORMAL3IVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLBINORMAL3SEXTPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLBINORMAL3SVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLTANGENTPOINTEREXTPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLBINORMALPOINTEREXTPROC, [ GLenum, GLsizei, :pointer ], :void)
  GL_EXT_texture_env_combine = 1
  GL_APPLE_specular_vector = 1
  GL_APPLE_transform_hint = 1
  GL_SGIX_fog_scale = 1
  GL_SUNX_constant_data = 1
  callback(:PFNGLFINISHTEXTURESUNXPROC, [], :void)
  GL_SUN_global_alpha = 1
  callback(:PFNGLGLOBALALPHAFACTORBSUNPROC, [ GLbyte ], :void)
  callback(:PFNGLGLOBALALPHAFACTORSSUNPROC, [ GLshort ], :void)
  callback(:PFNGLGLOBALALPHAFACTORISUNPROC, [ GLint ], :void)
  callback(:PFNGLGLOBALALPHAFACTORFSUNPROC, [ GLfloat ], :void)
  callback(:PFNGLGLOBALALPHAFACTORDSUNPROC, [ GLdouble ], :void)
  callback(:PFNGLGLOBALALPHAFACTORUBSUNPROC, [ GLubyte ], :void)
  callback(:PFNGLGLOBALALPHAFACTORUSSUNPROC, [ GLushort ], :void)
  callback(:PFNGLGLOBALALPHAFACTORUISUNPROC, [ GLuint ], :void)
  GL_SUN_triangle_list = 1
  callback(:PFNGLREPLACEMENTCODEUISUNPROC, [ GLuint ], :void)
  callback(:PFNGLREPLACEMENTCODEUSSUNPROC, [ GLushort ], :void)
  callback(:PFNGLREPLACEMENTCODEUBSUNPROC, [ GLubyte ], :void)
  callback(:PFNGLREPLACEMENTCODEUIVSUNPROC, [ :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUSVSUNPROC, [ :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUBVSUNPROC, [ :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEPOINTERSUNPROC, [ GLenum, GLsizei, :pointer ], :void)
  GL_SUN_vertex = 1
  callback(:PFNGLCOLOR4UBVERTEX2FSUNPROC, [ GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat ], :void)
  callback(:PFNGLCOLOR4UBVERTEX2FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLCOLOR4UBVERTEX3FSUNPROC, [ GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLCOLOR4UBVERTEX3FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLCOLOR3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLCOLOR3FVERTEX3FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLNORMAL3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD2FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD2FVERTEX3FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD4FVERTEX4FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD4FVERTEX4FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC, [ GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC, [ :pointer, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC, [ :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC, [ GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer, :pointer ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC, [ :pointer, :pointer, :pointer, :pointer, :pointer ], :void)
  GL_EXT_blend_func_separate = 1
  callback(:PFNGLBLENDFUNCSEPARATEEXTPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  GL_INGR_blend_func_separate = 1
  callback(:PFNGLBLENDFUNCSEPARATEINGRPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  GL_INGR_color_clamp = 1
  GL_INGR_interlace_read = 1
  GL_EXT_stencil_wrap = 1
  GL_EXT_422_pixels = 1
  GL_NV_texgen_reflection = 1
  GL_SUN_convolution_border_modes = 1
  GL_EXT_texture_env_add = 1
  GL_EXT_texture_lod_bias = 1
  GL_EXT_texture_filter_anisotropic = 1
  GL_EXT_vertex_weighting = 1
  callback(:PFNGLVERTEXWEIGHTFEXTPROC, [ GLfloat ], :void)
  callback(:PFNGLVERTEXWEIGHTFVEXTPROC, [ :pointer ], :void)
  callback(:PFNGLVERTEXWEIGHTPOINTEREXTPROC, [ GLsizei, GLenum, GLsizei, :pointer ], :void)
  GL_NV_light_max_exponent = 1
  GL_NV_vertex_array_range = 1
  callback(:PFNGLFLUSHVERTEXARRAYRANGENVPROC, [], :void)
  callback(:PFNGLVERTEXARRAYRANGENVPROC, [ GLsizei, :pointer ], :void)
  GL_NV_register_combiners = 1
  callback(:PFNGLCOMBINERPARAMETERFVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLCOMBINERPARAMETERFNVPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLCOMBINERPARAMETERIVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLCOMBINERPARAMETERINVPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLCOMBINERINPUTNVPROC, [ GLenum, GLenum, GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLCOMBINEROUTPUTNVPROC, [ GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean ], :void)
  callback(:PFNGLFINALCOMBINERINPUTNVPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC, [ GLenum, GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC, [ GLenum, GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_NV_fog_distance = 1
  GL_NV_texgen_emboss = 1
  GL_NV_blend_square = 1
  GL_NV_texture_env_combine4 = 1
  GL_MESA_resize_buffers = 1
  callback(:PFNGLRESIZEBUFFERSMESAPROC, [], :void)
  GL_MESA_window_pos = 1
  callback(:PFNGLWINDOWPOS2DMESAPROC, [ GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS2DVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2FMESAPROC, [ GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS2FVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2IMESAPROC, [ GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS2IVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS2SMESAPROC, [ GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS2SVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3DMESAPROC, [ GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS3DVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3FMESAPROC, [ GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS3FVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3IMESAPROC, [ GLint, GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS3IVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS3SMESAPROC, [ GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS3SVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS4DMESAPROC, [ GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLWINDOWPOS4DVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS4FMESAPROC, [ GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLWINDOWPOS4FVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS4IMESAPROC, [ GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLWINDOWPOS4IVMESAPROC, [ :pointer ], :void)
  callback(:PFNGLWINDOWPOS4SMESAPROC, [ GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLWINDOWPOS4SVMESAPROC, [ :pointer ], :void)
  GL_IBM_cull_vertex = 1
  GL_IBM_multimode_draw_arrays = 1
  callback(:PFNGLMULTIMODEDRAWARRAYSIBMPROC, [ :pointer, :pointer, :pointer, GLsizei, GLint ], :void)
  callback(:PFNGLMULTIMODEDRAWELEMENTSIBMPROC, [ :pointer, :pointer, GLenum, :pointer, GLsizei, GLint ], :void)
  GL_IBM_vertex_array_lists = 1
  callback(:PFNGLCOLORPOINTERLISTIBMPROC, [ GLint, GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLSECONDARYCOLORPOINTERLISTIBMPROC, [ GLint, GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLEDGEFLAGPOINTERLISTIBMPROC, [ GLint, :pointer, GLint ], :void)
  callback(:PFNGLFOGCOORDPOINTERLISTIBMPROC, [ GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLINDEXPOINTERLISTIBMPROC, [ GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLNORMALPOINTERLISTIBMPROC, [ GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLTEXCOORDPOINTERLISTIBMPROC, [ GLint, GLenum, GLint, :pointer, GLint ], :void)
  callback(:PFNGLVERTEXPOINTERLISTIBMPROC, [ GLint, GLenum, GLint, :pointer, GLint ], :void)
  GL_SGIX_subsample = 1
  GL_SGIX_ycrcba = 1
  GL_SGIX_ycrcb_subsample = 1
  GL_SGIX_depth_pass_instrument = 1
  GL_3DFX_texture_compression_FXT1 = 1
  GL_3DFX_multisample = 1
  GL_3DFX_tbuffer = 1
  callback(:PFNGLTBUFFERMASK3DFXPROC, [ GLuint ], :void)
  GL_EXT_multisample = 1
  callback(:PFNGLSAMPLEMASKEXTPROC, [ GLclampf, GLboolean ], :void)
  callback(:PFNGLSAMPLEPATTERNEXTPROC, [ GLenum ], :void)
  GL_SGIX_vertex_preclip = 1
  GL_SGIX_convolution_accuracy = 1
  GL_SGIX_resample = 1
  GL_SGIS_point_line_texgen = 1
  GL_SGIS_texture_color_mask = 1
  callback(:PFNGLTEXTURECOLORMASKSGISPROC, [ GLboolean, GLboolean, GLboolean, GLboolean ], :void)
  GL_SGIX_igloo_interface = 1
  callback(:PFNGLIGLOOINTERFACESGIXPROC, [ GLenum, :pointer ], :void)
  GL_EXT_texture_env_dot3 = 1
  GL_ATI_texture_mirror_once = 1
  GL_NV_fence = 1
  callback(:PFNGLDELETEFENCESNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENFENCESNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISFENCENVPROC, [ GLuint ], GLboolean)
  callback(:PFNGLTESTFENCENVPROC, [ GLuint ], GLboolean)
  callback(:PFNGLGETFENCEIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLFINISHFENCENVPROC, [ GLuint ], :void)
  callback(:PFNGLSETFENCENVPROC, [ GLuint, GLenum ], :void)
  GL_NV_evaluators = 1
  callback(:PFNGLMAPCONTROLPOINTSNVPROC, [ GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, :pointer ], :void)
  callback(:PFNGLMAPPARAMETERIVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMAPPARAMETERFVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMAPCONTROLPOINTSNVPROC, [ GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLGETMAPPARAMETERIVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMAPPARAMETERFVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMAPATTRIBPARAMETERIVNVPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETMAPATTRIBPARAMETERFVNVPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLEVALMAPSNVPROC, [ GLenum, GLenum ], :void)
  GL_NV_packed_depth_stencil = 1
  GL_NV_register_combiners2 = 1
  callback(:PFNGLCOMBINERSTAGEPARAMETERFVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_NV_texture_compression_vtc = 1
  GL_NV_texture_rectangle = 1
  GL_NV_texture_shader = 1
  GL_NV_texture_shader2 = 1
  GL_NV_vertex_array_range2 = 1
  GL_NV_vertex_program = 1
  callback(:PFNGLAREPROGRAMSRESIDENTNVPROC, [ GLsizei, :pointer, :pointer ], GLboolean)
  callback(:PFNGLBINDPROGRAMNVPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEPROGRAMSNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLEXECUTEPROGRAMNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGENPROGRAMSNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGETPROGRAMPARAMETERDVNVPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETPROGRAMPARAMETERFVNVPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETPROGRAMIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETPROGRAMSTRINGNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETTRACKMATRIXIVNVPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBDVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBFVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBPOINTERVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLISPROGRAMNVPROC, [ GLuint ], GLboolean)
  callback(:PFNGLLOADPROGRAMNVPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMPARAMETER4DNVPROC, [ GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLPROGRAMPARAMETER4DVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMPARAMETER4FNVPROC, [ GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMPARAMETER4FVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMPARAMETERS4DVNVPROC, [ GLenum, GLuint, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMPARAMETERS4FVNVPROC, [ GLenum, GLuint, GLuint, :pointer ], :void)
  callback(:PFNGLREQUESTRESIDENTPROGRAMSNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLTRACKMATRIXNVPROC, [ GLenum, GLuint, GLenum, GLenum ], :void)
  callback(:PFNGLVERTEXATTRIBPOINTERNVPROC, [ GLuint, GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1DNVPROC, [ GLuint, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB1DVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1FNVPROC, [ GLuint, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB1FVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1SNVPROC, [ GLuint, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB1SVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2DNVPROC, [ GLuint, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB2DVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2FNVPROC, [ GLuint, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB2FVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2SNVPROC, [ GLuint, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB2SVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3DNVPROC, [ GLuint, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB3DVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3FNVPROC, [ GLuint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB3FVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3SNVPROC, [ GLuint, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB3SVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4DNVPROC, [ GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXATTRIB4DVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4FNVPROC, [ GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXATTRIB4FVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4SNVPROC, [ GLuint, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXATTRIB4SVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4UBNVPROC, [ GLuint, GLubyte, GLubyte, GLubyte, GLubyte ], :void)
  callback(:PFNGLVERTEXATTRIB4UBVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS1DVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS1FVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS1SVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS2DVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS2FVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS2SVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS3DVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS3FVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS3SVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS4DVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS4FVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS4SVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS4UBVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  GL_SGIX_texture_coordinate_clamp = 1
  GL_SGIX_scalebias_hint = 1
  GL_OML_interlace = 1
  GL_OML_subsample = 1
  GL_OML_resample = 1
  GL_NV_copy_depth_to_color = 1
  GL_ATI_envmap_bumpmap = 1
  callback(:PFNGLTEXBUMPPARAMETERIVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLTEXBUMPPARAMETERFVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXBUMPPARAMETERIVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXBUMPPARAMETERFVATIPROC, [ GLenum, :pointer ], :void)
  GL_ATI_fragment_shader = 1
  callback(:PFNGLGENFRAGMENTSHADERSATIPROC, [ GLuint ], GLuint)
  callback(:PFNGLBINDFRAGMENTSHADERATIPROC, [ GLuint ], :void)
  callback(:PFNGLDELETEFRAGMENTSHADERATIPROC, [ GLuint ], :void)
  callback(:PFNGLBEGINFRAGMENTSHADERATIPROC, [], :void)
  callback(:PFNGLENDFRAGMENTSHADERATIPROC, [], :void)
  callback(:PFNGLPASSTEXCOORDATIPROC, [ GLuint, GLuint, GLenum ], :void)
  callback(:PFNGLSAMPLEMAPATIPROC, [ GLuint, GLuint, GLenum ], :void)
  callback(:PFNGLCOLORFRAGMENTOP1ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLCOLORFRAGMENTOP2ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLCOLORFRAGMENTOP3ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLALPHAFRAGMENTOP1ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLALPHAFRAGMENTOP2ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLALPHAFRAGMENTOP3ATIPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLSETFRAGMENTSHADERCONSTANTATIPROC, [ GLuint, :pointer ], :void)
  GL_ATI_pn_triangles = 1
  callback(:PFNGLPNTRIANGLESIATIPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLPNTRIANGLESFATIPROC, [ GLenum, GLfloat ], :void)
  GL_ATI_vertex_array_object = 1
  callback(:PFNGLNEWOBJECTBUFFERATIPROC, [ GLsizei, :pointer, GLenum ], GLuint)
  callback(:PFNGLISOBJECTBUFFERATIPROC, [ GLuint ], GLboolean)
  callback(:PFNGLUPDATEOBJECTBUFFERATIPROC, [ GLuint, GLuint, GLsizei, :pointer, GLenum ], :void)
  callback(:PFNGLGETOBJECTBUFFERFVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETOBJECTBUFFERIVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLFREEOBJECTBUFFERATIPROC, [ GLuint ], :void)
  callback(:PFNGLARRAYOBJECTATIPROC, [ GLenum, GLint, GLenum, GLsizei, GLuint, GLuint ], :void)
  callback(:PFNGLGETARRAYOBJECTFVATIPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETARRAYOBJECTIVATIPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLVARIANTARRAYOBJECTATIPROC, [ GLuint, GLenum, GLsizei, GLuint, GLuint ], :void)
  callback(:PFNGLGETVARIANTARRAYOBJECTFVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVARIANTARRAYOBJECTIVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_EXT_vertex_shader = 1
  callback(:PFNGLBEGINVERTEXSHADEREXTPROC, [], :void)
  callback(:PFNGLENDVERTEXSHADEREXTPROC, [], :void)
  callback(:PFNGLBINDVERTEXSHADEREXTPROC, [ GLuint ], :void)
  callback(:PFNGLGENVERTEXSHADERSEXTPROC, [ GLuint ], GLuint)
  callback(:PFNGLDELETEVERTEXSHADEREXTPROC, [ GLuint ], :void)
  callback(:PFNGLSHADEROP1EXTPROC, [ GLenum, GLuint, GLuint ], :void)
  callback(:PFNGLSHADEROP2EXTPROC, [ GLenum, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLSHADEROP3EXTPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLSWIZZLEEXTPROC, [ GLuint, GLuint, GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLWRITEMASKEXTPROC, [ GLuint, GLuint, GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLINSERTCOMPONENTEXTPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLEXTRACTCOMPONENTEXTPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLGENSYMBOLSEXTPROC, [ GLenum, GLenum, GLenum, GLuint ], GLuint)
  callback(:PFNGLSETINVARIANTEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLSETLOCALCONSTANTEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLVARIANTBVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTSVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTFVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTDVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTUBVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTUSVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTUIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVARIANTPOINTEREXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLENABLEVARIANTCLIENTSTATEEXTPROC, [ GLuint ], :void)
  callback(:PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC, [ GLuint ], :void)
  callback(:PFNGLBINDLIGHTPARAMETEREXTPROC, [ GLenum, GLenum ], GLuint)
  callback(:PFNGLBINDMATERIALPARAMETEREXTPROC, [ GLenum, GLenum ], GLuint)
  callback(:PFNGLBINDTEXGENPARAMETEREXTPROC, [ GLenum, GLenum, GLenum ], GLuint)
  callback(:PFNGLBINDTEXTUREUNITPARAMETEREXTPROC, [ GLenum, GLenum ], GLuint)
  callback(:PFNGLBINDPARAMETEREXTPROC, [ GLenum ], GLuint)
  callback(:PFNGLISVARIANTENABLEDEXTPROC, [ GLuint, GLenum ], GLboolean)
  callback(:PFNGLGETVARIANTBOOLEANVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVARIANTINTEGERVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVARIANTFLOATVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVARIANTPOINTERVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETINVARIANTBOOLEANVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETINVARIANTINTEGERVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETINVARIANTFLOATVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETLOCALCONSTANTINTEGERVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETLOCALCONSTANTFLOATVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_ATI_vertex_streams = 1
  callback(:PFNGLVERTEXSTREAM1SATIPROC, [ GLenum, GLshort ], :void)
  callback(:PFNGLVERTEXSTREAM1SVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM1IATIPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLVERTEXSTREAM1IVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM1FATIPROC, [ GLenum, GLfloat ], :void)
  callback(:PFNGLVERTEXSTREAM1FVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM1DATIPROC, [ GLenum, GLdouble ], :void)
  callback(:PFNGLVERTEXSTREAM1DVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM2SATIPROC, [ GLenum, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXSTREAM2SVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM2IATIPROC, [ GLenum, GLint, GLint ], :void)
  callback(:PFNGLVERTEXSTREAM2IVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM2FATIPROC, [ GLenum, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXSTREAM2FVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM2DATIPROC, [ GLenum, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXSTREAM2DVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM3SATIPROC, [ GLenum, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXSTREAM3SVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM3IATIPROC, [ GLenum, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXSTREAM3IVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM3FATIPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXSTREAM3FVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM3DATIPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXSTREAM3DVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM4SATIPROC, [ GLenum, GLshort, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLVERTEXSTREAM4SVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM4IATIPROC, [ GLenum, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXSTREAM4IVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM4FATIPROC, [ GLenum, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLVERTEXSTREAM4FVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLVERTEXSTREAM4DATIPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLVERTEXSTREAM4DVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLNORMALSTREAM3BATIPROC, [ GLenum, GLbyte, GLbyte, GLbyte ], :void)
  callback(:PFNGLNORMALSTREAM3BVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLNORMALSTREAM3SATIPROC, [ GLenum, GLshort, GLshort, GLshort ], :void)
  callback(:PFNGLNORMALSTREAM3SVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLNORMALSTREAM3IATIPROC, [ GLenum, GLint, GLint, GLint ], :void)
  callback(:PFNGLNORMALSTREAM3IVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLNORMALSTREAM3FATIPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLNORMALSTREAM3FVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLNORMALSTREAM3DATIPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLNORMALSTREAM3DVATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC, [ GLenum ], :void)
  callback(:PFNGLVERTEXBLENDENVIATIPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLVERTEXBLENDENVFATIPROC, [ GLenum, GLfloat ], :void)
  GL_ATI_element_array = 1
  callback(:PFNGLELEMENTPOINTERATIPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLDRAWELEMENTARRAYATIPROC, [ GLenum, GLsizei ], :void)
  callback(:PFNGLDRAWRANGEELEMENTARRAYATIPROC, [ GLenum, GLuint, GLuint, GLsizei ], :void)
  GL_SUN_mesh_array = 1
  callback(:PFNGLDRAWMESHARRAYSSUNPROC, [ GLenum, GLint, GLsizei, GLsizei ], :void)
  GL_SUN_slice_accum = 1
  GL_NV_multisample_filter_hint = 1
  GL_NV_depth_clamp = 1
  GL_NV_occlusion_query = 1
  callback(:PFNGLGENOCCLUSIONQUERIESNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLDELETEOCCLUSIONQUERIESNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISOCCLUSIONQUERYNVPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBEGINOCCLUSIONQUERYNVPROC, [ GLuint ], :void)
  callback(:PFNGLENDOCCLUSIONQUERYNVPROC, [], :void)
  callback(:PFNGLGETOCCLUSIONQUERYIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETOCCLUSIONQUERYUIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_NV_point_sprite = 1
  callback(:PFNGLPOINTPARAMETERINVPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLPOINTPARAMETERIVNVPROC, [ GLenum, :pointer ], :void)
  GL_NV_texture_shader3 = 1
  GL_NV_vertex_program1_1 = 1
  GL_EXT_shadow_funcs = 1
  GL_EXT_stencil_two_side = 1
  callback(:PFNGLACTIVESTENCILFACEEXTPROC, [ GLenum ], :void)
  GL_ATI_text_fragment_shader = 1
  GL_APPLE_client_storage = 1
  GL_APPLE_element_array = 1
  callback(:PFNGLELEMENTPOINTERAPPLEPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLDRAWELEMENTARRAYAPPLEPROC, [ GLenum, GLint, GLsizei ], :void)
  callback(:PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC, [ GLenum, GLuint, GLuint, GLint, GLsizei ], :void)
  callback(:PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC, [ GLenum, :pointer, :pointer, GLsizei ], :void)
  callback(:PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC, [ GLenum, GLuint, GLuint, :pointer, :pointer, GLsizei ], :void)
  GL_APPLE_fence = 1
  callback(:PFNGLGENFENCESAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLDELETEFENCESAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLSETFENCEAPPLEPROC, [ GLuint ], :void)
  callback(:PFNGLISFENCEAPPLEPROC, [ GLuint ], GLboolean)
  callback(:PFNGLTESTFENCEAPPLEPROC, [ GLuint ], GLboolean)
  callback(:PFNGLFINISHFENCEAPPLEPROC, [ GLuint ], :void)
  callback(:PFNGLTESTOBJECTAPPLEPROC, [ GLenum, GLuint ], GLboolean)
  callback(:PFNGLFINISHOBJECTAPPLEPROC, [ GLenum, GLint ], :void)
  GL_APPLE_vertex_array_object = 1
  callback(:PFNGLBINDVERTEXARRAYAPPLEPROC, [ GLuint ], :void)
  callback(:PFNGLDELETEVERTEXARRAYSAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENVERTEXARRAYSAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISVERTEXARRAYAPPLEPROC, [ GLuint ], GLboolean)
  GL_APPLE_vertex_array_range = 1
  callback(:PFNGLVERTEXARRAYRANGEAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXARRAYPARAMETERIAPPLEPROC, [ GLenum, GLint ], :void)
  GL_APPLE_ycbcr_422 = 1
  GL_S3_s3tc = 1
  GL_ATI_draw_buffers = 1
  callback(:PFNGLDRAWBUFFERSATIPROC, [ GLsizei, :pointer ], :void)
  GL_ATI_pixel_format_float = 1
  GL_ATI_texture_env_combine3 = 1
  GL_ATI_texture_float = 1
  GL_NV_float_buffer = 1
  GL_NV_fragment_program = 1
  callback(:PFNGLPROGRAMNAMEDPARAMETER4FNVPROC, [ GLuint, GLsizei, :pointer, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMNAMEDPARAMETER4DNVPROC, [ GLuint, GLsizei, :pointer, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  callback(:PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC, [ GLuint, GLsizei, :pointer, :pointer ], :void)
  GL_NV_half_float = 1
  callback(:PFNGLVERTEX2HNVPROC, [ :ushort, :ushort ], :void)
  callback(:PFNGLVERTEX2HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLVERTEX3HNVPROC, [ :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLVERTEX3HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLVERTEX4HNVPROC, [ :ushort, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLVERTEX4HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLNORMAL3HNVPROC, [ :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLNORMAL3HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLCOLOR3HNVPROC, [ :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLCOLOR3HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLCOLOR4HNVPROC, [ :ushort, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLCOLOR4HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLTEXCOORD1HNVPROC, [ :ushort ], :void)
  callback(:PFNGLTEXCOORD1HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLTEXCOORD2HNVPROC, [ :ushort, :ushort ], :void)
  callback(:PFNGLTEXCOORD2HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLTEXCOORD3HNVPROC, [ :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLTEXCOORD3HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLTEXCOORD4HNVPROC, [ :ushort, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLTEXCOORD4HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD1HNVPROC, [ GLenum, :ushort ], :void)
  callback(:PFNGLMULTITEXCOORD1HVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD2HNVPROC, [ GLenum, :ushort, :ushort ], :void)
  callback(:PFNGLMULTITEXCOORD2HVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD3HNVPROC, [ GLenum, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLMULTITEXCOORD3HVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXCOORD4HNVPROC, [ GLenum, :ushort, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLMULTITEXCOORD4HVNVPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLFOGCOORDHNVPROC, [ :ushort ], :void)
  callback(:PFNGLFOGCOORDHVNVPROC, [ :pointer ], :void)
  callback(:PFNGLSECONDARYCOLOR3HNVPROC, [ :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLSECONDARYCOLOR3HVNVPROC, [ :pointer ], :void)
  callback(:PFNGLVERTEXWEIGHTHNVPROC, [ :ushort ], :void)
  callback(:PFNGLVERTEXWEIGHTHVNVPROC, [ :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB1HNVPROC, [ GLuint, :ushort ], :void)
  callback(:PFNGLVERTEXATTRIB1HVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB2HNVPROC, [ GLuint, :ushort, :ushort ], :void)
  callback(:PFNGLVERTEXATTRIB2HVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB3HNVPROC, [ GLuint, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLVERTEXATTRIB3HVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIB4HNVPROC, [ GLuint, :ushort, :ushort, :ushort, :ushort ], :void)
  callback(:PFNGLVERTEXATTRIB4HVNVPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS1HVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS2HVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS3HVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBS4HVNVPROC, [ GLuint, GLsizei, :pointer ], :void)
  GL_NV_pixel_data_range = 1
  callback(:PFNGLPIXELDATARANGENVPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLFLUSHPIXELDATARANGENVPROC, [ GLenum ], :void)
  GL_NV_primitive_restart = 1
  callback(:PFNGLPRIMITIVERESTARTNVPROC, [], :void)
  callback(:PFNGLPRIMITIVERESTARTINDEXNVPROC, [ GLuint ], :void)
  GL_NV_texture_expand_normal = 1
  GL_NV_vertex_program2 = 1
  GL_ATI_map_object_buffer = 1
  callback(:PFNGLMAPOBJECTBUFFERATIPROC, [ GLuint ], :pointer)
  callback(:PFNGLUNMAPOBJECTBUFFERATIPROC, [ GLuint ], :void)
  GL_ATI_separate_stencil = 1
  callback(:PFNGLSTENCILOPSEPARATEATIPROC, [ GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLSTENCILFUNCSEPARATEATIPROC, [ GLenum, GLenum, GLint, GLuint ], :void)
  GL_ATI_vertex_attrib_array_object = 1
  callback(:PFNGLVERTEXATTRIBARRAYOBJECTATIPROC, [ GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint ], :void)
  callback(:PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_OES_read_format = 1
  GL_EXT_depth_bounds_test = 1
  callback(:PFNGLDEPTHBOUNDSEXTPROC, [ GLclampd, GLclampd ], :void)
  GL_EXT_texture_mirror_clamp = 1
  GL_EXT_blend_equation_separate = 1
  callback(:PFNGLBLENDEQUATIONSEPARATEEXTPROC, [ GLenum, GLenum ], :void)
  GL_MESA_pack_invert = 1
  GL_MESA_ycbcr_texture = 1
  GL_EXT_pixel_buffer_object = 1
  GL_NV_fragment_program_option = 1
  GL_NV_fragment_program2 = 1
  GL_NV_vertex_program2_option = 1
  GL_NV_vertex_program3 = 1
  GL_EXT_framebuffer_object = 1
  callback(:PFNGLISRENDERBUFFEREXTPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBINDRENDERBUFFEREXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETERENDERBUFFERSEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENRENDERBUFFERSEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLRENDERBUFFERSTORAGEEXTPROC, [ GLenum, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLISFRAMEBUFFEREXTPROC, [ GLuint ], GLboolean)
  callback(:PFNGLBINDFRAMEBUFFEREXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETEFRAMEBUFFERSEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENFRAMEBUFFERSEXTPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC, [ GLenum ], GLenum)
  callback(:PFNGLFRAMEBUFFERTEXTURE1DEXTPROC, [ GLenum, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURE2DEXTPROC, [ GLenum, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURE3DEXTPROC, [ GLenum, GLenum, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC, [ GLenum, GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGENERATEMIPMAPEXTPROC, [ GLenum ], :void)
  GL_GREMEDY_string_marker = 1
  callback(:PFNGLSTRINGMARKERGREMEDYPROC, [ GLsizei, :pointer ], :void)
  GL_EXT_packed_depth_stencil = 1
  GL_EXT_stencil_clear_tag = 1
  callback(:PFNGLSTENCILCLEARTAGEXTPROC, [ GLsizei, GLuint ], :void)
  GL_EXT_texture_sRGB = 1
  GL_EXT_framebuffer_blit = 1
  callback(:PFNGLBLITFRAMEBUFFEREXTPROC, [ GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum ], :void)
  GL_EXT_framebuffer_multisample = 1
  callback(:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC, [ GLenum, GLsizei, GLenum, GLsizei, GLsizei ], :void)
  GL_MESAX_texture_stack = 1
  GL_EXT_timer_query = 1
  callback(:PFNGLGETQUERYOBJECTI64VEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETQUERYOBJECTUI64VEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_EXT_gpu_program_parameters = 1
  callback(:PFNGLPROGRAMENVPARAMETERS4FVEXTPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  GL_APPLE_flush_buffer_range = 1
  callback(:PFNGLBUFFERPARAMETERIAPPLEPROC, [ GLenum, GLenum, GLint ], :void)
  callback(:PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC, [ GLenum, ptrdiff_t, ptrdiff_t ], :void)
  GL_NV_gpu_program4 = 1
  callback(:PFNGLPROGRAMLOCALPARAMETERI4INVPROC, [ GLenum, GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERI4UINVPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERI4INVPROC, [ GLenum, GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERI4IVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERSI4IVNVPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERI4UINVPROC, [ GLenum, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERI4UIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC, [ GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMENVPARAMETERIIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  GL_NV_geometry_program4 = 1
  callback(:PFNGLPROGRAMVERTEXLIMITNVPROC, [ GLenum, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREEXTPROC, [ GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC, [ GLenum, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC, [ GLenum, GLenum, GLuint, GLint, GLenum ], :void)
  GL_EXT_geometry_shader4 = 1
  callback(:PFNGLPROGRAMPARAMETERIEXTPROC, [ GLuint, GLenum, GLint ], :void)
  GL_NV_vertex_program4 = 1
  callback(:PFNGLVERTEXATTRIBI1IEXTPROC, [ GLuint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI2IEXTPROC, [ GLuint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI3IEXTPROC, [ GLuint, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI4IEXTPROC, [ GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLVERTEXATTRIBI1UIEXTPROC, [ GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI2UIEXTPROC, [ GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI3UIEXTPROC, [ GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI4UIEXTPROC, [ GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLVERTEXATTRIBI1IVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI2IVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI3IVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4IVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI1UIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI2UIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI3UIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4UIVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4BVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4SVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4UBVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBI4USVEXTPROC, [ GLuint, :pointer ], :void)
  callback(:PFNGLVERTEXATTRIBIPOINTEREXTPROC, [ GLuint, GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIIVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVERTEXATTRIBIUIVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_EXT_gpu_shader4 = 1
  callback(:PFNGLGETUNIFORMUIVEXTPROC, [ GLuint, GLint, :pointer ], :void)
  callback(:PFNGLBINDFRAGDATALOCATIONEXTPROC, [ GLuint, GLuint, :string ], :void)
  callback(:PFNGLGETFRAGDATALOCATIONEXTPROC, [ GLuint, :string ], GLint)
  callback(:PFNGLUNIFORM1UIEXTPROC, [ GLint, GLuint ], :void)
  callback(:PFNGLUNIFORM2UIEXTPROC, [ GLint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM3UIEXTPROC, [ GLint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM4UIEXTPROC, [ GLint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLUNIFORM1UIVEXTPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM2UIVEXTPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM3UIVEXTPROC, [ GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLUNIFORM4UIVEXTPROC, [ GLint, GLsizei, :pointer ], :void)
  GL_EXT_draw_instanced = 1
  callback(:PFNGLDRAWARRAYSINSTANCEDEXTPROC, [ GLenum, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLDRAWELEMENTSINSTANCEDEXTPROC, [ GLenum, GLsizei, GLenum, :pointer, GLsizei ], :void)
  GL_EXT_packed_float = 1
  GL_EXT_texture_array = 1
  GL_EXT_texture_buffer_object = 1
  callback(:PFNGLTEXBUFFEREXTPROC, [ GLenum, GLenum, GLuint ], :void)
  GL_EXT_texture_compression_latc = 1
  GL_EXT_texture_compression_rgtc = 1
  GL_EXT_texture_shared_exponent = 1
  GL_NV_depth_buffer_float = 1
  callback(:PFNGLDEPTHRANGEDNVPROC, [ GLdouble, GLdouble ], :void)
  callback(:PFNGLCLEARDEPTHDNVPROC, [ GLdouble ], :void)
  callback(:PFNGLDEPTHBOUNDSDNVPROC, [ GLdouble, GLdouble ], :void)
  GL_NV_fragment_program4 = 1
  GL_NV_framebuffer_multisample_coverage = 1
  callback(:PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC, [ GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei ], :void)
  GL_EXT_framebuffer_sRGB = 1
  GL_NV_geometry_shader4 = 1
  GL_NV_parameter_buffer_object = 1
  callback(:PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC, [ GLenum, GLuint, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC, [ GLenum, GLuint, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC, [ GLenum, GLuint, GLuint, GLsizei, :pointer ], :void)
  GL_EXT_draw_buffers2 = 1
  callback(:PFNGLCOLORMASKINDEXEDEXTPROC, [ GLuint, GLboolean, GLboolean, GLboolean, GLboolean ], :void)
  callback(:PFNGLGETBOOLEANINDEXEDVEXTPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETINTEGERINDEXEDVEXTPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLENABLEINDEXEDEXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDISABLEINDEXEDEXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLISENABLEDINDEXEDEXTPROC, [ GLenum, GLuint ], GLboolean)
  GL_NV_transform_feedback = 1
  callback(:PFNGLBEGINTRANSFORMFEEDBACKNVPROC, [ GLenum ], :void)
  callback(:PFNGLENDTRANSFORMFEEDBACKNVPROC, [], :void)
  callback(:PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC, [ GLuint, :pointer, GLenum ], :void)
  callback(:PFNGLBINDBUFFERRANGENVPROC, [ GLenum, GLuint, GLuint, ptrdiff_t, ptrdiff_t ], :void)
  callback(:PFNGLBINDBUFFEROFFSETNVPROC, [ GLenum, GLuint, GLuint, ptrdiff_t ], :void)
  callback(:PFNGLBINDBUFFERBASENVPROC, [ GLenum, GLuint, GLuint ], :void)
  callback(:PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC, [ GLuint, GLsizei, :pointer, GLenum ], :void)
  callback(:PFNGLACTIVEVARYINGNVPROC, [ GLuint, :string ], :void)
  callback(:PFNGLGETVARYINGLOCATIONNVPROC, [ GLuint, :string ], GLint)
  callback(:PFNGLGETACTIVEVARYINGNVPROC, [ GLuint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  callback(:PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC, [ GLuint, GLuint, :pointer ], :void)
  GL_EXT_bindable_uniform = 1
  callback(:PFNGLUNIFORMBUFFEREXTPROC, [ GLuint, GLint, GLuint ], :void)
  callback(:PFNGLGETUNIFORMBUFFERSIZEEXTPROC, [ GLuint, GLint ], GLint)
  callback(:PFNGLGETUNIFORMOFFSETEXTPROC, [ GLuint, GLint ], ptrdiff_t)
  GL_EXT_texture_integer = 1
  callback(:PFNGLTEXPARAMETERIIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXPARAMETERIUIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXPARAMETERIIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXPARAMETERIUIVEXTPROC, [ GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCLEARCOLORIIEXTPROC, [ GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLCLEARCOLORIUIEXTPROC, [ GLuint, GLuint, GLuint, GLuint ], :void)
  GL_GREMEDY_frame_terminator = 1
  callback(:PFNGLFRAMETERMINATORGREMEDYPROC, [], :void)
  GL_NV_conditional_render = 1
  callback(:PFNGLBEGINCONDITIONALRENDERNVPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLENDCONDITIONALRENDERNVPROC, [], :void)
  GL_NV_present_video = 1
  callback(:PFNGLPRESENTFRAMEKEYEDNVPROC, [ GLuint, :uint64_t, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint ], :void)
  callback(:PFNGLPRESENTFRAMEDUALFILLNVPROC, [ GLuint, :uint64_t, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint ], :void)
  callback(:PFNGLGETVIDEOIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVIDEOUIVNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVIDEOI64VNVPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETVIDEOUI64VNVPROC, [ GLuint, GLenum, :pointer ], :void)
  GL_EXT_transform_feedback = 1
  callback(:PFNGLBEGINTRANSFORMFEEDBACKEXTPROC, [ GLenum ], :void)
  callback(:PFNGLENDTRANSFORMFEEDBACKEXTPROC, [], :void)
  callback(:PFNGLBINDBUFFERRANGEEXTPROC, [ GLenum, GLuint, GLuint, ptrdiff_t, ptrdiff_t ], :void)
  callback(:PFNGLBINDBUFFEROFFSETEXTPROC, [ GLenum, GLuint, GLuint, ptrdiff_t ], :void)
  callback(:PFNGLBINDBUFFERBASEEXTPROC, [ GLenum, GLuint, GLuint ], :void)
  callback(:PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC, [ GLuint, GLsizei, :pointer, GLenum ], :void)
  callback(:PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC, [ GLuint, GLuint, GLsizei, :pointer, :pointer, :pointer, :string ], :void)
  GL_EXT_direct_state_access = 1
  callback(:PFNGLCLIENTATTRIBDEFAULTEXTPROC, [ GLbitfield ], :void)
  callback(:PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC, [ GLbitfield ], :void)
  callback(:PFNGLMATRIXLOADFEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXLOADDEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXMULTFEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXMULTDEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXLOADIDENTITYEXTPROC, [ GLenum ], :void)
  callback(:PFNGLMATRIXROTATEFEXTPROC, [ GLenum, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMATRIXROTATEDEXTPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMATRIXSCALEFEXTPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMATRIXSCALEDEXTPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMATRIXTRANSLATEFEXTPROC, [ GLenum, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLMATRIXTRANSLATEDEXTPROC, [ GLenum, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMATRIXFRUSTUMEXTPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMATRIXORTHOEXTPROC, [ GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLMATRIXPOPEXTPROC, [ GLenum ], :void)
  callback(:PFNGLMATRIXPUSHEXTPROC, [ GLenum ], :void)
  callback(:PFNGLMATRIXLOADTRANSPOSEFEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXLOADTRANSPOSEDEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXMULTTRANSPOSEFEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLMATRIXMULTTRANSPOSEDEXTPROC, [ GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREPARAMETERFEXTPROC, [ GLuint, GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLTEXTUREPARAMETERFVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREPARAMETERIEXTPROC, [ GLuint, GLenum, GLenum, GLint ], :void)
  callback(:PFNGLTEXTUREPARAMETERIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTURESUBIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTURESUBIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYTEXTUREIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYTEXTUREIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETTEXTUREIMAGEEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTUREPARAMETERFVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTUREPARAMETERIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC, [ GLuint, GLenum, GLint, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC, [ GLuint, GLenum, GLint, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREIMAGE3DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTURESUBIMAGE3DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLMULTITEXPARAMETERFEXTPROC, [ GLenum, GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLMULTITEXPARAMETERFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXPARAMETERIEXTPROC, [ GLenum, GLenum, GLenum, GLint ], :void)
  callback(:PFNGLMULTITEXPARAMETERIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXSUBIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXSUBIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYMULTITEXIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYMULTITEXIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint ], :void)
  callback(:PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei ], :void)
  callback(:PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETMULTITEXIMAGEEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXPARAMETERFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXPARAMETERIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC, [ GLenum, GLenum, GLint, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC, [ GLenum, GLenum, GLint, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXIMAGE3DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXSUBIMAGE3DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei ], :void)
  callback(:PFNGLBINDMULTITEXTUREEXTPROC, [ GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLENABLECLIENTSTATEINDEXEDEXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLMULTITEXCOORDPOINTEREXTPROC, [ GLenum, GLint, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLMULTITEXENVFEXTPROC, [ GLenum, GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLMULTITEXENVFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXENVIEXTPROC, [ GLenum, GLenum, GLenum, GLint ], :void)
  callback(:PFNGLMULTITEXENVIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXGENDEXTPROC, [ GLenum, GLenum, GLenum, GLdouble ], :void)
  callback(:PFNGLMULTITEXGENDVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXGENFEXTPROC, [ GLenum, GLenum, GLenum, GLfloat ], :void)
  callback(:PFNGLMULTITEXGENFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXGENIEXTPROC, [ GLenum, GLenum, GLenum, GLint ], :void)
  callback(:PFNGLMULTITEXGENIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXENVFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXENVIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXGENDVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXGENFVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXGENIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETFLOATINDEXEDVEXTPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETDOUBLEINDEXEDVEXTPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETPOINTERINDEXEDVEXTPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC, [ GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC, [ GLuint, GLenum, GLint, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC, [ GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC, [ GLenum, GLenum, GLint, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMSTRINGEXTPROC, [ GLuint, GLenum, GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC, [ GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC, [ GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMSTRINGEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC, [ GLuint, GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC, [ GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC, [ GLuint, GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC, [ GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC, [ GLuint, GLenum, GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC, [ GLuint, GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLTEXTUREPARAMETERIIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLTEXTUREPARAMETERIUIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTUREPARAMETERIIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETTEXTUREPARAMETERIUIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXPARAMETERIIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLMULTITEXPARAMETERIUIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXPARAMETERIIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGETMULTITEXPARAMETERIUIVEXTPROC, [ GLenum, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM1FEXTPROC, [ GLuint, GLint, GLfloat ], :void)
  callback(:PFNGLPROGRAMUNIFORM2FEXTPROC, [ GLuint, GLint, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMUNIFORM3FEXTPROC, [ GLuint, GLint, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMUNIFORM4FEXTPROC, [ GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat ], :void)
  callback(:PFNGLPROGRAMUNIFORM1IEXTPROC, [ GLuint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMUNIFORM2IEXTPROC, [ GLuint, GLint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMUNIFORM3IEXTPROC, [ GLuint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMUNIFORM4IEXTPROC, [ GLuint, GLint, GLint, GLint, GLint, GLint ], :void)
  callback(:PFNGLPROGRAMUNIFORM1FVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM2FVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM3FVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM4FVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM1IVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM2IVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM3IVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM4IVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC, [ GLuint, GLint, GLsizei, GLboolean, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM1UIEXTPROC, [ GLuint, GLint, GLuint ], :void)
  callback(:PFNGLPROGRAMUNIFORM2UIEXTPROC, [ GLuint, GLint, GLuint, GLuint ], :void)
  callback(:PFNGLPROGRAMUNIFORM3UIEXTPROC, [ GLuint, GLint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLPROGRAMUNIFORM4UIEXTPROC, [ GLuint, GLint, GLuint, GLuint, GLuint, GLuint ], :void)
  callback(:PFNGLPROGRAMUNIFORM1UIVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM2UIVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM3UIVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLPROGRAMUNIFORM4UIVEXTPROC, [ GLuint, GLint, GLsizei, :pointer ], :void)
  callback(:PFNGLNAMEDBUFFERDATAEXTPROC, [ GLuint, ptrdiff_t, :pointer, GLenum ], :void)
  callback(:PFNGLNAMEDBUFFERSUBDATAEXTPROC, [ GLuint, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLMAPNAMEDBUFFEREXTPROC, [ GLuint, GLenum ], :pointer)
  callback(:PFNGLUNMAPNAMEDBUFFEREXTPROC, [ GLuint ], GLboolean)
  callback(:PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETNAMEDBUFFERPOINTERVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGETNAMEDBUFFERSUBDATAEXTPROC, [ GLuint, ptrdiff_t, ptrdiff_t, :pointer ], :void)
  callback(:PFNGLTEXTUREBUFFEREXTPROC, [ GLuint, GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLMULTITEXBUFFEREXTPROC, [ GLenum, GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC, [ GLuint, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC, [ GLuint, GLenum ], GLenum)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC, [ GLuint, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC, [ GLuint, GLenum, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC, [ GLuint, GLenum, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC, [ GLuint, GLenum, GLenum, GLuint ], :void)
  callback(:PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC, [ GLuint, GLenum, GLenum, :pointer ], :void)
  callback(:PFNGLGENERATETEXTUREMIPMAPEXTPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLGENERATEMULTITEXMIPMAPEXTPROC, [ GLenum, GLenum ], :void)
  callback(:PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC, [ GLuint, GLsizei, :pointer ], :void)
  callback(:PFNGLFRAMEBUFFERREADBUFFEREXTPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC, [ GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC, [ GLuint, GLsizei, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC, [ GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC, [ GLuint, GLenum, GLuint, GLint ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC, [ GLuint, GLenum, GLuint, GLint, GLint ], :void)
  callback(:PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC, [ GLuint, GLenum, GLuint, GLint, GLenum ], :void)
  callback(:PFNGLTEXTURERENDERBUFFEREXTPROC, [ GLuint, GLenum, GLuint ], :void)
  callback(:PFNGLMULTITEXRENDERBUFFEREXTPROC, [ GLenum, GLenum, GLuint ], :void)
  GL_EXT_vertex_array_bgra = 1
  GL_EXT_texture_swizzle = 1
  GL_NV_explicit_multisample = 1
  callback(:PFNGLGETMULTISAMPLEFVNVPROC, [ GLenum, GLuint, :pointer ], :void)
  callback(:PFNGLSAMPLEMASKINDEXEDNVPROC, [ GLuint, GLbitfield ], :void)
  callback(:PFNGLTEXRENDERBUFFERNVPROC, [ GLenum, GLuint ], :void)
  GL_NV_transform_feedback2 = 1
  callback(:PFNGLBINDTRANSFORMFEEDBACKNVPROC, [ GLenum, GLuint ], :void)
  callback(:PFNGLDELETETRANSFORMFEEDBACKSNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLGENTRANSFORMFEEDBACKSNVPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLISTRANSFORMFEEDBACKNVPROC, [ GLuint ], GLboolean)
  callback(:PFNGLPAUSETRANSFORMFEEDBACKNVPROC, [], :void)
  callback(:PFNGLRESUMETRANSFORMFEEDBACKNVPROC, [], :void)
  callback(:PFNGLDRAWTRANSFORMFEEDBACKNVPROC, [ GLenum, GLuint ], :void)
  GL_ATI_meminfo = 1
  GL_AMD_performance_monitor = 1
  callback(:PFNGLGETPERFMONITORGROUPSAMDPROC, [ :pointer, GLsizei, :pointer ], :void)
  callback(:PFNGLGETPERFMONITORCOUNTERSAMDPROC, [ GLuint, :pointer, :pointer, GLsizei, :pointer ], :void)
  callback(:PFNGLGETPERFMONITORGROUPSTRINGAMDPROC, [ GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC, [ GLuint, GLuint, GLsizei, :pointer, :string ], :void)
  callback(:PFNGLGETPERFMONITORCOUNTERINFOAMDPROC, [ GLuint, GLuint, GLenum, :pointer ], :void)
  callback(:PFNGLGENPERFMONITORSAMDPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLDELETEPERFMONITORSAMDPROC, [ GLsizei, :pointer ], :void)
  callback(:PFNGLSELECTPERFMONITORCOUNTERSAMDPROC, [ GLuint, GLboolean, GLuint, GLint, :pointer ], :void)
  callback(:PFNGLBEGINPERFMONITORAMDPROC, [ GLuint ], :void)
  callback(:PFNGLENDPERFMONITORAMDPROC, [ GLuint ], :void)
  callback(:PFNGLGETPERFMONITORCOUNTERDATAAMDPROC, [ GLuint, GLenum, GLsizei, :pointer, :pointer ], :void)
  GL_AMD_texture_texture4 = 1
  GL_AMD_vertex_shader_tesselator = 1
  callback(:PFNGLTESSELLATIONFACTORAMDPROC, [ GLfloat ], :void)
  callback(:PFNGLTESSELLATIONMODEAMDPROC, [ GLenum ], :void)
  GL_EXT_provoking_vertex = 1
  callback(:PFNGLPROVOKINGVERTEXEXTPROC, [ GLenum ], :void)
  GL_EXT_texture_snorm = 1
  GL_AMD_draw_buffers_blend = 1
  callback(:PFNGLBLENDFUNCINDEXEDAMDPROC, [ GLuint, GLenum, GLenum ], :void)
  callback(:PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC, [ GLuint, GLenum, GLenum, GLenum, GLenum ], :void)
  callback(:PFNGLBLENDEQUATIONINDEXEDAMDPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC, [ GLuint, GLenum, GLenum ], :void)
  GL_APPLE_texture_range = 1
  callback(:PFNGLTEXTURERANGEAPPLEPROC, [ GLenum, GLsizei, :pointer ], :void)
  callback(:PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC, [ GLenum, GLenum, :pointer ], :void)
  GL_APPLE_float_pixels = 1
  GL_APPLE_vertex_program_evaluators = 1
  callback(:PFNGLENABLEVERTEXATTRIBAPPLEPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLDISABLEVERTEXATTRIBAPPLEPROC, [ GLuint, GLenum ], :void)
  callback(:PFNGLISVERTEXATTRIBENABLEDAPPLEPROC, [ GLuint, GLenum ], GLboolean)
  callback(:PFNGLMAPVERTEXATTRIB1DAPPLEPROC, [ GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, :pointer ], :void)
  callback(:PFNGLMAPVERTEXATTRIB1FAPPLEPROC, [ GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, :pointer ], :void)
  callback(:PFNGLMAPVERTEXATTRIB2DAPPLEPROC, [ GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, :pointer ], :void)
  callback(:PFNGLMAPVERTEXATTRIB2FAPPLEPROC, [ GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, :pointer ], :void)
  GL_APPLE_aux_depth_stencil = 1
  GL_APPLE_object_purgeable = 1
  callback(:PFNGLOBJECTPURGEABLEAPPLEPROC, [ GLenum, GLuint, GLenum ], GLenum)
  callback(:PFNGLOBJECTUNPURGEABLEAPPLEPROC, [ GLenum, GLuint, GLenum ], GLenum)
  callback(:PFNGLGETOBJECTPARAMETERIVAPPLEPROC, [ GLenum, GLuint, GLenum, :pointer ], :void)
  GL_APPLE_row_bytes = 1

end
